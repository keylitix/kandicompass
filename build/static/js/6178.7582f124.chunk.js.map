{"version":3,"file":"static/js/6178.7582f124.chunk.js","mappings":"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","sources":["common/data/enumPaymentMethod.ts","components/PaginationButtons.tsx","components/bootstrap/Option.tsx","components/bootstrap/Pagination.tsx","components/bootstrap/forms/Select.tsx","hooks/useSortableData.ts","pages/Kindy-project/BeadManagement/BeadMangementEditModals.tsx","pages/Kindy-project/BeadManagement/BeadManagementAdd.tsx","pages/Kindy-project/BeadManagement/BeadManagement.tsx","pages/kindy-components/QrTemplateModal.tsx"],"sourcesContent":["const PAYMENTS: { [key: string]: { name: string } } = {\r\n\tPAYPAL: {\r\n\t\tname: 'PayPal',\r\n\t},\r\n\tPAYONEER: {\r\n\t\tname: 'Payoneer',\r\n\t},\r\n\tSWIFT: {\r\n\t\tname: 'Swift',\r\n\t},\r\n};\r\n\r\nexport default PAYMENTS;\r\n","import React, { FC } from 'react';\r\nimport { CardFooter, CardFooterLeft, CardFooterRight } from './bootstrap/Card';\r\nimport Pagination, { PaginationItem } from './bootstrap/Pagination';\r\nimport Select from './bootstrap/forms/Select';\r\nimport Option from './bootstrap/Option';\r\n\r\nexport const PER_COUNT = {\r\n\t3: 3,\r\n\t5: 5,\r\n\t10: 10,\r\n\t25: 25,\r\n\t50: 50,\r\n};\r\n\r\nexport const dataPagination = (data: any[], currentPage: number, perPage: number) =>\r\n\tdata.filter(\r\n\t\t(i, index) => index + 1 > (currentPage - 1) * perPage && index + 1 <= currentPage * perPage,\r\n\t);\r\n\r\ninterface IPaginationButtonsProps {\r\n\tsetCurrentPage(...args: unknown[]): unknown;\r\n\tcurrentPage: number;\r\n\tperPage: number;\r\n\tsetPerPage(...args: unknown[]): unknown;\r\n\tdata: unknown[];\r\n\tlabel?: string;\r\n}\r\nconst PaginationButtons: FC<IPaginationButtonsProps> = ({\r\n\tsetCurrentPage,\r\n\tcurrentPage,\r\n\tperPage,\r\n\tsetPerPage,\r\n\tdata,\r\n\tlabel = 'items',\r\n}) => {\r\n\tconst totalItems = data.length;\r\n\tconst totalPage = Math.ceil(totalItems / perPage);\r\n\r\n\tconst pagination = () => {\r\n\t\tlet items = [];\r\n\r\n\t\tlet i = currentPage - 1;\r\n\t\twhile (i >= currentPage - 1 && i > 0) {\r\n\t\t\titems.push(\r\n\t\t\t\t<PaginationItem key={i} onClick={() => setCurrentPage(currentPage - 1)}>\r\n\t\t\t\t\t{i}\r\n\t\t\t\t</PaginationItem>,\r\n\t\t\t);\r\n\r\n\t\t\ti -= 1;\r\n\t\t}\r\n\r\n\t\titems = items.reverse();\r\n\r\n\t\titems.push(\r\n\t\t\t<PaginationItem key={currentPage} isActive onClick={() => setCurrentPage(currentPage)}>\r\n\t\t\t\t{currentPage}\r\n\t\t\t</PaginationItem>,\r\n\t\t);\r\n\r\n\t\ti = currentPage + 1;\r\n\t\twhile (i <= currentPage + 1 && i <= totalPage) {\r\n\t\t\titems.push(\r\n\t\t\t\t<PaginationItem key={i} onClick={() => setCurrentPage(currentPage + 1)}>\r\n\t\t\t\t\t{i}\r\n\t\t\t\t</PaginationItem>,\r\n\t\t\t);\r\n\r\n\t\t\ti += 1;\r\n\t\t}\r\n\r\n\t\treturn items;\r\n\t};\r\n\r\n\tconst getInfo = () => {\r\n\t\tconst start = perPage * (currentPage - 1) + 1;\r\n\r\n\t\tconst end = perPage * currentPage;\r\n\r\n\t\treturn (\r\n\t\t\t<span className='pagination__desc'>\r\n\t\t\t\tShowing {start} to {end > totalItems ? totalItems : end} of {totalItems} {label}\r\n\t\t\t</span>\r\n\t\t);\r\n\t};\r\n\r\n\treturn (\r\n\t\t<CardFooter>\r\n\t\t\t<CardFooterLeft>\r\n\t\t\t\t<span className='text-muted'>{getInfo()}</span>\r\n\t\t\t</CardFooterLeft>\r\n\r\n\t\t\t<CardFooterRight className='d-flex'>\r\n\t\t\t\t{totalPage > 1 && (\r\n\t\t\t\t\t// @ts-ignore\r\n\t\t\t\t\t<Pagination ariaLabel={label}>\r\n\t\t\t\t\t\t<PaginationItem\r\n\t\t\t\t\t\t\tisFirst\r\n\t\t\t\t\t\t\tisDisabled={!(currentPage - 1 > 0)}\r\n\t\t\t\t\t\t\tonClick={() => setCurrentPage(1)}\r\n\t\t\t\t\t\t/>\r\n\t\t\t\t\t\t<PaginationItem\r\n\t\t\t\t\t\t\tisPrev\r\n\t\t\t\t\t\t\tisDisabled={!(currentPage - 1 > 0)}\r\n\t\t\t\t\t\t\tonClick={() => setCurrentPage(currentPage - 1)}\r\n\t\t\t\t\t\t/>\r\n\t\t\t\t\t\t{currentPage - 1 > 1 && (\r\n\t\t\t\t\t\t\t<PaginationItem onClick={() => setCurrentPage(currentPage - 2)}>\r\n\t\t\t\t\t\t\t\t...\r\n\t\t\t\t\t\t\t</PaginationItem>\r\n\t\t\t\t\t\t)}\r\n\t\t\t\t\t\t{pagination()}\r\n\t\t\t\t\t\t{currentPage + 1 < totalPage && (\r\n\t\t\t\t\t\t\t<PaginationItem onClick={() => setCurrentPage(currentPage + 2)}>\r\n\t\t\t\t\t\t\t\t...\r\n\t\t\t\t\t\t\t</PaginationItem>\r\n\t\t\t\t\t\t)}\r\n\t\t\t\t\t\t<PaginationItem\r\n\t\t\t\t\t\t\tisNext\r\n\t\t\t\t\t\t\tisDisabled={!(currentPage + 1 <= totalPage)}\r\n\t\t\t\t\t\t\tonClick={() => setCurrentPage(currentPage + 1)}\r\n\t\t\t\t\t\t/>\r\n\t\t\t\t\t\t<PaginationItem\r\n\t\t\t\t\t\t\tisLast\r\n\t\t\t\t\t\t\tisDisabled={!(currentPage + 1 <= totalPage)}\r\n\t\t\t\t\t\t\tonClick={() => setCurrentPage(totalPage)}\r\n\t\t\t\t\t\t/>\r\n\t\t\t\t\t</Pagination>\r\n\t\t\t\t)}\r\n\r\n\t\t\t\t<Select\r\n\t\t\t\t\tsize='sm'\r\n\t\t\t\t\tariaLabel='Per'\r\n\t\t\t\t\tonChange={(e: { target: { value: string } }) => {\r\n\t\t\t\t\t\tsetPerPage(parseInt(e.target.value, 10));\r\n\t\t\t\t\t\tsetCurrentPage(1);\r\n\t\t\t\t\t}}\r\n\t\t\t\t\tvalue={perPage.toString()}>\r\n\t\t\t\t\t{Object.keys(PER_COUNT).map((i) => (\r\n\t\t\t\t\t\t<Option key={i} value={i}>\r\n\t\t\t\t\t\t\t{i}\r\n\t\t\t\t\t\t</Option>\r\n\t\t\t\t\t))}\r\n\t\t\t\t</Select>\r\n\t\t\t</CardFooterRight>\r\n\t\t</CardFooter>\r\n\t);\r\n};\r\n\r\nexport default PaginationButtons;\r\n","import React, { FC, HTMLAttributes } from 'react';\r\n\r\ninterface IOptionProps extends HTMLAttributes<HTMLOptionElement> {\r\n\tchildren: string;\r\n\tvalue?: string | number;\r\n\tdisabled?: boolean;\r\n\tariaLabelledby?: string | null;\r\n}\r\nconst Option: FC<IOptionProps> = ({ children, value, disabled, ariaLabelledby, ...props }) => {\r\n\treturn (\r\n\t\t<option\r\n\t\t\tvalue={value}\r\n\t\t\tdisabled={disabled}\r\n\t\t\taria-labelledby={ariaLabelledby || children}\r\n\t\t\t{...props}>\r\n\t\t\t{children}\r\n\t\t</option>\r\n\t);\r\n};\r\n\r\nexport interface IOptionsProps {\r\n\tlist: {\r\n\t\tvalue?: string | number;\r\n\t\ttext?: string | number;\r\n\t\tlabel?: string | number;\r\n\t}[];\r\n}\r\n// @ts-ignore\r\nexport const Options: FC<IOptionsProps> = ({ list }) => {\r\n\treturn list?.map((item) => (\r\n\t\t// eslint-disable-next-line react/jsx-props-no-spreading\r\n\t\t<Option key={item.value} value={item.value} {...item}>\r\n\t\t\t{(item.text as string) || (item.label as string)}\r\n\t\t</Option>\r\n\t));\r\n};\r\n\r\nexport default Option;\r\n","import React, { forwardRef, HTMLAttributes, ReactElement, ReactNode } from 'react';\r\nimport classNames from 'classnames';\r\nimport Icon from '../icon/Icon';\r\n\r\ninterface IPaginationItemProps extends HTMLAttributes<HTMLLIElement> {\r\n\tclassName?: string;\r\n\tisDisabled?: boolean;\r\n\tisActive?: boolean;\r\n\tisPrev?: boolean;\r\n\tisFirst?: boolean;\r\n\tisNext?: boolean;\r\n\tisLast?: boolean;\r\n\tchildren?: ReactNode;\r\n\tonClick?(...args: unknown[]): unknown | undefined;\r\n}\r\nexport const PaginationItem = forwardRef<HTMLLIElement, IPaginationItemProps>(\r\n\t(\r\n\t\t{\r\n\t\t\tclassName,\r\n\t\t\tisDisabled,\r\n\t\t\tisActive,\r\n\t\t\tisPrev,\r\n\t\t\tisFirst,\r\n\t\t\tisNext,\r\n\t\t\tisLast,\r\n\t\t\tchildren,\r\n\t\t\tonClick,\r\n\t\t\t...props\r\n\t\t},\r\n\t\tref,\r\n\t) => {\r\n\t\treturn (\r\n\t\t\t<li\r\n\t\t\t\tref={ref}\r\n\t\t\t\tclassName={classNames(\r\n\t\t\t\t\t'page-item',\r\n\t\t\t\t\t{\r\n\t\t\t\t\t\tdisabled: isDisabled,\r\n\t\t\t\t\t\tactive: isActive,\r\n\t\t\t\t\t},\r\n\t\t\t\t\tclassName,\r\n\t\t\t\t)}\r\n\t\t\t\t{...props}>\r\n\t\t\t\t<span\r\n\t\t\t\t\trole='button'\r\n\t\t\t\t\tonClick={onClick}\r\n\t\t\t\t\tonKeyDown={onClick}\r\n\t\t\t\t\tclassName='page-link'\r\n\t\t\t\t\ttabIndex={isDisabled ? -1 : undefined}\r\n\t\t\t\t\taria-disabled={isDisabled ? 'true' : undefined}\r\n\t\t\t\t\taria-label={\r\n\t\t\t\t\t\t(isPrev && 'First Page') || (isNext && 'Last Page') || `${children} page`\r\n\t\t\t\t\t}>\r\n\t\t\t\t\t{isPrev && <Icon icon='ChevronLeft' />}\r\n\t\t\t\t\t{isFirst && <Icon icon='FirstPage' />}\r\n\t\t\t\t\t{isNext && <Icon icon='ChevronRight' />}\r\n\t\t\t\t\t{isLast && <Icon icon='LastPage' />}\r\n\t\t\t\t\t{children}\r\n\t\t\t\t</span>\r\n\t\t\t</li>\r\n\t\t);\r\n\t},\r\n);\r\nPaginationItem.displayName = 'PaginationItem';\r\n\r\ninterface IPaginationProps extends HTMLAttributes<HTMLElement> {\r\n\tariaLabel: string;\r\n\tchildren:\r\n\t\t| ReactElement<IPaginationItemProps>\r\n\t\t| ReactElement<IPaginationItemProps>[]\r\n\t\t| ReactNode\r\n\t\t| ReactNode[];\r\n\tclassName?: string | undefined;\r\n\tsize?: 'sm' | 'lg' | null;\r\n}\r\nconst Pagination = forwardRef<HTMLDivElement, IPaginationProps>(\r\n\t({ ariaLabel, className, children, size, ...props }, ref) => {\r\n\t\treturn (\r\n\t\t\t<nav ref={ref} aria-label={ariaLabel} className={className} {...props}>\r\n\t\t\t\t<ul className={classNames('pagination', { [`pagination-${size}`]: size }, 'm-0')}>\r\n\t\t\t\t\t{children}\r\n\t\t\t\t</ul>\r\n\t\t\t</nav>\r\n\t\t);\r\n\t},\r\n);\r\nPagination.displayName = 'Pagination';\r\n\r\nexport default Pagination;\r\n","import React, { forwardRef, HTMLAttributes, ReactNode } from 'react';\r\nimport classNames from 'classnames';\r\nimport Option, { IOptionsProps, Options } from '../Option';\r\nimport Validation from './Validation';\r\n\r\ninterface ISelectProps extends Partial<IOptionsProps>, HTMLAttributes<HTMLSelectElement> {\r\n\tid?: string;\r\n\tclassName?: string;\r\n\tname?: string;\r\n\tchildren?: ReactNode;\r\n\tariaLabel: string;\r\n\tplaceholder?: string;\r\n\tsize?: 'lg' | 'sm';\r\n\tmultiple?: boolean;\r\n\tdisabled?: boolean;\r\n\trequired?: boolean;\r\n\tariaDescribedby?: string;\r\n\tariaLabelledby?: string;\r\n\ttitle?: string;\r\n\tvalue?: string | string[];\r\n\tdefaultValue?: string | string[];\r\n\tisTouched?: boolean;\r\n\tisValid?: boolean;\r\n\tinvalidFeedback?: string;\r\n\tvalidFeedback?: string;\r\n\tisValidMessage?: boolean;\r\n\tisTooltipFeedback?: boolean;\r\n\tonBlur?(...args: unknown[]): unknown;\r\n\tonChange?(...args: unknown[]): unknown;\r\n\tonFocus?(...args: unknown[]): unknown;\r\n\tonInput?(...args: unknown[]): unknown;\r\n\tonInvalid?(...args: unknown[]): unknown;\r\n\tonSelect?(...args: unknown[]): unknown;\r\n}\r\nconst Select = forwardRef<HTMLSelectElement, ISelectProps>(\r\n\t(\r\n\t\t{\r\n\t\t\tid,\r\n\t\t\tname,\r\n\t\t\tclassName,\r\n\t\t\tchildren,\r\n\t\t\trequired,\r\n\t\t\tplaceholder,\r\n\t\t\tariaDescribedby,\r\n\t\t\tariaLabelledby,\r\n\t\t\tariaLabel,\r\n\t\t\tlist,\r\n\t\t\tmultiple,\r\n\t\t\ttitle,\r\n\t\t\tsize,\r\n\t\t\tdisabled,\r\n\t\t\tvalue,\r\n\t\t\tdefaultValue,\r\n\t\t\tisValid,\r\n\t\t\tisTouched,\r\n\t\t\tinvalidFeedback,\r\n\t\t\tvalidFeedback,\r\n\t\t\tisValidMessage = true,\r\n\t\t\tisTooltipFeedback,\r\n\t\t\tonBlur,\r\n\t\t\tonChange,\r\n\t\t\tonFocus,\r\n\t\t\tonInput,\r\n\t\t\tonInvalid,\r\n\t\t\tonSelect,\r\n\t\t\t...props\r\n\t\t},\r\n\r\n\t\tref,\r\n\t) => {\r\n\t\treturn (\r\n\t\t\t<>\r\n\t\t\t\t<select\r\n\t\t\t\t\tref={ref}\r\n\t\t\t\t\tid={id}\r\n\t\t\t\t\tclassName={classNames(\r\n\t\t\t\t\t\t'form-select',\r\n\t\t\t\t\t\t{\r\n\t\t\t\t\t\t\t[`form-select-${size}`]: size,\r\n\t\t\t\t\t\t\t'text-muted': value === '' && placeholder,\r\n\t\t\t\t\t\t\t'is-invalid': !isValid && isTouched && invalidFeedback,\r\n\t\t\t\t\t\t\t'is-valid': !isValid && isTouched && !invalidFeedback,\r\n\t\t\t\t\t\t},\r\n\t\t\t\t\t\tclassName,\r\n\t\t\t\t\t)}\r\n\t\t\t\t\tname={name}\r\n\t\t\t\t\taria-label={ariaLabel}\r\n\t\t\t\t\taria-describedby={ariaDescribedby}\r\n\t\t\t\t\taria-labelledby={ariaLabelledby}\r\n\t\t\t\t\tmultiple={multiple}\r\n\t\t\t\t\tdisabled={disabled}\r\n\t\t\t\t\ttitle={title}\r\n\t\t\t\t\tvalue={value}\r\n\t\t\t\t\tdefaultValue={defaultValue}\r\n\t\t\t\t\trequired={required}\r\n\t\t\t\t\tonBlur={onBlur}\r\n\t\t\t\t\tonChange={onChange}\r\n\t\t\t\t\tonFocus={onFocus}\r\n\t\t\t\t\tonInput={onInput}\r\n\t\t\t\t\tonInvalid={onInvalid}\r\n\t\t\t\t\tonSelect={onSelect}\r\n\t\t\t\t\t{...props}>\r\n\t\t\t\t\t{placeholder && (\r\n\t\t\t\t\t\t<Option value='' hidden>\r\n\t\t\t\t\t\t\t{placeholder}\r\n\t\t\t\t\t\t</Option>\r\n\t\t\t\t\t)}\r\n\t\t\t\t\t{children || (list && <Options list={list} />)}\r\n\t\t\t\t</select>\r\n\t\t\t\t{isValidMessage && (\r\n\t\t\t\t\t<Validation\r\n\t\t\t\t\t\tisTouched={isTouched}\r\n\t\t\t\t\t\tinvalidFeedback={invalidFeedback}\r\n\t\t\t\t\t\tvalidFeedback={validFeedback}\r\n\t\t\t\t\t\tisTooltip={isTooltipFeedback}\r\n\t\t\t\t\t/>\r\n\t\t\t\t)}\r\n\t\t\t</>\r\n\t\t);\r\n\t},\r\n);\r\nSelect.displayName = 'Select';\r\n\r\nexport default Select;\r\n","import { useMemo, useState } from 'react';\r\n\r\nconst useSortableData = (items: any[], config = null) => {\r\n\tconst [sortConfig, setSortConfig] = useState(config);\r\n\r\n\tconst sortedItems = useMemo(() => {\r\n\t\tconst sortableItems = [...items];\r\n\t\tif (sortConfig !== null) {\r\n\t\t\tsortableItems.sort((a, b) => {\r\n\t\t\t\t// @ts-ignore\r\n\t\t\t\tif (a[sortConfig.key] < b[sortConfig.key]) {\r\n\t\t\t\t\t// @ts-ignore\r\n\t\t\t\t\treturn sortConfig.direction === 'ascending' ? -1 : 1;\r\n\t\t\t\t}\r\n\t\t\t\t// @ts-ignore\r\n\t\t\t\tif (a[sortConfig.key] > b[sortConfig.key]) {\r\n\t\t\t\t\t// @ts-ignore\r\n\t\t\t\t\treturn sortConfig.direction === 'ascending' ? 1 : -1;\r\n\t\t\t\t}\r\n\t\t\t\treturn 0;\r\n\t\t\t});\r\n\t\t}\r\n\t\treturn sortableItems;\r\n\t}, [items, sortConfig]);\r\n\r\n\tconst requestSort = (key: any) => {\r\n\t\tlet direction = 'ascending';\r\n\t\t// @ts-ignore\r\n\t\tif (sortConfig && sortConfig.key === key && sortConfig.direction === 'ascending') {\r\n\t\t\tdirection = 'descending';\r\n\t\t}\r\n\t\t// @ts-ignore\r\n\t\tsetSortConfig({ key, direction });\r\n\t};\r\n\r\n\tconst getClassNamesFor = (key: any) => {\r\n\t\tif (!sortConfig) {\r\n\t\t\treturn 'd-none';\r\n\t\t}\r\n\r\n\t\t// @ts-ignore\r\n\t\treturn sortConfig.key === key ? sortConfig.direction : 'd-none';\r\n\t};\r\n\r\n\treturn { items: sortedItems, requestSort, getClassNamesFor, sortConfig };\r\n};\r\n\r\nexport default useSortableData;\r\n","import React, { FC, useState, useEffect } from 'react';\r\nimport { useFormik } from 'formik';\r\nimport Modal, {\r\n  ModalBody,\r\n  ModalFooter,\r\n  ModalHeader,\r\n  ModalTitle,\r\n} from '../../../components/bootstrap/Modal';\r\nimport showNotification from '../../../components/extras/showNotification';\r\nimport Icon from '../../../components/icon/Icon';\r\nimport FormGroup from '../../../components/bootstrap/forms/FormGroup';\r\nimport Input from '../../../components/bootstrap/forms/Input';\r\nimport Button from '../../../components/bootstrap/Button';\r\nimport Textarea from '../../../components/bootstrap/forms/Textarea';\r\nimport { useUpdateBeadMutation } from '../../../redux/api/beadApi';\r\n\r\ninterface IBeadEditModalProps {\r\n  id: string;\r\n  isOpen: boolean;\r\n  editItem?: any;\r\n  setIsOpen: (isOpen: boolean) => void;\r\n  onSuccess?: () => void;\r\n}\r\n\r\nconst BeadEditModal: FC<IBeadEditModalProps> = ({ id, isOpen, setIsOpen, editItem, onSuccess }) => {\r\n  const [updateBead, { isLoading }] = useUpdateBeadMutation();\r\n  const [isUploading, setIsUploading] = useState(false);\r\n  const [localImage, setLocalImage] = useState('');\r\n\r\n  const formik = useFormik({\r\n    initialValues: {\r\n      beadName: editItem?.beadName || '',\r\n      beadType: editItem?.beadType || '',\r\n      material: editItem?.material || '',\r\n      color: editItem?.color || '',\r\n      size: editItem?.size || 0,\r\n      shape: editItem?.shape || '',\r\n      weight: editItem?.weight || 0,\r\n      finish: editItem?.finish || '',\r\n      quantity: editItem?.quantity || 0,\r\n      pricePerUnit: editItem?.pricePerUnit || 0,\r\n      supplier: editItem?.supplier || '',\r\n      productCode: editItem?.productCode || '',\r\n      description: editItem?.description || '',\r\n      image: editItem?.imageUrl || '',\r\n    },\r\n    enableReinitialize: true,\r\n    onSubmit: async (values) => {\r\n      try {\r\n        const beadData = {\r\n          ...values,\r\n          size: Number(values.size),\r\n          weight: Number(values.weight),\r\n          quantity: Number(values.quantity),\r\n          pricePerUnit: Number(values.pricePerUnit),\r\n          image: localImage || values.image,\r\n        };\r\n\r\n        const updatedBead = await updateBead({\r\n          id: editItem._id,\r\n          body: beadData\r\n        }).unwrap();\r\n\r\n        showNotification(\r\n          <span className='d-flex align-items-center'>\r\n            <Icon icon='CheckCircle' size='lg' className='me-1' />\r\n            <span>Bead Updated</span>\r\n          </span>,\r\n          `${values.beadName} has been updated successfully.`,\r\n        );\r\n\r\n        setLocalImage('');\r\n        setIsOpen(false);\r\n        if (onSuccess) onSuccess();\r\n      } catch (error) {\r\n        console.error('Error updating bead:', error);\r\n        showNotification(\r\n          <span className='d-flex align-items-center'>\r\n            <Icon icon='Error' size='lg' className='me-1' />\r\n            <span>Error</span>\r\n          </span>,\r\n          'Failed to update bead. Please try again.',\r\n        );\r\n      }\r\n    },\r\n  });\r\n\r\n  useEffect(() => {\r\n    if (editItem) {\r\n      formik.resetForm({\r\n        values: {\r\n          beadName: editItem?.beadName || '',\r\n          beadType: editItem?.beadType || '',\r\n          material: editItem?.material || '',\r\n          color: editItem?.color || '',\r\n          size: editItem?.size || 0,\r\n          shape: editItem?.shape || '',\r\n          weight: editItem?.weight || 0,\r\n          finish: editItem?.finish || '',\r\n          quantity: editItem?.quantity || 0,\r\n          pricePerUnit: editItem?.pricePerUnit || 0,\r\n          supplier: editItem?.supplier || '',\r\n          productCode: editItem?.productCode || '',\r\n          description: editItem?.description || '',\r\n          image: editItem?.imageUrl || '',\r\n        }\r\n      });\r\n      setLocalImage('');\r\n    }\r\n  }, [editItem]);\r\n\r\n  const convertToBase64 = (file: File): Promise<string> => {\r\n    return new Promise((resolve, reject) => {\r\n      const reader = new FileReader();\r\n      reader.readAsDataURL(file);\r\n      reader.onload = () => resolve(reader.result as string);\r\n      reader.onerror = (error) => reject(error);\r\n    });\r\n  };\r\n\r\n  const handleFileUpload = async (e: React.ChangeEvent<HTMLInputElement>) => {\r\n    if (e.target.files && e.target.files[0]) {\r\n      setIsUploading(true);\r\n      const file = e.target.files[0];\r\n\r\n      if (file.size > 5 * 1024 * 1024) {\r\n        showNotification(\r\n          <span className='d-flex align-items-center'>\r\n            <Icon icon='Error' size='lg' className='me-1' />\r\n            <span>File Too Large</span>\r\n          </span>,\r\n          'Maximum file size is 5MB. Please choose a smaller image.',\r\n        );\r\n        setIsUploading(false);\r\n        return;\r\n      }\r\n\r\n      try {\r\n        const base64Image = await convertToBase64(file);\r\n        setLocalImage(base64Image);\r\n        \r\n        showNotification(\r\n          <span className='d-flex align-items-center'>\r\n            <Icon icon='CheckCircle' size='lg' className='me-1' />\r\n            <span>Image Ready</span>\r\n          </span>,\r\n          'Image will be saved with the bead.',\r\n        );\r\n      } catch (error) {\r\n        console.error('Error converting image:', error);\r\n        showNotification(\r\n          <span className='d-flex align-items-center'>\r\n            <Icon icon='Error' size='lg' className='me-1' />\r\n            <span>Upload Failed</span>\r\n          </span>,\r\n          'Failed to process image. Please try again.',\r\n        );\r\n      } finally {\r\n        setIsUploading(false);\r\n      }\r\n    }\r\n  };\r\n\r\n  const removeImage = () => {\r\n    setLocalImage('');\r\n    formik.setFieldValue('image', '');\r\n  };\r\n\r\n  const displayImage = localImage || formik.values.image;\r\n\r\n  if (!isOpen) return null;\r\n\r\n  return (\r\n    <Modal isOpen={isOpen} setIsOpen={setIsOpen} size='xl' titleId={id} isStaticBackdrop>\r\n      <ModalHeader setIsOpen={setIsOpen} className='p-4'>\r\n        <ModalTitle id={id}>Edit Bead</ModalTitle>\r\n      </ModalHeader>\r\n      <ModalBody className='px-4'>\r\n        <div className='row g-4'>\r\n          <FormGroup id='beadName' label='Bead Name' className='col-md-12'>\r\n            <Input \r\n              name='beadName'\r\n              onChange={formik.handleChange}\r\n              value={formik.values.beadName}\r\n              required\r\n            />\r\n          </FormGroup>\r\n\r\n          <FormGroup label='Bead Image' className='col-12'>\r\n            <div className='upload-container d-flex justify-content-center align-items-center p-4' style={{\r\n              border: '2px dashed #ccc',\r\n              borderRadius: '8px',\r\n              minHeight: '200px',\r\n              backgroundColor: displayImage ? 'transparent' : '#f8f9fa',\r\n              position: 'relative'\r\n            }}>\r\n              {isUploading ? (\r\n                <div className=\"text-center\">\r\n                  <Icon icon=\"Loop\" size=\"3x\" className=\"spinning\" />\r\n                  <p>Processing image...</p>\r\n                </div>\r\n              ) : displayImage ? (\r\n                <div className=\"text-center\">\r\n                  <img \r\n                    src={displayImage} \r\n                    alt=\"Bead preview\" \r\n                    style={{ \r\n                      maxHeight: '150px', \r\n                      maxWidth: '100%', \r\n                      marginBottom: '1rem',\r\n                      borderRadius: '4px'\r\n                    }}\r\n                  />\r\n                  <div className=\"d-flex gap-2 justify-content-center\">\r\n                    <Button \r\n                      color=\"info\"\r\n                      onClick={() => document.getElementById('file-upload')?.click()}\r\n                      icon=\"Image\"\r\n                      isDisable={isLoading}\r\n                    >\r\n                      Change Image\r\n                    </Button>\r\n                    <Button \r\n                      color=\"danger\"\r\n                      onClick={removeImage}\r\n                      icon=\"Delete\"\r\n                      isDisable={isLoading}\r\n                    >\r\n                      Remove\r\n                    </Button>\r\n                  </div>\r\n                </div>\r\n              ) : (\r\n                <div className='text-center'>\r\n                  <div className='cloud-icon mb-3'>\r\n                    <Icon icon='CloudUpload' size='3x' />\r\n                  </div>\r\n                  <p><span style={{ color: '#0d6efd' }}>CLICK TO BROWSE</span> OR DRAG IT HERE</p>\r\n                  <p className='text-muted'>JPG, PNG (Max 5MB)</p>\r\n                  <Button \r\n                    color='info' \r\n                    onClick={() => document.getElementById('file-upload')?.click()}\r\n                    icon=\"Upload\"\r\n                    isDisable={isLoading}\r\n                  >\r\n                    Select Image\r\n                  </Button>\r\n                </div>\r\n              )}\r\n              <input \r\n                type='file' \r\n                id='file-upload' \r\n                className='d-none' \r\n                onChange={handleFileUpload}\r\n                accept='image/*'\r\n                disabled={isUploading || isLoading}\r\n              />\r\n            </div>\r\n          </FormGroup>\r\n\r\n          <FormGroup id='beadType' label='Bead Type' className='col-md-4'>\r\n            <Input \r\n              name='beadType'\r\n              onChange={formik.handleChange}\r\n              value={formik.values.beadType}\r\n              required\r\n            />\r\n          </FormGroup>\r\n          \r\n          <FormGroup id='material' label='Material' className='col-md-4'>\r\n            <Input \r\n              name='material'\r\n              onChange={formik.handleChange}\r\n              value={formik.values.material}\r\n              required\r\n            />\r\n          </FormGroup>\r\n          \r\n          <FormGroup id='color' label='Color' className='col-md-4'>\r\n            <Input \r\n              name='color'\r\n              onChange={formik.handleChange}\r\n              value={formik.values.color}\r\n              required\r\n            />\r\n          </FormGroup>\r\n          \r\n          <FormGroup id='size' label='Size (mm)' className='col-md-4'>\r\n            <Input \r\n              name='size'\r\n              type='number'\r\n              onChange={formik.handleChange}\r\n              value={formik.values.size}\r\n              required\r\n            />\r\n          </FormGroup>\r\n          \r\n          <FormGroup id='shape' label='Shape' className='col-md-4'>\r\n            <Input \r\n              name='shape'\r\n              onChange={formik.handleChange}\r\n              value={formik.values.shape}\r\n              required\r\n            />\r\n          </FormGroup>\r\n          \r\n          <FormGroup id='weight' label='Weight (g)' className='col-md-4'>\r\n            <Input \r\n              name='weight'\r\n              type='number'\r\n              onChange={formik.handleChange}\r\n              value={formik.values.weight}\r\n              required\r\n            />\r\n          </FormGroup>\r\n          \r\n          <FormGroup id='finish' label='Finish' className='col-md-4'>\r\n            <Input \r\n              name='finish'\r\n              onChange={formik.handleChange}\r\n              value={formik.values.finish}\r\n            />\r\n          </FormGroup>\r\n          \r\n          <FormGroup id='quantity' label='Quantity' className='col-md-4'>\r\n            <Input \r\n              name='quantity'\r\n              type='number'\r\n              onChange={formik.handleChange}\r\n              value={formik.values.quantity}\r\n              required\r\n            />\r\n          </FormGroup>\r\n          \r\n          <FormGroup id='pricePerUnit' label='Price Per Unit ($)' className='col-md-4'>\r\n            <Input \r\n              name='pricePerUnit'\r\n              type='number'\r\n              onChange={formik.handleChange}\r\n              value={formik.values.pricePerUnit}\r\n              required\r\n            />\r\n          </FormGroup>\r\n          \r\n          <FormGroup id='supplier' label='Supplier' className='col-md-4'>\r\n            <Input \r\n              name='supplier'\r\n              onChange={formik.handleChange}\r\n              value={formik.values.supplier}\r\n            />\r\n          </FormGroup>\r\n          \r\n          <FormGroup id='productCode' label='Product Code' className='col-md-4'>\r\n            <Input \r\n              name='productCode'\r\n              onChange={formik.handleChange}\r\n              value={formik.values.productCode}\r\n            />\r\n          </FormGroup>\r\n          \r\n          <FormGroup id='description' label='Description' className='col-md-12'>\r\n            <Textarea \r\n              name='description'\r\n              rows={3}\r\n              onChange={formik.handleChange}\r\n              value={formik.values.description}\r\n            />\r\n          </FormGroup>\r\n        </div>\r\n      </ModalBody>\r\n      <ModalFooter className='px-4 pb-4'>\r\n        <Button \r\n          color='secondary' \r\n          onClick={() => setIsOpen(false)}\r\n          className='me-2'\r\n          isDisable={isLoading}\r\n        >\r\n          Cancel\r\n        </Button>\r\n        <Button \r\n          color='primary' \r\n          onClick={() => formik.handleSubmit()}\r\n          isDisable={isLoading || isUploading}\r\n         \r\n        >\r\n          {isLoading ? 'Updating...' : 'Update Bead'}\r\n        </Button>\r\n      </ModalFooter>\r\n    </Modal>\r\n  );\r\n};\r\n\r\nexport default BeadEditModal;","import React, { FC, useState, useEffect } from 'react';\r\nimport { useFormik } from 'formik';\r\nimport Modal, { ModalBody, ModalFooter, ModalHeader, ModalTitle } from '../../../components/bootstrap/Modal';\r\nimport showNotification from '../../../components/extras/showNotification';\r\nimport Icon from '../../../components/icon/Icon';\r\nimport FormGroup from '../../../components/bootstrap/forms/FormGroup';\r\nimport Input from '../../../components/bootstrap/forms/Input';\r\nimport Button from '../../../components/bootstrap/Button';\r\nimport Textarea from '../../../components/bootstrap/forms/Textarea';\r\nimport Select from '../../../components/bootstrap/forms/Select';\r\nimport { useAddBeadMutation, useDeleteBeadMutation, useUpdateBeadMutation, useUploadBeadImageMutation, useUploadBeadImagesMutation } from '../../../redux/api/beadApi';\r\nimport { IBead } from '../../../types/bead';\r\nimport { useGetThreadsQuery } from '../../../redux/api/thredApi';\r\n\r\n\r\ninterface IBeadAddModalProps {\r\n  id: string;\r\n  isOpen: boolean;\r\n  editItem?: IBead;\r\n  setIsOpen: (isOpen: boolean) => void;\r\n  onSuccess?: () => void;\r\n}\r\n\r\nconst BeadAddModal: FC<IBeadAddModalProps> = ({ id, isOpen, setIsOpen, editItem, onSuccess }) => {\r\n  const [addBead] = useAddBeadMutation();\r\n  const [updateBead] = useUpdateBeadMutation();\r\n  const [uploadBeadImages] = useUploadBeadImagesMutation();\r\n  const [deleteBead] = useDeleteBeadMutation();\r\n  const [isUploading, setIsUploading] = useState(false);\r\n  const [isSubmitting, setIsSubmitting] = useState(false);\r\n  const [imageFiles, setImageFiles] = useState<File[]>([]);\r\n  const [imagePreviews, setImagePreviews] = useState<string[]>([]);\r\n  const [isDragging, setIsDragging] = useState(false);\r\n\r\n  // Fetch threads data\r\n  const { data: threadsResponse, isLoading: isThreadsLoading } = useGetThreadsQuery({\r\n    page_number: 1,\r\n    page_size: 100 \r\n  });\r\n\r\n  const threads = threadsResponse?.data?.data || [];\r\n  console.log(\"threadsthreadsthreads\",threads);\r\n  \r\n\r\n\r\n\r\n  const shapeOptions = ['Round', 'Oval', 'Cube', 'Cylinder', 'Heart', 'Star', 'Bicone', 'Drop', 'Petal', 'Donut'];\r\n  const finishOptions = ['Matte', 'Glossy', 'Metallic', 'Pearl', 'Transparent', 'Opaque', 'Iridescent'];\r\n  const unitOptions = ['pieces', 'grams', 'ounces', 'pounds', 'kilograms'];\r\n\r\n  useEffect(() => {\r\n    if (!isOpen) {\r\n      imagePreviews.forEach(URL.revokeObjectURL);\r\n      setImagePreviews([]);\r\n      setImageFiles([]);\r\n    }\r\n  }, [isOpen]);\r\n\r\n  const formik = useFormik<Omit<IBead, '_id'>>({\r\n    initialValues: {\r\n      beadName: editItem?.beadName || '',\r\n      beadType: editItem?.beadType || '',\r\n      threadId: editItem?._id || '',\r\n      material: editItem?.material || '',\r\n      color: editItem?.color || '',\r\n      size: editItem?.size || 0,\r\n      shape: editItem?.shape || '',\r\n      weight: editItem?.weight || 0,\r\n      finish: editItem?.finish || '',\r\n      quantity: editItem?.quantity || 0,\r\n      pricePerUnit: editItem?.pricePerUnit || 0,\r\n      supplier: editItem?.supplier || '',\r\n      productCode: editItem?.productCode || '',\r\n      description: editItem?.description || '',\r\n      imageUrl: editItem?.imageUrl || '',\r\n      unitOfMeasure: editItem?.unitOfMeasure || 'pieces',\r\n      inventoryLocation: editItem?.inventoryLocation || '',\r\n      minimumStockLevel: editItem?.minimumStockLevel || 0,\r\n      maximumStockLevel: editItem?.maximumStockLevel || 0,\r\n      reorderPoint: editItem?.reorderPoint || 0,\r\n      leadTimeDays: editItem?.leadTimeDays || 0,\r\n      isActive: editItem?.isActive ?? true,\r\n      tags: editItem?.tags || [],\r\n      notes: editItem?.notes || '',\r\n      data: undefined,\r\n      updatedAt: undefined,\r\n      createdAt: undefined\r\n    },\r\n    enableReinitialize: true,\r\n    onSubmit: async (values) => {\r\n      setIsSubmitting(true);\r\n      try {\r\n        let beadId = editItem?._id;\r\n        let uploadedImageUrls: string[] = [];\r\n\r\n        if (beadId) {\r\n          if (imageFiles.length > 0) {\r\n            setIsUploading(true);\r\n            const formData = new FormData();\r\n            imageFiles.forEach(file => formData.append('files', file));\r\n\r\n            const uploadResponse = await uploadBeadImages({ beadId, formData }).unwrap();\r\n\r\n            if (!uploadResponse?.images || uploadResponse.images.length === 0) {\r\n              throw new Error('Image upload failed.');\r\n            }\r\n\r\n            uploadedImageUrls = uploadResponse.images;\r\n          }\r\n\r\n          await updateBead({\r\n            id: beadId,\r\n            body: {\r\n              ...values,\r\n              imageUrl: uploadedImageUrls[0] || values.imageUrl,\r\n            },\r\n          }).unwrap();\r\n        } else {\r\n          const createResponse = await addBead(values).unwrap();\r\n          beadId = createResponse.data._doc._id;\r\n          if (!beadId) throw new Error('Bead creation failed.');\r\n\r\n          if (imageFiles.length > 0) {\r\n            setIsUploading(true);\r\n            const formData = new FormData();\r\n            imageFiles.forEach(file => formData.append('files', file));\r\n            const uploadResponse = await uploadBeadImages({ beadId, formData }).unwrap();\r\n            if (!uploadResponse?.images || uploadResponse.images.length === 0) {\r\n              await deleteBead(beadId).unwrap();\r\n              throw new Error('Image upload failed. Bead has been deleted.');\r\n            }\r\n            uploadedImageUrls = uploadResponse.images;\r\n          }\r\n        }\r\n\r\n        showNotification(\r\n          <span className='d-flex align-items-center'>\r\n            <Icon icon='CheckCircle' size='lg' className='me-1' />\r\n            <span>{editItem ? 'Bead Updated' : 'Bead Added'}</span>\r\n          </span>,\r\n          `${values.beadName} has been ${editItem ? 'updated' : 'added'} successfully.`,\r\n        );\r\n\r\n        formik.resetForm();\r\n        setIsOpen(false);\r\n        onSuccess?.();\r\n      } catch (error: any) {\r\n        showNotification(\r\n          <span className='d-flex align-items-center'>\r\n            <Icon icon='Error' size='lg' className='me-1' />\r\n            <span>Error</span>\r\n          </span>,\r\n          `Failed to ${editItem ? 'update' : 'add'} bead. ${error?.message || 'Please try again.'}`,\r\n        );\r\n      } finally {\r\n        setIsSubmitting(false);\r\n        setIsUploading(false);\r\n      }\r\n    }\r\n  });\r\n\r\n  const handleFileChange = (e: React.ChangeEvent<HTMLInputElement> | React.DragEvent<HTMLDivElement>) => {\r\n    let files: File[] = [];\r\n\r\n    if ('dataTransfer' in e) {\r\n      e.preventDefault();\r\n      files = Array.from(e.dataTransfer.files);\r\n    } else if (e.target.files) {\r\n      files = Array.from(e.target.files);\r\n    }\r\n\r\n    const validImages: File[] = [];\r\n    const previews: string[] = [];\r\n\r\n    for (const file of files) {\r\n      if (file.size > 5 * 1024 * 1024 || !file.type.startsWith('image/')) {\r\n        showNotification(\r\n          <span className='d-flex align-items-center'>\r\n            <Icon icon='Error' size='lg' className='me-1' />\r\n            <span>Invalid File</span>\r\n          </span>,\r\n          `${file.name} is too large or not an image.`,\r\n        );\r\n        continue;\r\n      }\r\n\r\n      validImages.push(file);\r\n      previews.push(URL.createObjectURL(file));\r\n    }\r\n\r\n    setImageFiles((prev) => [...prev, ...validImages]);\r\n    setImagePreviews((prev) => [...prev, ...previews]);\r\n  };\r\n\r\n  const removeImageAtIndex = (index: number) => {\r\n    URL.revokeObjectURL(imagePreviews[index]);\r\n    setImagePreviews((prev) => prev.filter((_, i) => i !== index));\r\n    setImageFiles((prev) => prev.filter((_, i) => i !== index));\r\n  };\r\n\r\n  if (!isOpen) return null;\r\n\r\n  const handleDragOver: React.DragEventHandler<HTMLDivElement> = (e) => {\r\n    e.preventDefault();\r\n  };\r\n\r\n  const handleDragEnter = () => {\r\n    setIsDragging(true);\r\n  };\r\n\r\n  const handleDragLeave = () => {\r\n    setIsDragging(false);\r\n  };\r\n\r\n  const handleDrop: React.DragEventHandler<HTMLDivElement> = (e) => {\r\n    e.preventDefault();\r\n    e.stopPropagation();\r\n    setIsDragging(false);\r\n    handleFileChange(e);\r\n  };\r\n\r\n  return (\r\n    <div\r\n      onDragOver={handleDragOver}\r\n      onDragEnter={handleDragEnter}\r\n      onDragLeave={handleDragLeave}\r\n      onDrop={handleDrop}\r\n      style={{ width: '100vw', height: '100vh' }}\r\n    >\r\n      <Modal\r\n        isOpen={isOpen} setIsOpen={setIsOpen} size='lg' titleId={id} isStaticBackdrop\r\n      >\r\n        <ModalHeader setIsOpen={setIsOpen} className='p-4'>\r\n          <ModalTitle id={id}>{editItem ? 'Edit Bead' : 'Add New Bead'}</ModalTitle>\r\n        </ModalHeader>\r\n        <ModalBody className='px-4'>\r\n          <div className='row g-4'>\r\n            <div className='col-md-12'>\r\n              <h5 className='mb-3'>Basic Information</h5>\r\n              <div className='row g-3'>\r\n                <FormGroup id='beadName' label='Bead Name' className='col-md-6'>\r\n                  <Input name='beadName' onChange={formik.handleChange} value={formik.values.beadName} required />\r\n                </FormGroup>\r\n                <FormGroup id='beadType' label='Bead Type' className='col-md-6'>\r\n                  <Input name='beadType' onChange={formik.handleChange} value={formik.values.beadType} required />\r\n                </FormGroup>\r\n\r\n                <FormGroup id='threadId' label='ThreadID' className='col-md-6'>\r\n                  <Select\r\n                    name='threadId'\r\n                    onChange={formik.handleChange}\r\n                    value={formik.values.threadId}\r\n                    ariaLabel='Select ThreadId'\r\n                  >\r\n                    <option value=''>Select a thread</option>\r\n                    { threads.map((thread: any) => (\r\n                      <option key={thread._id} value={thread._id}>\r\n                        {thread.threadName}\r\n                      </option>\r\n                    ))}\r\n                    {!isThreadsLoading && Array.isArray(threads) && threads.map((thread: any) => (\r\n                      <option key={thread._id} value={thread._id}>\r\n                        {thread.threadName}\r\n                      </option>\r\n                    ))}\r\n                  </Select>\r\n                </FormGroup>\r\n              </div>\r\n            </div>\r\n\r\n            <div className='col-md-12'>\r\n              <h5 className='mb-3'>Bead Image</h5>\r\n              <div\r\n                className='upload-container d-flex justify-content-center align-items-center p-4'\r\n                style={{\r\n                  border: '2px dashed #ccc',\r\n                  borderRadius: '8px',\r\n                  minHeight: '200px',\r\n                  backgroundColor: formik.values.imageUrl ? 'transparent' : '#f8f9fa',\r\n                  position: 'relative',\r\n                  flexDirection: 'column',\r\n                  overflow: 'hidden',\r\n                }}\r\n              >\r\n                {isDragging && (\r\n                  <div\r\n                    className=\"position-absolute w-100 h-100\"\r\n                    style={{\r\n                      top: 0,\r\n                      left: 0,\r\n                      backgroundColor: 'rgba(173, 216, 230, 0.5)',\r\n                      zIndex: 10,\r\n                      borderRadius: '8px',\r\n                    }}\r\n                  ></div>\r\n                )}\r\n                {isUploading ? (\r\n                  <div className=\"text-center\">\r\n                    <Icon icon=\"Loop\" size=\"3x\" className=\"spinning\" />\r\n                    <p>Uploading image...</p>\r\n                  </div>\r\n                ) : (\r\n                  <div className='text-center'>\r\n                    <Icon icon='CloudUpload' size='3x' />\r\n                    <p>Drag and drop image here or click to select</p>\r\n                    <input type='file' accept='image/*' multiple onChange={handleFileChange} className='d-none' id='imageUpload' />\r\n                    <label htmlFor='imageUpload' className='btn btn-sm btn-outline-primary mt-2'>Select Image</label>\r\n\r\n                    {imagePreviews.length > 0 ? (\r\n                      <div className=\"row g-5 mt-3\">\r\n                        {imagePreviews.map((preview, index) => (\r\n                          <div key={index} className=\"col-auto\">\r\n                            <div className=\"position-relative\" style={{ width: '100px', height: '120px' }}>\r\n                              <img\r\n                                src={preview}\r\n                                alt={`Preview ${index}`}\r\n                                className=\"img-fluid rounded\"\r\n                                style={{ width: '100%', height: '100%', objectFit: 'cover' }}\r\n                              />\r\n                              <button\r\n                                type=\"button\"\r\n                                className=\"btn btn-danger btn-sm position-absolute d-flex justify-content-center align-items-center\"\r\n                                style={{\r\n                                  top: '-6px',\r\n                                  right: '-6px',\r\n                                  width: '24px',\r\n                                  height: '24px',\r\n                                  borderRadius: '50%',\r\n                                  padding: 0,\r\n                                  fontSize: '16px',\r\n                                  lineHeight: '1',\r\n                                }}\r\n                                onClick={() => removeImageAtIndex(index)}\r\n                              >\r\n                                &times;\r\n                              </button>\r\n                            </div>\r\n                          </div>\r\n                        ))}\r\n                      </div>\r\n                    ) : null}\r\n                  </div>\r\n                )}\r\n              </div>\r\n            </div>\r\n\r\n            <div className='col-md-12'>\r\n              <h5 className='mb-3'>Physical Properties</h5>\r\n              <div className='row g-3'>\r\n                <FormGroup id='material' label='Material' className='col-md-4'>\r\n                  <Input\r\n                    name='material'\r\n                    onChange={formik.handleChange}\r\n                    value={formik.values.material}\r\n                    required\r\n                  />\r\n                </FormGroup>\r\n\r\n                <FormGroup id='color' label='Color' className='col-md-4'>\r\n                  <Input\r\n                    name='color'\r\n                    onChange={formik.handleChange}\r\n                    value={formik.values.color}\r\n                  />\r\n                </FormGroup>\r\n\r\n                <FormGroup id='size' label='Size (mm)' className='col-md-4'>\r\n                  <Input\r\n                    name='size'\r\n                    type='number'\r\n                    onChange={formik.handleChange}\r\n                    value={formik.values.size}\r\n                    min={0}\r\n                    step={0.1}\r\n                  />\r\n                </FormGroup>\r\n\r\n                <FormGroup id='shape' label='Shape' className='col-md-4'>\r\n                  <Select\r\n                    name='shape'\r\n                    onChange={formik.handleChange}\r\n                    value={formik.values.shape}\r\n                    ariaLabel='Select shape'\r\n                  >\r\n                    <option value=''>Select shape</option>\r\n                    {shapeOptions.map(shape => (\r\n                      <option key={shape} value={shape}>{shape}</option>\r\n                    ))}\r\n                  </Select>\r\n                </FormGroup>\r\n\r\n                <FormGroup id='weight' label='Weight (g)' className='col-md-4'>\r\n                  <Input\r\n                    name='weight'\r\n                    type='number'\r\n                    onChange={formik.handleChange}\r\n                    value={formik.values.weight}\r\n                    min={0}\r\n                    step={0.01}\r\n                  />\r\n                </FormGroup>\r\n\r\n                <FormGroup id='finish' label='Finish' className='col-md-4'>\r\n                  <Select\r\n                    name='finish'\r\n                    onChange={formik.handleChange}\r\n                    value={formik.values.finish}\r\n                    ariaLabel='Select finish'\r\n                  >\r\n                    <option value=''>Select finish</option>\r\n                    {finishOptions.map(finish => (\r\n                      <option key={finish} value={finish}>{finish}</option>\r\n                    ))}\r\n                  </Select>\r\n                </FormGroup>\r\n              </div>\r\n            </div>\r\n\r\n            <div className='col-md-12'>\r\n              <h5 className='mb-3'>Inventory Information</h5>\r\n              <div className='row g-3'>\r\n                <FormGroup id='quantity' label='Quantity' className='col-md-3'>\r\n                  <Input\r\n                    name='quantity'\r\n                    type='number'\r\n                    onChange={formik.handleChange}\r\n                    value={formik.values.quantity}\r\n                    min={0}\r\n                  />\r\n                </FormGroup>\r\n\r\n                <FormGroup id='pricePerUnit' label='Price Per Unit' className='col-md-3'>\r\n                  <Input\r\n                    name='pricePerUnit'\r\n                    type='number'\r\n                    onChange={formik.handleChange}\r\n                    value={formik.values.pricePerUnit}\r\n                    min={0}\r\n                    step={0.01}\r\n                  />\r\n                </FormGroup>\r\n\r\n                <FormGroup id='unitOfMeasure' label='Unit of Measure' className='col-md-3'>\r\n                  <Select\r\n                    name='unitOfMeasure'\r\n                    onChange={formik.handleChange}\r\n                    value={formik.values.unitOfMeasure}\r\n                    ariaLabel='Select unit'\r\n                  >\r\n                    {unitOptions.map(unit => (\r\n                      <option key={unit} value={unit}>{unit}</option>\r\n                    ))}\r\n                  </Select>\r\n                </FormGroup>\r\n\r\n                <FormGroup id='supplier' label='Supplier' className='col-md-3'>\r\n                  <Input\r\n                    name='supplier'\r\n                    onChange={formik.handleChange}\r\n                    value={formik.values.supplier}\r\n                  />\r\n                </FormGroup>\r\n\r\n                <FormGroup id='productCode' label='Product Code' className='col-md-3'>\r\n                  <Input\r\n                    name='productCode'\r\n                    onChange={formik.handleChange}\r\n                    value={formik.values.productCode}\r\n                  />\r\n                </FormGroup>\r\n              </div>\r\n            </div>\r\n\r\n            <div className='col-md-12'>\r\n              <h5 className='mb-3'>Additional Information</h5>\r\n              <div className='row g-3'>\r\n                <FormGroup id='isActive' label='Status' className='col-md-3'>\r\n                  <div className=\"form-check form-switch\">\r\n                    <input\r\n                      type=\"checkbox\"\r\n                      className=\"form-check-input\"\r\n                      id=\"isActive\"\r\n                      name=\"isActive\"\r\n                      checked={formik.values.isActive}\r\n                      onChange={formik.handleChange}\r\n                    />\r\n                    <label className=\"form-check-label\" htmlFor=\"isActive\">\r\n                      {formik.values.isActive ? 'Active' : 'Inactive'}\r\n                    </label>\r\n                  </div>\r\n                </FormGroup>\r\n\r\n                <FormGroup id='description' label='Description' className='col-md-12'>\r\n                  <Textarea\r\n                    name='description'\r\n                    rows={3}\r\n                    onChange={formik.handleChange}\r\n                    value={formik.values.description}\r\n                  />\r\n                </FormGroup>\r\n              </div>\r\n            </div>\r\n          </div>\r\n        </ModalBody>\r\n        <ModalFooter className='p-4'>\r\n          <Button color='secondary' onClick={() => setIsOpen(false)}>Cancel</Button>\r\n          <Button color='primary' type='button' onClick={() => formik.handleSubmit()} isDisable={isSubmitting}>\r\n            {isSubmitting ? 'Processing...' : editItem ? 'Update Bead' : 'Add Bead'}\r\n          </Button>\r\n        </ModalFooter>\r\n      </Modal>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default BeadAddModal;","import React, { useState } from 'react';\r\nimport { useFormik } from 'formik';\r\nimport PageWrapper from '../../../layout/PageWrapper/PageWrapper';\r\nimport SubHeader, { SubHeaderLeft, SubHeaderRight, SubheaderSeparator } from '../../../layout/SubHeader/SubHeader';\r\nimport Page from '../../../layout/Page/Page';\r\nimport { demoPagesMenu } from '../../../menu';\r\nimport Card, { CardBody } from '../../../components/bootstrap/Card';\r\nimport { getFirstLetter } from '../../../helpers/helpers';\r\nimport PaginationButtons, { dataPagination, PER_COUNT } from '../../../components/PaginationButtons';\r\nimport Button from '../../../components/bootstrap/Button';\r\nimport Icon from '../../../components/icon/Icon';\r\nimport Input from '../../../components/bootstrap/forms/Input';\r\nimport Dropdown, { DropdownItem, DropdownMenu, DropdownToggle } from '../../../components/bootstrap/Dropdown';\r\nimport FormGroup from '../../../components/bootstrap/forms/FormGroup';\r\nimport Checks, { ChecksGroup } from '../../../components/bootstrap/forms/Checks';\r\nimport PAYMENTS from '../../../common/data/enumPaymentMethod';\r\nimport useSortableData from '../../../hooks/useSortableData';\r\nimport InputGroup, { InputGroupText } from '../../../components/bootstrap/forms/InputGroup';\r\nimport Popovers from '../../../components/bootstrap/Popovers';\r\nimport { getColorNameWithIndex } from '../../../common/data/enumColors';\r\nimport useDarkMode from '../../../hooks/useDarkMode';\r\nimport BeadEditModal from './BeadMangementEditModals';\r\nimport BeadAddModal from './BeadManagementAdd';\r\nimport { useGetBeadsQuery, useDeleteBeadMutation } from '../../../redux/api/beadApi';\r\nimport showNotification from '../../../components/extras/showNotification';\r\nimport Modal, { ModalBody, ModalHeader } from '../../../components/bootstrap/Modal';\r\nimport QrTemplateModal from '../../kindy-components/QrTemplateModal';\r\n\r\nconst safeGetColorNameWithIndex = (index?: string | number) => {\r\n  if (index === undefined || index === null) return 'primary';\r\n\r\n  try {\r\n    const num = typeof index === 'string'\r\n      ? parseInt(index, 10) || 0\r\n      : index;\r\n    return getColorNameWithIndex(Math.abs(num) % 20);\r\n  } catch {\r\n    return 'primary';\r\n  }\r\n};\r\n\r\nconst BeadManagement = () => {\r\n  const { darkModeStatus } = useDarkMode();\r\n\r\n  const [currentPage, setCurrentPage] = useState<number>(1);\r\n  const [perPage, setPerPage] = useState<number>(PER_COUNT['10']);\r\n  const [editItem, setEditItem] = useState<any>(null);\r\n  const [editModalStatus, setEditModalStatus] = useState<boolean>(false);\r\n  const [addModalStatus, setAddModalStatus] = useState<boolean>(false);\r\n  const [deleteBead] = useDeleteBeadMutation();\r\n  const [qrModal, setQrModal] = useState({ isOpen: false, src: '', name: '' });\r\n\r\n  const {\r\n    data: beadsResponse,\r\n    isLoading,\r\n    isError,\r\n    refetch\r\n  } = useGetBeadsQuery({\r\n    page_number: currentPage,\r\n    page_size: perPage,\r\n  });\r\n\r\n  // const beadsData = beadsResponse?.data || [];\r\n    const beadsData = Array.isArray(beadsResponse?.data?.data)\r\n  ? beadsResponse.data?.data\r\n  : [];\r\n\r\n  const formik = useFormik({\r\n    initialValues: {\r\n      searchInput: '',\r\n      payment: Object.keys(PAYMENTS).map((i) => PAYMENTS[i].name),\r\n      minPrice: '',\r\n      maxPrice: '',\r\n      beadType: '',\r\n    },\r\n    onSubmit: (values) => {\r\n      // Filter logic is handled in the filteredData calculation\r\n    },\r\n  });\r\n\r\n  const filteredData = beadsData.filter((f  :any) => {\r\n    if (!f) return false;\r\n\r\n    return (\r\n      (f.beadName?.toLowerCase().includes(formik.values.searchInput.toLowerCase()) || '') &&\r\n      (formik.values.beadType === '' || f.beadType?.toLowerCase() === formik.values.beadType.toLowerCase()) &&\r\n      (formik.values.minPrice === '' || (f.pricePerUnit || 0) >= Number(formik.values.minPrice)) &&\r\n      (formik.values.maxPrice === '' || (f.pricePerUnit || 0) <= Number(formik.values.maxPrice))\r\n    );\r\n  });\r\n\r\n  const { items, requestSort, getClassNamesFor } = useSortableData(filteredData);\r\n\r\n  const handleSuccess = () => {\r\n    refetch();\r\n  };\r\n\r\n  const handleDelete = async (id?: string) => {\r\n    if (!id) return;\r\n\r\n    if (window.confirm('Are you sure you want to delete this bead?')) {\r\n      try {\r\n        await deleteBead(id).unwrap();\r\n        handleSuccess();\r\n        showNotification(\r\n          <span className='d-flex align-items-center'>\r\n            <Icon icon='CheckCircle' size='lg' className='me-1' />\r\n            <span>Bead Deleted</span>\r\n          </span>,\r\n          'Bead has been deleted successfully.',\r\n        );\r\n      } catch (error) {\r\n        console.error('Failed to delete bead:', error);\r\n        showNotification(\r\n          <span className='d-flex align-items-center'>\r\n            <Icon icon='Error' size='lg' className='me-1' />\r\n            <span>Error</span>\r\n          </span>,\r\n          'Failed to delete bead. Please try again.',\r\n        );\r\n      }\r\n    }\r\n  };\r\n\r\n  if (isLoading) return <div className='text-center py-5'>Loading beads...</div>;\r\n  if (isError) return <div className='text-center py-5'>Error loading beads data</div>;\r\n\r\n  return (\r\n    <PageWrapper title={demoPagesMenu.crm.subMenu.customersList.text}>\r\n      <SubHeader>\r\n        <SubHeaderLeft>\r\n          <label className='border-0 bg-transparent cursor-pointer me-0' htmlFor='searchInput'>\r\n            <Icon icon='Search' size='2x' color='primary' />\r\n          </label>\r\n          <Input\r\n            id='searchInput'\r\n            type='search'\r\n            className='border-0 shadow-none bg-transparent'\r\n            placeholder='Search beads...'\r\n            onChange={formik.handleChange}\r\n            value={formik.values.searchInput}\r\n          />\r\n        </SubHeaderLeft>\r\n        <SubHeaderRight>\r\n          <Dropdown>\r\n            <DropdownToggle hasIcon={false}>\r\n              <Button\r\n                icon='FilterAlt'\r\n                color='dark'\r\n                isLight\r\n                className='btn-only-icon position-relative'\r\n                aria-label='Filter'\r\n              >\r\n                {beadsData.length !== filteredData.length && (\r\n                  <Popovers desc='Filtering applied' trigger='hover'>\r\n                    <span className='position-absolute top-0 start-100 translate-middle badge border border-light rounded-circle bg-danger p-2'>\r\n                      <span className='visually-hidden'>there is filtering</span>\r\n                    </span>\r\n                  </Popovers>\r\n                )}\r\n              </Button>\r\n            </DropdownToggle>\r\n            <DropdownMenu isAlignmentEnd size='lg'>\r\n              <div className='container py-2'>\r\n                <div className='row g-3'>\r\n                  <FormGroup label='Price Range' className='col-12'>\r\n                    <InputGroup>\r\n                      <Input\r\n                        id='minPrice'\r\n                        ariaLabel='Minimum price'\r\n                        placeholder='Min.'\r\n                        onChange={formik.handleChange}\r\n                        value={formik.values.minPrice}\r\n                        type='number'\r\n                      />\r\n                      <InputGroupText>to</InputGroupText>\r\n                      <Input\r\n                        id='maxPrice'\r\n                        ariaLabel='Maximum price'\r\n                        placeholder='Max.'\r\n                        onChange={formik.handleChange}\r\n                        value={formik.values.maxPrice}\r\n                        type='number'\r\n                      />\r\n                    </InputGroup>\r\n                  </FormGroup>\r\n                  <FormGroup label='Bead Type' className='col-12'>\r\n                    <Input\r\n                      id='beadType'\r\n                      ariaLabel='Bead Type'\r\n                      placeholder='Filter by type'\r\n                      onChange={formik.handleChange}\r\n                      value={formik.values.beadType}\r\n                    />\r\n                  </FormGroup>\r\n                </div>\r\n              </div>\r\n            </DropdownMenu>\r\n          </Dropdown>\r\n          <SubheaderSeparator />\r\n          <Button\r\n            icon='PersonAdd'\r\n            color='primary'\r\n            isLight\r\n            onClick={() => {\r\n              setAddModalStatus(true);\r\n              setEditItem(null);\r\n            }}\r\n          >\r\n            New Bead\r\n          </Button>\r\n        </SubHeaderRight>\r\n      </SubHeader>\r\n      <Page>\r\n        <div className='row h-100'>\r\n          <div className='col-12'>\r\n            <Card stretch>\r\n              <CardBody isScrollable className='table-responsive'>\r\n                <table className='table table-modern table-hover'>\r\n                  <thead>\r\n                    <tr>\r\n                      <th onClick={() => requestSort('_id')} className='cursor-pointer'>\r\n                        Bead ID{' '}\r\n                        <Icon size='lg' className={getClassNamesFor('_id')} icon='FilterList' />\r\n                      </th>\r\n                      <th>Bead Name</th>\r\n                      <th>Bead Type</th>\r\n                      <th>Color</th>\r\n                      <th>Size</th>\r\n                      <th>Shape</th>\r\n                      <th onClick={() => requestSort('pricePerUnit')} className='cursor-pointer'>\r\n                        Price{' '}\r\n                        <Icon size='lg' className={getClassNamesFor('pricePerUnit')} icon='FilterList' />\r\n                      </th>\r\n                      <th>Quantity</th>\r\n                      <th>QR Code</th>\r\n                      <th>Actions</th>\r\n                    </tr>\r\n                  </thead>\r\n                  <tbody>\r\n                    {dataPagination(items, currentPage, perPage).map((i) => (\r\n                      <tr key={i?._id || Math.random()}>\r\n                        <td>\r\n                          <div className='d-flex align-items-center'>\r\n                            <div className='flex-shrink-0'>\r\n                              <div className='ratio ratio-1x1 me-3' style={{ width: 48 }}>\r\n                                <div\r\n                                  className={`bg-l${darkModeStatus ? 'o25' : '25'}-${safeGetColorNameWithIndex(i?._id)} text-${safeGetColorNameWithIndex(i?._id)} rounded-2 d-flex align-items-center justify-content-center`}\r\n                                >\r\n                                  <span className='fw-bold'>{getFirstLetter(i?.beadName || '')}</span>\r\n                                </div>\r\n                              </div>\r\n                            </div>\r\n                          </div>\r\n                        </td>\r\n                        <td>\r\n                          <div className='fs-6 fw-bold'>{i?.beadName || 'N/A'}</div>\r\n                        </td>\r\n                        <td>\r\n                          <div className='fs-6 fw-bold'>{i?.beadType || 'N/A'}</div>\r\n                        </td>\r\n                        <td>\r\n                          <div className='fs-6 fw-bold'>\r\n                            <span\r\n                              className='badge p-2'\r\n                              style={{ backgroundColor: i?.color?.toLowerCase() || 'transparent' }}\r\n                            >\r\n                              {i?.color || 'N/A'}\r\n                            </span>\r\n                          </div>\r\n                        </td>\r\n                        <td>\r\n                          <div className='fs-6 fw-bold'>{i?.size ? `${i.size}mm` : 'N/A'}</div>\r\n                        </td>\r\n                        <td>\r\n                          <div className='fs-6 fw-bold'>{i?.shape || 'N/A'}</div>\r\n                        </td>\r\n                        <td> \r\n                          <div className='fs-6 fw-bold'>\r\n                            ${i?.pricePerUnit?.toFixed(2) || '0.00'}\r\n                          </div>\r\n                        </td>\r\n                        <td>\r\n                          <div className='fs-6 fw-bold'>{i?.quantity || '0'}</div>\r\n                        </td>\r\n                        <td>\r\n                          {i?.qrCode ? (\r\n                            <div \r\n                              className=\"d-flex justify-content-center\"\r\n                              onClick={() => setQrModal({ isOpen: true, src: `${process.env.REACT_APP_API_URL}/${i.qrCode}`, name: i?.beadName })}\r\n                            >\r\n                              <div\r\n                                style={{\r\n                                  width: '50px',\r\n                                  height: '50px',\r\n                                  display: 'flex',\r\n                                  justifyContent: 'center',\r\n                                  alignItems: 'center',\r\n                                  transition: 'all 0.3s ease',\r\n                                  cursor: 'pointer',\r\n                                }}\r\n                                className=\"hover-scale\"\r\n                              >\r\n                                <img\r\n                                  src={`${process.env.REACT_APP_API_URL}/${i.qrCode}`}\r\n                                  alt=\"QR Code\"\r\n                                  style={{\r\n                                    width: '100%',\r\n                                    height: '100%',\r\n                                    objectFit: 'contain',\r\n                                    transition: 'all 0.3s ease',\r\n                                  }}\r\n                                  className=\"hover-transform-scale\"\r\n                                />\r\n                              </div>\r\n                            </div>\r\n                          ) : (\r\n                            <div className='fs-6 text-muted text-center'>No QR</div>\r\n                          )}\r\n                        </td>\r\n                        <td>\r\n                          <Dropdown>\r\n                            <DropdownToggle hasIcon={false}>\r\n                              <Button\r\n                                icon='MoreHoriz'\r\n                                color='dark'\r\n                                isLight\r\n                                shadow='sm'\r\n                                aria-label='More actions'\r\n                              />\r\n                            </DropdownToggle>\r\n                            <DropdownMenu isAlignmentEnd>\r\n                              <DropdownItem>\r\n                                <Button\r\n                                  icon='Edit'\r\n                                  tag='a'\r\n                                  onClick={() => {\r\n                                    setEditModalStatus(true);\r\n                                    setEditItem(i);\r\n                                  }}\r\n                                >\r\n                                  Edit\r\n                                </Button>\r\n                              </DropdownItem>\r\n                              <DropdownItem>\r\n                                <Button\r\n                                  icon='Delete'\r\n                                  color='danger'\r\n                                  isLight\r\n                                  tag='a'\r\n                                  onClick={() => handleDelete(i?._id)}\r\n                                >\r\n                                  Delete\r\n                                </Button>\r\n                              </DropdownItem>\r\n                            </DropdownMenu>\r\n                          </Dropdown>\r\n                        </td>\r\n                      </tr>\r\n                    ))}\r\n                  </tbody>\r\n                </table>\r\n              </CardBody>\r\n              <PaginationButtons\r\n                data={filteredData}\r\n                label='beads'\r\n                setCurrentPage={setCurrentPage}\r\n                currentPage={currentPage}\r\n                perPage={perPage}\r\n                setPerPage={setPerPage}\r\n              />\r\n            </Card>\r\n          </div>\r\n        </div>\r\n      </Page>\r\n\r\n      {/* QR Code Modal */}\r\n      <Modal\r\n        isOpen={false}\r\n        setIsOpen={() => setQrModal({ isOpen: false, src: '', name: '' })}\r\n        titleId='qr-modal'\r\n        isCentered\r\n        isScrollable\r\n        size='sm'\r\n      >\r\n        <ModalHeader setIsOpen={() => setQrModal({ isOpen: false, src: '', name: '' })}>\r\n          QR Code\r\n        </ModalHeader>\r\n        <ModalBody>\r\n          <div className='text-center'>\r\n            <img\r\n              src={qrModal.src}\r\n              alt=\"Full Size QR Code\"\r\n              style={{ width: '100%', height: 'auto' }}\r\n            />\r\n          </div>\r\n        </ModalBody>\r\n      </Modal>\r\n\r\n      <QrTemplateModal \r\n        isOpen={qrModal.isOpen} \r\n        setIsOpen={() => setQrModal({...qrModal, isOpen: false, src: '', name: ''})} \r\n        beadName={qrModal.name} \r\n        qrUrl={qrModal.src} \r\n      />\r\n\r\n      <BeadEditModal\r\n        setIsOpen={setEditModalStatus}\r\n        isOpen={editModalStatus}\r\n        id={editItem?._id || ''}\r\n        editItem={editItem}\r\n        onSuccess={handleSuccess}\r\n      />\r\n      <BeadAddModal\r\n        setIsOpen={setAddModalStatus}\r\n        isOpen={addModalStatus}\r\n        onSuccess={handleSuccess} \r\n        id={''} \r\n      />\r\n    </PageWrapper>\r\n  );\r\n};\r\n\r\nexport default BeadManagement;","import React, { FC, useRef, useState } from 'react';\r\nimport { useReactToPrint } from 'react-to-print';\r\nimport jsPDF from 'jspdf';\r\nimport html2pdf from 'html2pdf.js';\r\nimport html2canvas from 'html2canvas';\r\nimport Modal, {\r\n    ModalBody,\r\n    ModalFooter,\r\n    ModalHeader,\r\n    ModalTitle,\r\n} from '../../components/bootstrap/Modal';\r\nimport FormGroup from '../../components/bootstrap/forms/FormGroup';\r\nimport Input from '../../components/bootstrap/forms/Input';\r\nimport Select from '../../components/bootstrap/forms/Select';\r\nimport Button from '../../components/bootstrap/Button';\r\n\r\ninterface QrTemplateModalProps {\r\n    isOpen: boolean;\r\n    setIsOpen: (open: boolean) => void;\r\n    beadName: string;\r\n    qrUrl: string;\r\n    qrImageUrl?: string;\r\n}\r\nconst getPageSizeInMM = (size: string): [number, number] => {\r\n    switch (size) {\r\n        case 'A1': return [594, 841];\r\n        case 'A2': return [420, 594];\r\n        case 'A3': return [297, 420];\r\n        case 'A4': return [210, 297];\r\n        case 'Letter': return [215.9, 279.4];\r\n        default: return [210, 297];\r\n    }\r\n};\r\n\r\nconst QrTemplateModal: FC<QrTemplateModalProps> = ({\r\n    isOpen,\r\n    setIsOpen,\r\n    beadName,\r\n    qrUrl,\r\n    qrImageUrl,\r\n}) => {\r\n    const [quantity, setQuantity] = useState(1);\r\n    const [sheetSize, setSheetSize] = useState<'A1' | 'A2' | 'A3' | 'A4' | 'Letter'>('A4');\r\n    const [pageWidth, pageHeight] = getPageSizeInMM(sheetSize);\r\n\r\n\r\n    const printRef = useRef<HTMLDivElement>(null);\r\n\r\n    const handlePrint = useReactToPrint({\r\n        contentRef: printRef,\r\n        documentTitle: '',\r\n        pageStyle: `\r\n    @page {\r\n      size: ${sheetSize};\r\n      margin: 0;\r\n    }\r\n    html, body {\r\n      margin: 0 !important;\r\n      padding: 0 !important;\r\n      height: 100%;\r\n      width: 100%;\r\n      -webkit-print-color-adjust: exact !important;\r\n      print-color-adjust: exact !important;\r\n      background: white;\r\n    }\r\n    div {\r\n      break-after: page;\r\n    }\r\n  `,\r\n    });\r\n\r\n\r\n    const handleDownloadPdf = () => {\r\n        if (!printRef.current) return;\r\n        const opt = {\r\n            margin: 0,\r\n            filename: `${beadName}_QR_Codes.pdf`,\r\n            image: { type: 'jpeg', quality: 0.98 },\r\n            html2canvas: { scale: 2, useCORS: true },\r\n            jsPDF: { unit: 'mm', format: [pageWidth, pageHeight], orientation: 'portrait' },\r\n        };\r\n\r\n        html2pdf().set(opt).from(printRef.current).save();\r\n    };\r\n\r\n\r\n    if (!isOpen) return null;\r\n\r\n    return (\r\n        <>\r\n            <Modal isOpen={isOpen} setIsOpen={setIsOpen} size=\"md\" titleId=\"qr-template-modal\">\r\n                <ModalHeader setIsOpen={setIsOpen}>\r\n                    <ModalTitle id=\"qr-template-modal\">Print QR Codes</ModalTitle>\r\n                </ModalHeader>\r\n\r\n                <ModalBody>\r\n                    <div className=\"row g-3\">\r\n                        <FormGroup label=\"Sheet Size\" className=\"col-md-6\">\r\n                            <Select\r\n                                value={sheetSize}\r\n                                onChange={(e: any) => setSheetSize(e.target.value as any)}\r\n                                ariaLabel=\"Sheet Size\"\r\n                            >\r\n                                <option value=\"A1\">A1</option>\r\n                                <option value=\"A2\">A2</option>\r\n                                <option value=\"A3\">A3</option>\r\n                                <option value=\"A4\">A4</option>\r\n                                <option value=\"Letter\">Letter</option>\r\n                            </Select>\r\n\r\n                        </FormGroup>\r\n\r\n                        <FormGroup label=\"Quantity\" className=\"col-md-6\">\r\n                            <Input\r\n                                type=\"number\"\r\n                                min={1}\r\n                                value={quantity}\r\n                                onChange={(e: any) => setQuantity(Number(e.target.value))}\r\n                            />\r\n                        </FormGroup>\r\n                    </div>\r\n\r\n                    {/* Preview a single QR */}\r\n                    <div className=\"d-flex justify-content-center mt-4\">\r\n                        <div className=\"text-center\">\r\n                            <img\r\n                                src={qrImageUrl || qrUrl}\r\n                                alt={`QR Code for ${beadName}`}\r\n                                style={{ width: 200, height: 200 }}\r\n                            />\r\n                            <div className=\"mt-2 h4\">{beadName}</div>\r\n                        </div>\r\n                    </div>\r\n\r\n\r\n                </ModalBody>\r\n\r\n                <ModalFooter>\r\n                    <Button icon='Print' color=\"info\" isLight onClick={handlePrint}>\r\n                        Print\r\n                    </Button>\r\n                    <Button icon='PictureAsPdf' color=\"danger\" isLight onClick={handleDownloadPdf}>\r\n                        PDF\r\n                    </Button>\r\n                </ModalFooter>\r\n            </Modal>\r\n\r\n            <div style={{ display: 'none' }}>\r\n                <div ref={printRef}>\r\n                    {[...Array(quantity)].map((_, index) => (\r\n                        <div\r\n                            key={index}\r\n                            className='qr-pdf-page'\r\n                            style={{\r\n                                height: `${pageHeight}mm`,\r\n                                width: `${pageWidth}mm`,\r\n                                display: 'flex',\r\n                                flexDirection: 'column',\r\n                                justifyContent: 'center',\r\n                                alignItems: 'center',\r\n                            }}\r\n                        >\r\n                            <img\r\n                                src={qrImageUrl || qrUrl}\r\n                                alt={`QR Code Page ${index + 1}`}\r\n                                style={{ width: '80%', height: '80%', objectFit: 'contain', marginTop: -200 }}\r\n                            />\r\n\r\n                            <div\r\n                                style={{\r\n                                    // marginTop: '-100px',\r\n                                    fontSize: '24px',\r\n                                    fontWeight: 'bold',\r\n                                }}\r\n                            >\r\n                                {beadName}\r\n                            </div>\r\n                        </div>\r\n                    ))}\r\n                </div>\r\n            </div>\r\n        </>\r\n    );\r\n};\r\n\r\nexport default QrTemplateModal;\r\n"],"names":["PAYPAL","name","PAYONEER","SWIFT","PER_COUNT","dataPagination","data","currentPage","perPage","filter","i","index","_ref","setCurrentPage","setPerPage","label","totalItems","length","totalPage","Math","ceil","_jsxs","CardFooter","children","_jsx","CardFooterLeft","className","getInfo","start","end","CardFooterRight","Pagination","ariaLabel","PaginationItem","isFirst","isDisabled","onClick","isPrev","pagination","items","push","reverse","isActive","isNext","isLast","Select","size","onChange","e","parseInt","target","value","toString","Object","keys","map","Option","disabled","ariaLabelledby","props","Options","_ref2","list","item","text","forwardRef","ref","classNames","active","role","onKeyDown","tabIndex","undefined","Icon","icon","displayName","id","required","placeholder","ariaDescribedby","multiple","title","defaultValue","isValid","isTouched","invalidFeedback","validFeedback","isValidMessage","isTooltipFeedback","onBlur","onFocus","onInput","onInvalid","onSelect","_Fragment","hidden","Validation","isTooltip","config","arguments","sortConfig","setSortConfig","useState","useMemo","sortableItems","sort","a","b","key","direction","requestSort","getClassNamesFor","isOpen","setIsOpen","editItem","onSuccess","updateBead","isLoading","useUpdateBeadMutation","isUploading","setIsUploading","localImage","setLocalImage","formik","useFormik","initialValues","beadName","beadType","material","color","shape","weight","finish","quantity","pricePerUnit","supplier","productCode","description","image","imageUrl","enableReinitialize","onSubmit","async","beadData","values","Number","_id","body","unwrap","showNotification","error","console","useEffect","resetForm","displayImage","Modal","titleId","isStaticBackdrop","ModalHeader","ModalTitle","ModalBody","FormGroup","Input","handleChange","style","border","borderRadius","minHeight","backgroundColor","position","src","alt","maxHeight","maxWidth","marginBottom","Button","_document$getElementB","document","getElementById","click","isDisable","removeImage","setFieldValue","_document$getElementB2","type","files","file","base64Image","Promise","resolve","reject","reader","FileReader","readAsDataURL","onload","result","onerror","convertToBase64","accept","Textarea","rows","ModalFooter","handleSubmit","_threadsResponse$data","_editItem$isActive","addBead","useAddBeadMutation","uploadBeadImages","useUploadBeadImagesMutation","deleteBead","useDeleteBeadMutation","isSubmitting","setIsSubmitting","imageFiles","setImageFiles","imagePreviews","setImagePreviews","isDragging","setIsDragging","threadsResponse","isThreadsLoading","useGetThreadsQuery","page_number","page_size","threads","log","forEach","URL","revokeObjectURL","threadId","unitOfMeasure","inventoryLocation","minimumStockLevel","maximumStockLevel","reorderPoint","leadTimeDays","tags","notes","updatedAt","createdAt","beadId","uploadedImageUrls","formData","FormData","append","uploadResponse","images","Error","_doc","message","handleFileChange","preventDefault","Array","from","dataTransfer","validImages","previews","startsWith","createObjectURL","prev","onDragOver","onDragEnter","handleDragEnter","onDragLeave","handleDragLeave","onDrop","stopPropagation","width","height","thread","threadName","isArray","flexDirection","overflow","top","left","zIndex","htmlFor","preview","objectFit","right","padding","fontSize","lineHeight","_","removeImageAtIndex","min","step","unit","checked","safeGetColorNameWithIndex","num","getColorNameWithIndex","abs","BeadManagement","_beadsResponse$data","_beadsResponse$data2","darkModeStatus","useDarkMode","setEditItem","editModalStatus","setEditModalStatus","addModalStatus","setAddModalStatus","qrModal","setQrModal","beadsResponse","isError","refetch","useGetBeadsQuery","beadsData","searchInput","payment","PAYMENTS","minPrice","maxPrice","filteredData","f","_f$beadName","_f$beadType","toLowerCase","includes","useSortableData","handleSuccess","PageWrapper","demoPagesMenu","crm","subMenu","customersList","SubHeader","SubHeaderLeft","SubHeaderRight","Dropdown","DropdownToggle","hasIcon","isLight","Popovers","desc","trigger","DropdownMenu","isAlignmentEnd","InputGroup","InputGroupText","SubheaderSeparator","Page","Card","stretch","CardBody","isScrollable","_i$color","_i$pricePerUnit","getFirstLetter","toFixed","qrCode","display","justifyContent","alignItems","transition","cursor","shadow","DropdownItem","tag","window","confirm","handleDelete","random","PaginationButtons","isCentered","QrTemplateModal","qrUrl","BeadEditModal","BeadAddModal","qrImageUrl","setQuantity","sheetSize","setSheetSize","pageWidth","pageHeight","getPageSizeInMM","printRef","useRef","handlePrint","useReactToPrint","contentRef","documentTitle","pageStyle","handleDownloadPdf","current","opt","margin","filename","quality","html2canvas","scale","useCORS","jsPDF","format","orientation","html2pdf","set","save","marginTop","fontWeight"],"sourceRoot":""}