{"version":3,"file":"static/js/8913.a3ac2974.chunk.js","mappings":"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","sources":["components/PaginationButtons.tsx","components/bootstrap/Option.tsx","components/bootstrap/Pagination.tsx","components/bootstrap/forms/Select.tsx","hooks/useSortableData.ts","pages/Kindy-project/Thred/ThredAdd.tsx","pages/Kindy-project/other/onError.tsx","pages/Kindy-project/other/onLoading.tsx","pages/Kindy-project/Thred/Thred.tsx","pages/kindy-components/QrTemplateModal.tsx"],"sourcesContent":["import React, { FC } from 'react';\nimport { CardFooter, CardFooterLeft, CardFooterRight } from './bootstrap/Card';\nimport Pagination, { PaginationItem } from './bootstrap/Pagination';\nimport Select from './bootstrap/forms/Select';\nimport Option from './bootstrap/Option';\n\nexport const PER_COUNT = {\n\t3: 3,\n\t5: 5,\n\t10: 10,\n\t25: 25,\n\t50: 50,\n};\n\nexport const dataPagination = (data: any[], currentPage: number, perPage: number) =>\n\tdata.filter(\n\t\t(i, index) => index + 1 > (currentPage - 1) * perPage && index + 1 <= currentPage * perPage,\n\t);\n\ninterface IPaginationButtonsProps {\n\tsetCurrentPage(...args: unknown[]): unknown;\n\tcurrentPage: number;\n\tperPage: number;\n\tsetPerPage(...args: unknown[]): unknown;\n\tdata: unknown[];\n\tlabel?: string;\n}\nconst PaginationButtons: FC<IPaginationButtonsProps> = ({\n\tsetCurrentPage,\n\tcurrentPage,\n\tperPage,\n\tsetPerPage,\n\tdata,\n\tlabel = 'items',\n}) => {\n\tconst totalItems = data.length;\n\tconst totalPage = Math.ceil(totalItems / perPage);\n\n\tconst pagination = () => {\n\t\tlet items = [];\n\n\t\tlet i = currentPage - 1;\n\t\twhile (i >= currentPage - 1 && i > 0) {\n\t\t\titems.push(\n\t\t\t\t<PaginationItem key={i} onClick={() => setCurrentPage(currentPage - 1)}>\n\t\t\t\t\t{i}\n\t\t\t\t</PaginationItem>,\n\t\t\t);\n\n\t\t\ti -= 1;\n\t\t}\n\n\t\titems = items.reverse();\n\n\t\titems.push(\n\t\t\t<PaginationItem key={currentPage} isActive onClick={() => setCurrentPage(currentPage)}>\n\t\t\t\t{currentPage}\n\t\t\t</PaginationItem>,\n\t\t);\n\n\t\ti = currentPage + 1;\n\t\twhile (i <= currentPage + 1 && i <= totalPage) {\n\t\t\titems.push(\n\t\t\t\t<PaginationItem key={i} onClick={() => setCurrentPage(currentPage + 1)}>\n\t\t\t\t\t{i}\n\t\t\t\t</PaginationItem>,\n\t\t\t);\n\n\t\t\ti += 1;\n\t\t}\n\n\t\treturn items;\n\t};\n\n\tconst getInfo = () => {\n\t\tconst start = perPage * (currentPage - 1) + 1;\n\n\t\tconst end = perPage * currentPage;\n\n\t\treturn (\n\t\t\t<span className='pagination__desc'>\n\t\t\t\tShowing {start} to {end > totalItems ? totalItems : end} of {totalItems} {label}\n\t\t\t</span>\n\t\t);\n\t};\n\n\treturn (\n\t\t<CardFooter>\n\t\t\t<CardFooterLeft>\n\t\t\t\t<span className='text-muted'>{getInfo()}</span>\n\t\t\t</CardFooterLeft>\n\n\t\t\t<CardFooterRight className='d-flex'>\n\t\t\t\t{totalPage > 1 && (\n\t\t\t\t\t// @ts-ignore\n\t\t\t\t\t<Pagination ariaLabel={label}>\n\t\t\t\t\t\t<PaginationItem\n\t\t\t\t\t\t\tisFirst\n\t\t\t\t\t\t\tisDisabled={!(currentPage - 1 > 0)}\n\t\t\t\t\t\t\tonClick={() => setCurrentPage(1)}\n\t\t\t\t\t\t/>\n\t\t\t\t\t\t<PaginationItem\n\t\t\t\t\t\t\tisPrev\n\t\t\t\t\t\t\tisDisabled={!(currentPage - 1 > 0)}\n\t\t\t\t\t\t\tonClick={() => setCurrentPage(currentPage - 1)}\n\t\t\t\t\t\t/>\n\t\t\t\t\t\t{currentPage - 1 > 1 && (\n\t\t\t\t\t\t\t<PaginationItem onClick={() => setCurrentPage(currentPage - 2)}>\n\t\t\t\t\t\t\t\t...\n\t\t\t\t\t\t\t</PaginationItem>\n\t\t\t\t\t\t)}\n\t\t\t\t\t\t{pagination()}\n\t\t\t\t\t\t{currentPage + 1 < totalPage && (\n\t\t\t\t\t\t\t<PaginationItem onClick={() => setCurrentPage(currentPage + 2)}>\n\t\t\t\t\t\t\t\t...\n\t\t\t\t\t\t\t</PaginationItem>\n\t\t\t\t\t\t)}\n\t\t\t\t\t\t<PaginationItem\n\t\t\t\t\t\t\tisNext\n\t\t\t\t\t\t\tisDisabled={!(currentPage + 1 <= totalPage)}\n\t\t\t\t\t\t\tonClick={() => setCurrentPage(currentPage + 1)}\n\t\t\t\t\t\t/>\n\t\t\t\t\t\t<PaginationItem\n\t\t\t\t\t\t\tisLast\n\t\t\t\t\t\t\tisDisabled={!(currentPage + 1 <= totalPage)}\n\t\t\t\t\t\t\tonClick={() => setCurrentPage(totalPage)}\n\t\t\t\t\t\t/>\n\t\t\t\t\t</Pagination>\n\t\t\t\t)}\n\n\t\t\t\t<Select\n\t\t\t\t\tsize='sm'\n\t\t\t\t\tariaLabel='Per'\n\t\t\t\t\tonChange={(e: { target: { value: string } }) => {\n\t\t\t\t\t\tsetPerPage(parseInt(e.target.value, 10));\n\t\t\t\t\t\tsetCurrentPage(1);\n\t\t\t\t\t}}\n\t\t\t\t\tvalue={perPage.toString()}>\n\t\t\t\t\t{Object.keys(PER_COUNT).map((i) => (\n\t\t\t\t\t\t<Option key={i} value={i}>\n\t\t\t\t\t\t\t{i}\n\t\t\t\t\t\t</Option>\n\t\t\t\t\t))}\n\t\t\t\t</Select>\n\t\t\t</CardFooterRight>\n\t\t</CardFooter>\n\t);\n};\n\nexport default PaginationButtons;\n","import React, { FC, HTMLAttributes } from 'react';\n\ninterface IOptionProps extends HTMLAttributes<HTMLOptionElement> {\n\tchildren: string;\n\tvalue?: string | number;\n\tdisabled?: boolean;\n\tariaLabelledby?: string | null;\n}\nconst Option: FC<IOptionProps> = ({ children, value, disabled, ariaLabelledby, ...props }) => {\n\treturn (\n\t\t<option\n\t\t\tvalue={value}\n\t\t\tdisabled={disabled}\n\t\t\taria-labelledby={ariaLabelledby || children}\n\t\t\t{...props}>\n\t\t\t{children}\n\t\t</option>\n\t);\n};\n\nexport interface IOptionsProps {\n\tlist: {\n\t\tvalue?: string | number;\n\t\ttext?: string | number;\n\t\tlabel?: string | number;\n\t}[];\n}\n// @ts-ignore\nexport const Options: FC<IOptionsProps> = ({ list }) => {\n\treturn list?.map((item) => (\n\t\t// eslint-disable-next-line react/jsx-props-no-spreading\n\t\t<Option key={item.value} value={item.value} {...item}>\n\t\t\t{(item.text as string) || (item.label as string)}\n\t\t</Option>\n\t));\n};\n\nexport default Option;\n","import React, { forwardRef, HTMLAttributes, ReactElement, ReactNode } from 'react';\nimport classNames from 'classnames';\nimport Icon from '../icon/Icon';\n\ninterface IPaginationItemProps extends HTMLAttributes<HTMLLIElement> {\n\tclassName?: string;\n\tisDisabled?: boolean;\n\tisActive?: boolean;\n\tisPrev?: boolean;\n\tisFirst?: boolean;\n\tisNext?: boolean;\n\tisLast?: boolean;\n\tchildren?: ReactNode;\n\tonClick?(...args: unknown[]): unknown | undefined;\n}\nexport const PaginationItem = forwardRef<HTMLLIElement, IPaginationItemProps>(\n\t(\n\t\t{\n\t\t\tclassName,\n\t\t\tisDisabled,\n\t\t\tisActive,\n\t\t\tisPrev,\n\t\t\tisFirst,\n\t\t\tisNext,\n\t\t\tisLast,\n\t\t\tchildren,\n\t\t\tonClick,\n\t\t\t...props\n\t\t},\n\t\tref,\n\t) => {\n\t\treturn (\n\t\t\t<li\n\t\t\t\tref={ref}\n\t\t\t\tclassName={classNames(\n\t\t\t\t\t'page-item',\n\t\t\t\t\t{\n\t\t\t\t\t\tdisabled: isDisabled,\n\t\t\t\t\t\tactive: isActive,\n\t\t\t\t\t},\n\t\t\t\t\tclassName,\n\t\t\t\t)}\n\t\t\t\t{...props}>\n\t\t\t\t<span\n\t\t\t\t\trole='button'\n\t\t\t\t\tonClick={onClick}\n\t\t\t\t\tonKeyDown={onClick}\n\t\t\t\t\tclassName='page-link'\n\t\t\t\t\ttabIndex={isDisabled ? -1 : undefined}\n\t\t\t\t\taria-disabled={isDisabled ? 'true' : undefined}\n\t\t\t\t\taria-label={\n\t\t\t\t\t\t(isPrev && 'First Page') || (isNext && 'Last Page') || `${children} page`\n\t\t\t\t\t}>\n\t\t\t\t\t{isPrev && <Icon icon='ChevronLeft' />}\n\t\t\t\t\t{isFirst && <Icon icon='FirstPage' />}\n\t\t\t\t\t{isNext && <Icon icon='ChevronRight' />}\n\t\t\t\t\t{isLast && <Icon icon='LastPage' />}\n\t\t\t\t\t{children}\n\t\t\t\t</span>\n\t\t\t</li>\n\t\t);\n\t},\n);\nPaginationItem.displayName = 'PaginationItem';\n\ninterface IPaginationProps extends HTMLAttributes<HTMLElement> {\n\tariaLabel: string;\n\tchildren:\n\t\t| ReactElement<IPaginationItemProps>\n\t\t| ReactElement<IPaginationItemProps>[]\n\t\t| ReactNode\n\t\t| ReactNode[];\n\tclassName?: string | undefined;\n\tsize?: 'sm' | 'lg' | null;\n}\nconst Pagination = forwardRef<HTMLDivElement, IPaginationProps>(\n\t({ ariaLabel, className, children, size, ...props }, ref) => {\n\t\treturn (\n\t\t\t<nav ref={ref} aria-label={ariaLabel} className={className} {...props}>\n\t\t\t\t<ul className={classNames('pagination', { [`pagination-${size}`]: size }, 'm-0')}>\n\t\t\t\t\t{children}\n\t\t\t\t</ul>\n\t\t\t</nav>\n\t\t);\n\t},\n);\nPagination.displayName = 'Pagination';\n\nexport default Pagination;\n","import React, { forwardRef, HTMLAttributes, ReactNode } from 'react';\nimport classNames from 'classnames';\nimport Option, { IOptionsProps, Options } from '../Option';\nimport Validation from './Validation';\n\ninterface ISelectProps extends Partial<IOptionsProps>, HTMLAttributes<HTMLSelectElement> {\n\tid?: string;\n\tclassName?: string;\n\tname?: string;\n\tchildren?: ReactNode;\n\tariaLabel: string;\n\tplaceholder?: string;\n\tsize?: 'lg' | 'sm';\n\tmultiple?: boolean;\n\tdisabled?: boolean;\n\trequired?: boolean;\n\tariaDescribedby?: string;\n\tariaLabelledby?: string;\n\ttitle?: string;\n\tvalue?: string | string[];\n\tdefaultValue?: string | string[];\n\tisTouched?: boolean;\n\tisValid?: boolean;\n\tinvalidFeedback?: string;\n\tvalidFeedback?: string;\n\tisValidMessage?: boolean;\n\tisTooltipFeedback?: boolean;\n\tonBlur?(...args: unknown[]): unknown;\n\tonChange?(...args: unknown[]): unknown;\n\tonFocus?(...args: unknown[]): unknown;\n\tonInput?(...args: unknown[]): unknown;\n\tonInvalid?(...args: unknown[]): unknown;\n\tonSelect?(...args: unknown[]): unknown;\n}\nconst Select = forwardRef<HTMLSelectElement, ISelectProps>(\n\t(\n\t\t{\n\t\t\tid,\n\t\t\tname,\n\t\t\tclassName,\n\t\t\tchildren,\n\t\t\trequired,\n\t\t\tplaceholder,\n\t\t\tariaDescribedby,\n\t\t\tariaLabelledby,\n\t\t\tariaLabel,\n\t\t\tlist,\n\t\t\tmultiple,\n\t\t\ttitle,\n\t\t\tsize,\n\t\t\tdisabled,\n\t\t\tvalue,\n\t\t\tdefaultValue,\n\t\t\tisValid,\n\t\t\tisTouched,\n\t\t\tinvalidFeedback,\n\t\t\tvalidFeedback,\n\t\t\tisValidMessage = true,\n\t\t\tisTooltipFeedback,\n\t\t\tonBlur,\n\t\t\tonChange,\n\t\t\tonFocus,\n\t\t\tonInput,\n\t\t\tonInvalid,\n\t\t\tonSelect,\n\t\t\t...props\n\t\t},\n\n\t\tref,\n\t) => {\n\t\treturn (\n\t\t\t<>\n\t\t\t\t<select\n\t\t\t\t\tref={ref}\n\t\t\t\t\tid={id}\n\t\t\t\t\tclassName={classNames(\n\t\t\t\t\t\t'form-select',\n\t\t\t\t\t\t{\n\t\t\t\t\t\t\t[`form-select-${size}`]: size,\n\t\t\t\t\t\t\t'text-muted': value === '' && placeholder,\n\t\t\t\t\t\t\t'is-invalid': !isValid && isTouched && invalidFeedback,\n\t\t\t\t\t\t\t'is-valid': !isValid && isTouched && !invalidFeedback,\n\t\t\t\t\t\t},\n\t\t\t\t\t\tclassName,\n\t\t\t\t\t)}\n\t\t\t\t\tname={name}\n\t\t\t\t\taria-label={ariaLabel}\n\t\t\t\t\taria-describedby={ariaDescribedby}\n\t\t\t\t\taria-labelledby={ariaLabelledby}\n\t\t\t\t\tmultiple={multiple}\n\t\t\t\t\tdisabled={disabled}\n\t\t\t\t\ttitle={title}\n\t\t\t\t\tvalue={value}\n\t\t\t\t\tdefaultValue={defaultValue}\n\t\t\t\t\trequired={required}\n\t\t\t\t\tonBlur={onBlur}\n\t\t\t\t\tonChange={onChange}\n\t\t\t\t\tonFocus={onFocus}\n\t\t\t\t\tonInput={onInput}\n\t\t\t\t\tonInvalid={onInvalid}\n\t\t\t\t\tonSelect={onSelect}\n\t\t\t\t\t{...props}>\n\t\t\t\t\t{placeholder && (\n\t\t\t\t\t\t<Option value='' hidden>\n\t\t\t\t\t\t\t{placeholder}\n\t\t\t\t\t\t</Option>\n\t\t\t\t\t)}\n\t\t\t\t\t{children || (list && <Options list={list} />)}\n\t\t\t\t</select>\n\t\t\t\t{isValidMessage && (\n\t\t\t\t\t<Validation\n\t\t\t\t\t\tisTouched={isTouched}\n\t\t\t\t\t\tinvalidFeedback={invalidFeedback}\n\t\t\t\t\t\tvalidFeedback={validFeedback}\n\t\t\t\t\t\tisTooltip={isTooltipFeedback}\n\t\t\t\t\t/>\n\t\t\t\t)}\n\t\t\t</>\n\t\t);\n\t},\n);\nSelect.displayName = 'Select';\n\nexport default Select;\n","import { useMemo, useState } from 'react';\n\nconst useSortableData = (items: any[], config = null) => {\n\tconst [sortConfig, setSortConfig] = useState(config);\n\n\tconst sortedItems = useMemo(() => {\n\t\tconst sortableItems = [...items];\n\t\tif (sortConfig !== null) {\n\t\t\tsortableItems.sort((a, b) => {\n\t\t\t\t// @ts-ignore\n\t\t\t\tif (a[sortConfig.key] < b[sortConfig.key]) {\n\t\t\t\t\t// @ts-ignore\n\t\t\t\t\treturn sortConfig.direction === 'ascending' ? -1 : 1;\n\t\t\t\t}\n\t\t\t\t// @ts-ignore\n\t\t\t\tif (a[sortConfig.key] > b[sortConfig.key]) {\n\t\t\t\t\t// @ts-ignore\n\t\t\t\t\treturn sortConfig.direction === 'ascending' ? 1 : -1;\n\t\t\t\t}\n\t\t\t\treturn 0;\n\t\t\t});\n\t\t}\n\t\treturn sortableItems;\n\t}, [items, sortConfig]);\n\n\tconst requestSort = (key: any) => {\n\t\tlet direction = 'ascending';\n\t\t// @ts-ignore\n\t\tif (sortConfig && sortConfig.key === key && sortConfig.direction === 'ascending') {\n\t\t\tdirection = 'descending';\n\t\t}\n\t\t// @ts-ignore\n\t\tsetSortConfig({ key, direction });\n\t};\n\n\tconst getClassNamesFor = (key: any) => {\n\t\tif (!sortConfig) {\n\t\t\treturn 'd-none';\n\t\t}\n\n\t\t// @ts-ignore\n\t\treturn sortConfig.key === key ? sortConfig.direction : 'd-none';\n\t};\n\n\treturn { items: sortedItems, requestSort, getClassNamesFor, sortConfig };\n};\n\nexport default useSortableData;\n","import React, { FC, useEffect, useRef, useState } from 'react';\nimport { useFormik } from 'formik';\nimport * as Yup from 'yup';\nimport Modal, { ModalBody, ModalFooter, ModalHeader, ModalTitle } from '../../../components/bootstrap/Modal';\nimport showNotification from '../../../components/extras/showNotification';\nimport Icon from '../../../components/icon/Icon';\nimport FormGroup from '../../../components/bootstrap/forms/FormGroup';\nimport Input from '../../../components/bootstrap/forms/Input';\nimport Button from '../../../components/bootstrap/Button';\nimport Select from '../../../components/bootstrap/forms/Select';\nimport Option from '../../../components/bootstrap/Option';\n\nimport {\n  useAddThreadMutation,\n  useUpdateThreadMutation,\n} from '../../../redux/api/thredApi';\nimport { fetchUsers } from '../../../redux/api/userApi';\n\ninterface IThread {\n  _id?: string;\n  threadName: string;\n  visibility: 'public' | 'private';\n  description?: string;\n  ownerId?: string;\n}\n\ninterface IThreadAddModalProps {\n  id: string;\n  isOpen: boolean;\n  editItem?: IThread;\n  setIsOpen: (isOpen: boolean) => void;\n  onSuccess?: () => void;\n}\n\nconst ThreadAddModal: FC<IThreadAddModalProps> = ({\n  id,\n  isOpen,\n  setIsOpen,\n  editItem,\n  onSuccess,\n}) => {\n  const [addThread] = useAddThreadMutation();\n  const [updateThread] = useUpdateThreadMutation();\n  const [isSubmitting, setIsSubmitting] = useState(false);\n  const [allUsers, setAllUsers] = useState<any[]>([]);\n  const [filteredUsers, setFilteredUsers] = useState<any[]>([]);\n  const [searchTerm, setSearchTerm] = useState('');\n  const [isLoading, setIsLoading] = useState(false);\n  const [showUserList, setShowUserList] = useState(false);\n  const userBoxRef = useRef<HTMLDivElement>(null);\n\n  useEffect(() => {\n    const fetchData = async () => {\n      setIsLoading(true);\n      try {\n        const data = await fetchUsers();\n        setAllUsers(data);\n        setFilteredUsers(data);\n      } catch (error) {\n        showNotification(\n          <span className=\"d-flex align-items-center\">\n            <Icon icon=\"Error\" size=\"lg\" className=\"me-1\" />\n            <span>Failed to load users</span>\n          </span>,\n          'Please try again later.'\n        );\n      } finally {\n        setIsLoading(false);\n      }\n    };\n\n    fetchData();\n  }, []);\n\n  useEffect(() => {\n    if (!searchTerm) {\n      setFilteredUsers(allUsers);\n    } else {\n      setFilteredUsers(\n        allUsers.filter((user) =>\n          user.fullName?.toLowerCase().includes(searchTerm.toLowerCase())\n        )\n      );\n    }\n  }, [searchTerm, allUsers]);\n\n  useEffect(() => {\n    const handleClickOutside = (event: MouseEvent) => {\n      if (\n        userBoxRef.current &&\n        !userBoxRef.current.contains(event.target as Node)\n      ) {\n        setShowUserList(false);\n      }\n    };\n\n    document.addEventListener('mousedown', handleClickOutside);\n    return () => {\n      document.removeEventListener('mousedown', handleClickOutside);\n    };\n  }, []);\n\n  const formik = useFormik({\n    initialValues: {\n      threadName: editItem?.threadName || '',\n      visibility: editItem?.visibility || 'Public',\n      description: editItem?.description || '',\n      ownerId: editItem?.ownerId || '',\n    },\n    validationSchema: Yup.object({\n      threadName: Yup.string()\n        .required('Thread name is required')\n        .min(3, 'Thread name must be at least 3 characters'),\n      visibility: Yup.string()\n        .required('Visibility is required')\n        .oneOf(['Public', 'Private'], 'Invalid visibility option'),\n      description: Yup.string().min(5, 'Description must be at least 5 characters'),\n      ownerId: Yup.string().required('Owner is required'),\n    }),\n    enableReinitialize: true,\n    onSubmit: async (values) => {\n      setIsSubmitting(true);\n      try {\n        if (editItem?._id) {\n          await updateThread({ id: editItem._id, body: values }).unwrap();\n        } else {\n          await addThread(values).unwrap();\n        }\n\n        showNotification(\n          <span className=\"d-flex align-items-center\">\n            <Icon icon=\"CheckCircle\" size=\"lg\" className=\"me-1\" />\n            <span>{editItem ? 'Thread Updated' : 'Thread Added'}</span>\n          </span>,\n          `${values.threadName} has been ${editItem ? 'updated' : 'added'} successfully.`\n        );\n\n        formik.resetForm();\n        setIsOpen(false);\n        onSuccess?.();\n      } catch (error) {\n        console.error(error);\n        showNotification(\n          <span className=\"d-flex align-items-center\">\n            <Icon icon=\"Error\" size=\"lg\" className=\"me-1\" />\n            <span>Error</span>\n          </span>,\n          `Failed to ${editItem ? 'update' : 'add'} thread. Please try again.`\n        );\n      } finally {\n        setIsSubmitting(false);\n      }\n    },\n  });\n\n  if (!isOpen) return null;\n\n  return (\n    <Modal isOpen={isOpen} setIsOpen={setIsOpen} size=\"md\" titleId={id} isStaticBackdrop isCentered>\n      <ModalHeader setIsOpen={setIsOpen} className=\"p-4\">\n        <ModalTitle id={id}>{editItem ? 'Edit Thread' : 'Add New Thread'}</ModalTitle>\n      </ModalHeader>\n      <ModalBody className=\"px-4\">\n        {/* Thread Name */}\n        <FormGroup id=\"threadName\" label=\"Thread Name\" className=\"mb-3\">\n          <Input\n            id=\"threadName\"\n            name=\"threadName\"\n            placeholder=\"Enter thread name\"\n            onChange={formik.handleChange}\n            onBlur={formik.handleBlur}\n            value={formik.values.threadName}\n            isTouched={!!formik.touched.threadName}\n            isValid={!formik.errors.threadName}\n            invalidFeedback={formik.errors.threadName}\n          />\n        </FormGroup>\n\n        {/* Description */}\n        <FormGroup id=\"description\" label=\"Description\" className=\"mb-3\">\n          <Input\n            id=\"description\"\n            name=\"description\"\n            placeholder=\"Enter description\"\n            onChange={formik.handleChange}\n            onBlur={formik.handleBlur}\n            value={formik.values.description}\n            isTouched={!!formik.touched.description}\n            isValid={!formik.errors.description}\n            invalidFeedback={formik.errors.description}\n          />\n        </FormGroup>\n\n        {/* Visibility */}\n        <FormGroup id=\"visibility\" label=\"Visibility\" className=\"mb-3\">\n          <Select\n            id=\"visibility\"\n            name=\"visibility\"\n            onChange={formik.handleChange}\n            onBlur={formik.handleBlur}\n            value={formik.values.visibility}\n            isTouched={!!formik.touched.visibility}\n            isValid={!formik.errors.visibility}\n            invalidFeedback={formik.errors.visibility}\n            ariaLabel=\"\"\n          >\n            <Option value=\"Public\">Public</Option>\n            <Option value=\"Private\">Private</Option>\n          </Select>\n        </FormGroup>\n\n        {/* Owner Selection with Click-to-Show List */}\n        <FormGroup id=\"ownerId\" label=\"Owner (search by name)\" className=\"mb-3\">\n          <div ref={userBoxRef}>\n            <Input\n              type=\"text\"\n              placeholder=\"Search user...\"\n              onFocus={() => setShowUserList(true)}\n              onChange={(e : any) => {\n                setSearchTerm(e.target.value);\n                setShowUserList(true);\n                formik.setFieldTouched('ownerId', true);\n              }}\n              value={searchTerm}\n              className=\"mb-2\"\n            />\n            {showUserList ? (\n              <div className=\"border rounded p-2\" style={{ maxHeight: '200px', overflowY: 'auto' }}>\n                {isLoading ? (\n                  <div>Loading users...</div>\n                ) : filteredUsers.length === 0 ? (\n                  <div className=\"text-muted\">No user found</div>\n                ) : (\n                  filteredUsers.map((user) => (\n                    <div\n                      key={user._id}\n                      className={`p-2 rounded mb-1 ${\n                        formik.values.ownerId === user._id ? 'bg-primary text-white' : 'hover:bg-light'\n                      }`}\n                      style={{ cursor: 'pointer' }}\n                      onClick={() => {\n                        formik.setFieldValue('ownerId', user._id);\n                        setSearchTerm(user.fullName);\n                        setShowUserList(false);\n                      }}\n                    >\n                      {user.fullName}\n                    </div>\n                  ))\n                )}\n              </div>\n            ) : null}\n            {formik.touched.ownerId && formik.errors.ownerId && (\n              <div className=\"text-danger mt-1\">{formik.errors.ownerId}</div>\n            )}\n          </div>\n        </FormGroup>\n      </ModalBody>\n\n      <ModalFooter className=\"px-4 pb-4\">\n        <Button color=\"secondary\" onClick={() => setIsOpen(false)} className=\"me-2\" isDisable={isSubmitting}>\n          Cancel\n        </Button>\n        <Button color=\"primary\" onClick={formik.handleSubmit} isDisable={isSubmitting}>\n          {editItem ? 'Update Thread' : 'Add Thread'} {isSubmitting && '...'}\n        </Button>\n      </ModalFooter>\n    </Modal>\n  );\n};\n\nexport default ThreadAddModal;\n","import React from 'react';\nimport PageWrapper from '../../../layout/PageWrapper/PageWrapper';\nimport Page from '../../../layout/Page/Page';\nimport Humans from '../../../assets/img/scene4.png';\nimport HumansWebp from '../../../assets/img/scene4.webp';\nimport Button from '../../../components/bootstrap/Button';\nimport { demoPagesMenu } from '../../../menu';\n\nconst ErrorWrapper = () => {\n    return (\n        <PageWrapper title={demoPagesMenu.pageError.text}>\n            <Page>\n                <div className='row d-flex align-items-center h-100'>\n                    <div className='col-12 d-flex flex-column justify-content-center align-items-center'>\n                        <div\n                            className='text-primary fw-bold'\n                            style={{ fontSize: 'calc(3rem + 3vw)' }}>\n                            Error\n                        </div>\n                        <div\n                            className='text-dark fw-bold'\n                            style={{ fontSize: 'calc(1.5rem + 1.5vw)' }}>\n                            Something went wrong\n                        </div>\n                    </div>\n                    <div className='col-12 d-flex align-items-baseline justify-content-center'>\n                        <img\n                            srcSet={HumansWebp}\n                            src={Humans}\n                            alt='Humans'\n                            style={{ height: '50vh' }}\n                        />\n                    </div>\n                    <div className='col-12 d-flex flex-column justify-content-center align-items-center'>\n                        <Button\n                            className='px-5 py-3'\n                            color='primary'\n                            isLight\n                            icon='HolidayVillage'\n                            tag='a'\n                            href='/'>\n                            Homepage\n                        </Button>\n                    </div>\n                </div>\n            </Page>\n        </PageWrapper>\n    );\n};\n\nexport default ErrorWrapper;\n","import React from 'react';\nimport PageWrapper from '../../../layout/PageWrapper/PageWrapper';\nimport Page from '../../../layout/Page/Page';\nimport Spinner from '../../../components/bootstrap/Spinner';\n\nconst LoadingWrapper = () => {\n    return (\n        <PageWrapper title={\"Loading...\"}>\n            <Page className=\"d-flex justify-content-center align-items-center w-100 h-100\">\n                <div className='row d-flex align-items-center h-100'>\n                    <div className='col-12 d-flex flex-column justify-content-center align-items-center mt-5'>\n                        <div\n                            className='text-primary fw-bold'>\n                            <Spinner size={30}  />\n                        </div>\n                        <div\n                            className='text-dark fw-bold'\n                            style={{ fontSize: 'calc(1rem + 1.5vw)' }}>\n                            Please wait a moment\n                        </div>\n                    </div>\n                </div>\n            </Page>\n        </PageWrapper>\n    );\n};\n\nexport default LoadingWrapper;\n","import React, { useState } from 'react';\nimport { useFormik } from 'formik';\nimport PageWrapper from '../../../layout/PageWrapper/PageWrapper';\nimport SubHeader, { SubHeaderLeft, SubHeaderRight, SubheaderSeparator } from '../../../layout/SubHeader/SubHeader';\nimport Page from '../../../layout/Page/Page';\nimport { demoPagesMenu } from '../../../menu';\nimport Card, { CardBody } from '../../../components/bootstrap/Card';\nimport { getFirstLetter } from '../../../helpers/helpers';\nimport PaginationButtons, { dataPagination, PER_COUNT } from '../../../components/PaginationButtons';\nimport Button from '../../../components/bootstrap/Button';\nimport Icon from '../../../components/icon/Icon';\nimport Input from '../../../components/bootstrap/forms/Input';\nimport Dropdown, { DropdownItem, DropdownMenu, DropdownToggle } from '../../../components/bootstrap/Dropdown';\nimport FormGroup from '../../../components/bootstrap/forms/FormGroup';\nimport useSortableData from '../../../hooks/useSortableData';\nimport InputGroup, { InputGroupText } from '../../../components/bootstrap/forms/InputGroup';\nimport Popovers from '../../../components/bootstrap/Popovers';\nimport { getColorNameWithIndex } from '../../../common/data/enumColors';\nimport useDarkMode from '../../../hooks/useDarkMode';\nimport ThreadAddModal from './ThredAdd';\nimport { useGetThreadsQuery, useDeleteThreadMutation } from '../../../redux/api/thredApi';\nimport showNotification from '../../../components/extras/showNotification';\nimport Modal, { ModalBody, ModalHeader } from '../../../components/bootstrap/Modal';\nimport { error } from 'console';\nimport ErrorWrapper from '../other/onError';\nimport LoadingWrapper from '../other/onLoading';\nimport QrTemplateModal from '../../kindy-components/QrTemplateModal';\n\nconst safeGetColorNameWithIndex = (index?: string | number) => {\n  if (index === undefined || index === null) return 'primary';\n  try {\n    const num = typeof index === 'string' ? parseInt(index, 10) || 0 : index;\n    return getColorNameWithIndex(Math.abs(num) % 20);\n  } catch {\n    return 'primary';\n  }\n};\n\nconst ThreadManagement = () => {\n  const { darkModeStatus } = useDarkMode();\n\n  const [currentPage, setCurrentPage] = useState<number>(1);\n  const [perPage, setPerPage] = useState<number>(PER_COUNT['10']);\n  const [deleteThread] = useDeleteThreadMutation();\n  // const [qrModal, setQrModal] = useState({ isOpen: false, src: '', threadName: '' });\n  const [isModalOpen, setIsModalOpen] = useState(false);\n  const [selectedThread, setSelectedThread] = useState<any>(undefined);\n  const [qrModal, setQrModal] = useState({ isOpen: false, src: '', name: '' });\n\n  const {\n    data: threadsResponse,\n    isLoading,\n    isError,\n    refetch\n  } = useGetThreadsQuery({\n    page_number: currentPage,\n    page_size: perPage,\n  });\n\n  // const threadsData = threadsResponse?.data || [];\nconst threadsData = Array.isArray(threadsResponse?.data?.data)\n  ? threadsResponse.data?.data : [];\n\n  console.log('threadsData', threadsData)\n\n  const formik = useFormik({\n    initialValues: {\n      searchInput: '',\n      threadIdFilter: '',\n    },\n    onSubmit: () => {\n      // Filter logic is handled in the filteredData calculation\n    },\n  });\n\n  const filteredData = threadsData?.filter((f: any) => {\n    if (!f) return false;\n    return (\n      (f.threadName?.toLowerCase().includes(formik.values.searchInput.toLowerCase()) || '')\n    );\n  });\n  console.log('filteredDatafilteredData', filteredData)\n  const { items, requestSort, getClassNamesFor } = useSortableData(filteredData);\n  console.log('itemsitems', items)\n  const handleSuccess = () => {\n    refetch();\n  };\n\n  const handleDelete = async (id?: string) => {\n    if (!id) return;\n\n    if (window.confirm('Are you sure you want to delete this thread?')) {\n      try {\n        await deleteThread(id).unwrap();\n        handleSuccess();\n        showNotification(\n          <span className='d-flex align-items-center'>\n            <Icon icon='CheckCircle' size='lg' className='me-1' />\n            <span>Thread Deleted</span>\n          </span>,\n          'Thread has been deleted successfully.',\n        );\n      } catch (error) {\n        console.error('Failed to delete thread:', error);\n        showNotification(\n          <span className='d-flex align-items-center'>\n            <Icon icon='Error' size='lg' className='me-1' />\n            <span>Error</span>\n          </span>,\n          'Failed to delete thread. Please try again.',\n        );\n      }\n    }\n  };\n\n  const handleDownloadQR = (src: string, threadName: string) => {\n    const link = document.createElement('a');\n    link.href = src;\n    link.download = `QR_${threadName || 'Thread'}.png`;\n    document.body.appendChild(link);\n    link.click();\n    document.body.removeChild(link);\n  };\n\n  const handlePrintQR = (src: string, threadName: string) => {\n    const printWindow = window.open('', '_blank');\n    if (printWindow) {\n      printWindow.document.write(`\n        <html>\n          <head>\n            <title>Print QR Code - ${threadName}</title>\n            <style>\n              body { text-align: center; padding: 20px; }\n              img { max-width: 100%; height: auto; margin: 20px 0; }\n              h1 { margin-bottom: 10px; }\n            </style>\n          </head>\n          <body>\n            <h1>${threadName}</h1>\n            <img src=\"${src}\" alt=\"QR Code\" />\n            <p>Scan this QR code to access the thread</p>\n            <script>\n              setTimeout(function() { window.print(); window.close(); }, 100);\n            </script>\n          </body>\n        </html>\n      `);\n      printWindow.document.close();\n    }\n  };\n\n\n  return (\n    <PageWrapper title={demoPagesMenu.crm.subMenu.customersList.text} className='mt-3'>\n      <SubHeader>\n        <SubHeaderLeft>\n          <label className='border-0 bg-transparent cursor-pointer me-0' htmlFor='searchInput'>\n            <Icon icon='Search' size='2x' color='primary' />\n          </label>\n          <Input\n            id='searchInput'\n            type='search'\n            className='border-0 shadow-none bg-transparent'\n            placeholder='Search threads...'\n            onChange={formik.handleChange}\n            value={formik.values.searchInput}\n          />\n        </SubHeaderLeft>\n        <SubHeaderRight>\n          <Dropdown>\n            <DropdownToggle hasIcon={false}>\n              <Button\n                icon='FilterAlt'\n                color='dark'\n                isLight\n                className='btn-only-icon position-relative'\n                aria-label='Filter'\n              >\n                {threadsData.length !== filteredData.length && (\n                  <Popovers desc='Filtering applied' trigger='hover'>\n                    <span className='position-absolute top-0 start-100 translate-middle badge border border-light rounded-circle bg-danger p-2'>\n                      <span className='visually-hidden'>there is filtering</span>\n                    </span>\n                  </Popovers>\n                )}\n              </Button>\n            </DropdownToggle>\n            <DropdownMenu isAlignmentEnd size='lg'>\n              <div className='container py-2'>\n                <div className='row g-3'>\n                  <FormGroup label='Thread ID' className='col-12'>\n                    <Input\n                      id='threadIdFilter'\n                      ariaLabel='Thread ID'\n                      placeholder='Filter by Thread ID'\n                      onChange={formik.handleChange}\n                      value={formik.values.threadIdFilter}\n                    />\n                  </FormGroup>\n                </div>\n              </div>\n            </DropdownMenu>\n          </Dropdown>\n          <SubheaderSeparator />\n          <Button\n            icon='PersonAdd'\n            color='primary'\n            isLight\n            onClick={() => {\n              setIsModalOpen(true);\n              setSelectedThread(undefined);\n            }}\n          >\n            New Thread\n          </Button>\n        </SubHeaderRight>\n      </SubHeader>\n      <Page>\n        <div className='row h-100'>\n          <div className='col-12'>\n            {isError ? <ErrorWrapper /> : isLoading ? <LoadingWrapper /> : (\n              <Card stretch>\n                <CardBody isScrollable className='table-responsive'>\n                  <table className='table table-modern table-hover'>\n                    <thead>\n                      <tr>\n                        <th className='text-center cursor-pointer' onClick={() => requestSort('_id')}>\n                          Thread{' '}\n                          <Icon size='lg' className={getClassNamesFor('_id')} icon='FilterList' />\n                        </th>\n                        <th className='text-center'>Thread Name</th>\n                        <th className='text-center'>Visibility</th>\n                        <th className='text-center'>Total Members</th>\n                        <th className='text-center'>QR Code</th>\n                        <th className='text-center'>Actions</th>\n                      </tr>\n                    </thead>\n                    <tbody>\n                      {dataPagination(items, currentPage, perPage).map((i) => (\n                        <tr key={i?._id || Math.random()}>\n                          <td className='text-center'>\n                            <div className='d-flex align-items-center justify-content-center'>\n                              <div className='flex-shrink-0'>\n                                <div className='ratio ratio-1x1 me-3' style={{ width: 48 }}>\n                                  <div\n                                    className={`bg-l${darkModeStatus ? 'o25' : '25'}-${safeGetColorNameWithIndex(i?._id)} text-${safeGetColorNameWithIndex(i?._id)} rounded-2 d-flex align-items-center justify-content-center`}\n                                  >\n                                    <span className='fw-bold'>{getFirstLetter(i?.threadName || '')}</span>\n                                  </div>\n                                </div>\n                              </div>\n                            </div>\n                          </td>\n                          <td className='text-center'>\n                            <div className='fs-6 fw-bold'>{i?.threadName || 'N/A'}</div>\n                          </td>\n                          <td className='text-center'>\n                            <div className='fs-6 fw-bold'>{i?.visibility || 'N/A'}</div>\n                          </td>\n                          <td className='text-center'>\n                            <div className='fs-6 fw-bold'>{i?.members ? i.members.length : 'N/A'}</div>\n                          </td>\n                          <td className='text-center'>\n                            {i?.qrCode ? (\n                              <div\n                                className=\"d-flex justify-content-center\"\n                              // onClick={() => setQrModal({\n                              //   isOpen: true,\n                              //   src: `${process.env.REACT_APP_API_URL}/${i.qrCode}`,\n                              //   threadName: i.threadName\n                              // })}\n                              >\n                                <div\n                                  style={{\n                                    width: '50px',\n                                    height: '50px',\n                                    display: 'flex',\n                                    justifyContent: 'center',\n                                    alignItems: 'center',\n                                    cursor: 'pointer',\n                                  }}\n                                >\n                                  <img\n                                    src={`${process.env.REACT_APP_API_URL}/${i.qrCode}`}\n                                    alt=\"QR Code\"\n                                    style={{\n                                      width: '100%',\n                                      height: '100%',\n                                      objectFit: 'contain',\n                                    }}\n                                  />\n                                </div>\n                              </div>\n                            ) : (\n                              <div className='fs-6 text-muted'>No QR</div>\n                            )}\n                          </td>\n                          <td className='text-center'>\n                            <Dropdown>\n                              <DropdownToggle hasIcon={false}>\n                                <Button\n                                  icon='MoreHoriz'\n                                  color='dark'\n                                  isLight\n                                  shadow='sm'\n                                  aria-label='More actions'\n                                />\n                              </DropdownToggle>\n                              <DropdownMenu isAlignmentEnd>\n                                <DropdownItem>\n                                  <Button\n                                    icon='Print'\n                                    onClick={() => setQrModal({ isOpen: true, src: `${process.env.REACT_APP_API_URL}/${i.qrCode}`, name: i?.threadName })}\n                                  >\n                                    Print QR\n                                  </Button>\n                                </DropdownItem>\n                                <DropdownItem>\n                                  <Button\n                                    icon='Edit'\n                                    onClick={() => {\n                                      setSelectedThread(i);\n                                      setIsModalOpen(true);\n                                    }}\n                                  >\n                                    Edit\n                                  </Button>\n                                </DropdownItem>\n                                <DropdownItem>\n                                  <Button\n                                    icon='Delete'\n                                    onClick={() => handleDelete(i?._id)}\n                                  >\n                                    Delete\n                                  </Button>\n                                </DropdownItem>\n                              </DropdownMenu>\n                            </Dropdown>\n                          </td>\n                        </tr>\n                      ))}\n                    </tbody>\n                  </table>\n                </CardBody>\n                <PaginationButtons\n                  data={filteredData}\n                  label='threads'\n                  setCurrentPage={setCurrentPage}\n                  currentPage={currentPage}\n                  perPage={perPage}\n                  setPerPage={setPerPage}\n                />\n              </Card>\n\n            )}\n          </div>\n        </div>\n      </Page>\n\n      {/* QR Code Modal */}\n      {/* <Modal\n        isOpen={qrModal.isOpen}\n        setIsOpen={() => setQrModal({ isOpen: false, src: '', threadName: '' })}\n        titleId='qr-modal'\n        isCentered\n        isScrollable\n        size='md'\n      >\n        <ModalHeader setIsOpen={() => setQrModal({ isOpen: false, src: '', threadName: '' })}>\n          QR Code - {qrModal.threadName}\n        </ModalHeader>\n        <ModalBody>\n          <div className='text-center mb-3'>\n            <img\n              src={qrModal.src}\n              alt=\"Full Size QR Code\"\n              style={{ width: '100%', height: 'auto', maxWidth: '300px' }}\n            />\n          </div>\n          <div className='d-flex justify-content-center gap-3'>\n           \n            <Button\n              className='w-full'\n              color='info'\n              icon='Print'\n              onClick={() => handlePrintQR(qrModal.src, qrModal.threadName)}\n            >\n              Print\n            </Button>\n          </div>\n        </ModalBody>\n      </Modal> */}\n\n      <QrTemplateModal\n        isOpen={qrModal.isOpen}\n        setIsOpen={() => setQrModal({ ...qrModal, isOpen: false, src: '', name: '' })}\n        beadName={qrModal.name}\n        qrUrl={qrModal.src}\n      />\n\n      <ThreadAddModal\n        id=\"thread-modal\"\n        isOpen={isModalOpen}\n        setIsOpen={() => {\n          setIsModalOpen(false)\n          setSelectedThread(undefined);\n        }}\n        editItem={selectedThread}\n        onSuccess={handleSuccess}\n      />\n    </PageWrapper>\n  );\n};\n\nexport default ThreadManagement;","import React, { FC, useRef, useState } from 'react';\nimport { useReactToPrint } from 'react-to-print';\nimport jsPDF from 'jspdf';\nimport html2pdf from 'html2pdf.js';\nimport html2canvas from 'html2canvas';\nimport Modal, {\n    ModalBody,\n    ModalFooter,\n    ModalHeader,\n    ModalTitle,\n} from '../../components/bootstrap/Modal';\nimport FormGroup from '../../components/bootstrap/forms/FormGroup';\nimport Input from '../../components/bootstrap/forms/Input';\nimport Select from '../../components/bootstrap/forms/Select';\nimport Button from '../../components/bootstrap/Button';\n\ninterface QrTemplateModalProps {\n    isOpen: boolean;\n    setIsOpen: (open: boolean) => void;\n    beadName: string;\n    qrUrl: string;\n    qrImageUrl?: string;\n}\nconst getPageSizeInMM = (size: string): [number, number] => {\n    switch (size) {\n        case 'A1': return [594, 841];\n        case 'A2': return [420, 594];\n        case 'A3': return [297, 420];\n        case 'A4': return [210, 297];\n        case 'Letter': return [215.9, 279.4];\n        default: return [210, 297];\n    }\n};\n\nconst QrTemplateModal: FC<QrTemplateModalProps> = ({\n    isOpen,\n    setIsOpen,\n    beadName,\n    qrUrl,\n    qrImageUrl,\n}) => {\n    const [quantity, setQuantity] = useState(1);\n    const [sheetSize, setSheetSize] = useState<'A1' | 'A2' | 'A3' | 'A4' | 'Letter'>('A4');\n    const [pageWidth, pageHeight] = getPageSizeInMM(sheetSize);\n\n\n    const printRef = useRef<HTMLDivElement>(null);\n\n    const handlePrint = useReactToPrint({\n        contentRef: printRef,\n        documentTitle: '',\n        pageStyle: `\n    @page {\n      size: ${sheetSize};\n      margin: 0;\n    }\n    html, body {\n      margin: 0 !important;\n      padding: 0 !important;\n      height: 100%;\n      width: 100%;\n      -webkit-print-color-adjust: exact !important;\n      print-color-adjust: exact !important;\n      background: white;\n    }\n    div {\n      break-after: page;\n    }\n  `,\n    });\n\n\n    const handleDownloadPdf = () => {\n        if (!printRef.current) return;\n        const opt = {\n            margin: 0,\n            filename: `${beadName}_QR_Codes.pdf`,\n            image: { type: 'jpeg', quality: 0.98 },\n            html2canvas: { scale: 2, useCORS: true },\n            jsPDF: { unit: 'mm', format: [pageWidth, pageHeight], orientation: 'portrait' },\n        };\n\n        html2pdf().set(opt).from(printRef.current).save();\n    };\n\n\n    if (!isOpen) return null;\n\n    return (\n        <>\n            <Modal isOpen={isOpen} setIsOpen={setIsOpen} size=\"md\" titleId=\"qr-template-modal\">\n                <ModalHeader setIsOpen={setIsOpen}>\n                    <ModalTitle id=\"qr-template-modal\">Print QR Codes</ModalTitle>\n                </ModalHeader>\n\n                <ModalBody>\n                    <div className=\"row g-3\">\n                        <FormGroup label=\"Sheet Size\" className=\"col-md-6\">\n                            <Select\n                                value={sheetSize}\n                                onChange={(e: any) => setSheetSize(e.target.value as any)}\n                                ariaLabel=\"Sheet Size\"\n                            >\n                                <option value=\"A1\">A1</option>\n                                <option value=\"A2\">A2</option>\n                                <option value=\"A3\">A3</option>\n                                <option value=\"A4\">A4</option>\n                                <option value=\"Letter\">Letter</option>\n                            </Select>\n\n                        </FormGroup>\n\n                        <FormGroup label=\"Quantity\" className=\"col-md-6\">\n                            <Input\n                                type=\"number\"\n                                min={1}\n                                value={quantity}\n                                onChange={(e: any) => setQuantity(Number(e.target.value))}\n                            />\n                        </FormGroup>\n                    </div>\n\n                    {/* Preview a single QR */}\n                    <div className=\"d-flex justify-content-center mt-4\">\n                        <div className=\"text-center\">\n                            <img\n                                src={qrImageUrl || qrUrl}\n                                alt={`QR Code for ${beadName}`}\n                                style={{ width: 200, height: 200 }}\n                            />\n                            <div className=\"mt-2 h4\">{beadName}</div>\n                        </div>\n                    </div>\n\n\n                </ModalBody>\n\n                <ModalFooter>\n                    <Button icon='Print' color=\"info\" isLight onClick={handlePrint}>\n                        Print\n                    </Button>\n                    <Button icon='PictureAsPdf' color=\"danger\" isLight onClick={handleDownloadPdf}>\n                        PDF\n                    </Button>\n                </ModalFooter>\n            </Modal>\n\n            <div style={{ display: 'none' }}>\n                <div ref={printRef}>\n                    {[...Array(quantity)].map((_, index) => (\n                        <div\n                            key={index}\n                            className='qr-pdf-page'\n                            style={{\n                                height: `${pageHeight}mm`,\n                                width: `${pageWidth}mm`,\n                                display: 'flex',\n                                flexDirection: 'column',\n                                justifyContent: 'center',\n                                alignItems: 'center',\n                            }}\n                        >\n                            <img\n                                src={qrImageUrl || qrUrl}\n                                alt={`QR Code Page ${index + 1}`}\n                                style={{ width: '80%', height: '80%', objectFit: 'contain', marginTop: -200 }}\n                            />\n\n                            <div\n                                style={{\n                                    // marginTop: '-100px',\n                                    fontSize: '24px',\n                                    fontWeight: 'bold',\n                                }}\n                            >\n                                {beadName}\n                            </div>\n                        </div>\n                    ))}\n                </div>\n            </div>\n        </>\n    );\n};\n\nexport default QrTemplateModal;\n"],"names":["PER_COUNT","dataPagination","data","currentPage","perPage","filter","i","index","_ref","setCurrentPage","setPerPage","label","totalItems","length","totalPage","Math","ceil","_jsxs","CardFooter","children","_jsx","CardFooterLeft","className","getInfo","start","end","CardFooterRight","Pagination","ariaLabel","PaginationItem","isFirst","isDisabled","onClick","isPrev","pagination","items","push","reverse","isActive","isNext","isLast","Select","size","onChange","e","parseInt","target","value","toString","Object","keys","map","Option","disabled","ariaLabelledby","props","Options","_ref2","list","item","text","forwardRef","ref","classNames","active","role","onKeyDown","tabIndex","undefined","Icon","icon","displayName","id","name","required","placeholder","ariaDescribedby","multiple","title","defaultValue","isValid","isTouched","invalidFeedback","validFeedback","isValidMessage","isTooltipFeedback","onBlur","onFocus","onInput","onInvalid","onSelect","_Fragment","hidden","Validation","isTooltip","config","arguments","sortConfig","setSortConfig","useState","useMemo","sortableItems","sort","a","b","key","direction","requestSort","getClassNamesFor","isOpen","setIsOpen","editItem","onSuccess","addThread","useAddThreadMutation","updateThread","useUpdateThreadMutation","isSubmitting","setIsSubmitting","allUsers","setAllUsers","filteredUsers","setFilteredUsers","searchTerm","setSearchTerm","isLoading","setIsLoading","showUserList","setShowUserList","userBoxRef","useRef","useEffect","async","fetchUsers","error","showNotification","fetchData","user","_user$fullName","fullName","toLowerCase","includes","handleClickOutside","event","current","contains","document","addEventListener","removeEventListener","formik","useFormik","initialValues","threadName","visibility","description","ownerId","validationSchema","Yup","min","oneOf","enableReinitialize","onSubmit","_id","body","values","unwrap","resetForm","console","Modal","titleId","isStaticBackdrop","isCentered","ModalHeader","ModalTitle","ModalBody","FormGroup","Input","handleChange","handleBlur","touched","errors","type","setFieldTouched","style","maxHeight","overflowY","cursor","setFieldValue","ModalFooter","Button","color","isDisable","handleSubmit","ErrorWrapper","PageWrapper","demoPagesMenu","pageError","Page","fontSize","srcSet","HumansWebp","src","Humans","alt","height","isLight","tag","href","LoadingWrapper","Spinner","safeGetColorNameWithIndex","num","getColorNameWithIndex","abs","ThreadManagement","_threadsResponse$data","_threadsResponse$data2","darkModeStatus","useDarkMode","deleteThread","useDeleteThreadMutation","isModalOpen","setIsModalOpen","selectedThread","setSelectedThread","qrModal","setQrModal","threadsResponse","isError","refetch","useGetThreadsQuery","page_number","page_size","threadsData","Array","isArray","log","searchInput","threadIdFilter","filteredData","f","_f$threadName","useSortableData","handleSuccess","crm","subMenu","customersList","SubHeader","SubHeaderLeft","htmlFor","SubHeaderRight","Dropdown","DropdownToggle","hasIcon","Popovers","desc","trigger","DropdownMenu","isAlignmentEnd","SubheaderSeparator","Card","stretch","CardBody","isScrollable","width","getFirstLetter","members","qrCode","display","justifyContent","alignItems","objectFit","shadow","DropdownItem","window","confirm","handleDelete","random","PaginationButtons","QrTemplateModal","beadName","qrUrl","ThreadAddModal","qrImageUrl","quantity","setQuantity","sheetSize","setSheetSize","pageWidth","pageHeight","getPageSizeInMM","printRef","handlePrint","useReactToPrint","contentRef","documentTitle","pageStyle","Number","handleDownloadPdf","opt","margin","filename","image","quality","html2canvas","scale","useCORS","jsPDF","unit","format","orientation","html2pdf","set","from","save","_","flexDirection","marginTop","fontWeight"],"sourceRoot":""}