{"version":3,"file":"static/js/8951.6b37ccff.chunk.js","mappings":"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","sources":["common/other/CommonDesc.tsx","common/other/CommonHowToUse.tsx","common/other/CommonStoryBtn.tsx","components/bootstrap/Badge.tsx","components/bootstrap/Breadcrumb.tsx","pages/documentation/components/BadgePage.tsx"],"sourcesContent":["import React, { FC, ReactNode } from 'react';\nimport classNames from 'classnames';\nimport Alert from '../../components/bootstrap/Alert';\nimport { TColor } from '../../type/color-type';\n\ninterface ICommonDescProps {\n\tchildren: ReactNode;\n\tclassName?: string;\n\tcolor?: TColor;\n}\nconst CommonDesc: FC<ICommonDescProps> = ({ children, className, color = 'warning' }) => {\n\treturn (\n\t\t<Alert\n\t\t\tcolor={color}\n\t\t\tisLight\n\t\t\tshadow='md'\n\t\t\tborderWidth={0}\n\t\t\ticon='Info'\n\t\t\tclassName={classNames('flex-nowrap', 'w-100', 'mb-0', className)}>\n\t\t\t{children}\n\t\t</Alert>\n\t);\n};\n\nexport default CommonDesc;\n","import React, { FC, ReactNode } from 'react';\nimport { createUseStyles } from 'react-jss';\nimport Alert from '../../components/bootstrap/Alert';\nimport PrismCode from '../../components/extras/PrismCode';\n\nconst useStyles = createUseStyles({\n\t// stylelint-disable-next-line selector-type-no-unknown\n\tprism: {\n\t\tpadding: '0 !important',\n\t\tmargin: '0 !important',\n\t\tbackground: 'transparent !important',\n\t\tborderRadius: '0 !important',\n\n\t\t// stylelint-disable-next-line scss/selector-no-redundant-nesting-selector\n\t\t'& > code': {\n\t\t\t// stylelint-disable-next-line scale-unlimited/declaration-strict-value\n\t\t\tcolor: '#2e3f96 !important',\n\t\t\tfontSize: '0.875rem !important',\n\t\t},\n\t},\n});\n\ninterface ICommonHowToUseProps {\n\tchildren: string | ReactNode;\n\tisPrism?: boolean;\n}\nconst CommonHowToUse: FC<ICommonHowToUseProps> = ({ children, isPrism }) => {\n\tconst classes = useStyles();\n\n\treturn (\n\t\t<Alert\n\t\t\tcolor='info'\n\t\t\tisLight\n\t\t\tshadow='md'\n\t\t\tborderWidth={0}\n\t\t\ticon='CustomReact'\n\t\t\tclassName='flex-nowrap w-100'>\n\t\t\t{isPrism ? (\n\t\t\t\t<PrismCode code={children as string} language='jsx' className={classes.prism} />\n\t\t\t) : (\n\t\t\t\t<code>{children}</code>\n\t\t\t)}\n\t\t</Alert>\n\t);\n};\n\nexport default CommonHowToUse;\n","import React, { FC } from 'react';\nimport Button, { IButtonProps } from '../../components/bootstrap/Button';\n\ninterface ICommonStoryBtnProps extends IButtonProps {\n\tto: string;\n}\nconst CommonStoryBtn: FC<ICommonStoryBtnProps> = ({ to, ...props }) => {\n\treturn (\n\t\t<Button\n\t\t\tcolor='storybook'\n\t\t\ticon='CustomStorybook'\n\t\t\ttag='a'\n\t\t\ttarget='_blank'\n\t\t\tisLight\n\t\t\thref={`${process.env.REACT_APP_STORYBOOK_URL}${to}`}\n\t\t\t// eslint-disable-next-line react/jsx-props-no-spreading\n\t\t\t{...props}>\n\t\t\tStorybook\n\t\t</Button>\n\t);\n};\n\nexport default CommonStoryBtn;\n","import React, { FC, ReactNode } from 'react';\nimport classNames from 'classnames';\nimport useDarkMode from '../../hooks/useDarkMode';\nimport { TColor } from '../../type/color-type';\n\ninterface IBadgeProps extends Record<string, any> {\n\tchildren: ReactNode;\n\tclassName?: string;\n\tcolor?: TColor;\n\trounded?:\n\t\t| null\n\t\t| 'default'\n\t\t| 0\n\t\t| 1\n\t\t| 2\n\t\t| 3\n\t\t| 'bottom'\n\t\t| 'top'\n\t\t| 'circle'\n\t\t| 'end'\n\t\t| 'start'\n\t\t| 'pill';\n\tshadow?: null | 'none' | 'sm' | 'default' | 'lg';\n\tisLight?: boolean;\n}\nconst Badge: FC<IBadgeProps> = ({\n\tchildren,\n\tclassName,\n\tcolor = 'primary',\n\tshadow,\n\trounded,\n\tisLight,\n\t...props\n}) => {\n\tconst { darkModeStatus } = useDarkMode();\n\treturn (\n\t\t<span\n\t\t\tclassName={classNames(\n\t\t\t\t'badge',\n\t\t\t\t{\n\t\t\t\t\t[`bg-${color}`]: !isLight,\n\t\t\t\t\t[`bg-l${darkModeStatus ? 'o25' : '10'}-${color}`]: isLight,\n\t\t\t\t\t[`text-${color}`]: isLight,\n\t\t\t\t\t[`shadow${shadow !== 'default' ? `-${shadow}` : ''}`]: !!shadow,\n\t\t\t\t\t[`rounded${rounded !== 'default' ? `-${rounded}` : ''}`]: rounded,\n\t\t\t\t\t'rounded-0':\n\t\t\t\t\t\trounded === 'bottom' ||\n\t\t\t\t\t\trounded === 'top' ||\n\t\t\t\t\t\trounded === 'end' ||\n\t\t\t\t\t\trounded === 'start' ||\n\t\t\t\t\t\trounded === 0,\n\t\t\t\t},\n\t\t\t\tclassName,\n\t\t\t)}\n\t\t\t{...props}>\n\t\t\t{children}\n\t\t</span>\n\t);\n};\n\nexport default Badge;\n","import React, {\n\tChildren,\n\tcloneElement,\n\tFC,\n\tJSXElementConstructor,\n\tReactElement,\n\tReactNode,\n} from 'react';\nimport classNames from 'classnames';\nimport { NavLink } from 'react-router-dom';\nimport TagWrapper from '../TagWrapper';\nimport Icon from '../icon/Icon';\n\ninterface IBreadcrumbItemProps extends Record<string, any> {\n\tchildren: ReactNode;\n\tariaLabel?: string;\n\tclassName?: string;\n\ttag?: string;\n\tto: string;\n\tisActive?: boolean;\n\tdivider?: ReactElement<any, string | JSXElementConstructor<any>> | string;\n}\nexport const BreadcrumbItem: FC<IBreadcrumbItemProps> = ({\n\tchildren,\n\tariaLabel,\n\tclassName,\n\ttag = 'li',\n\tto,\n\tisActive,\n\tdivider,\n}) => {\n\treturn (\n\t\t<TagWrapper\n\t\t\ttag={tag}\n\t\t\tclassName={classNames('breadcrumb-item', { active: isActive }, className)}\n\t\t\taria-current={isActive ? 'page' : null}\n\t\t\taria-label={ariaLabel || children}>\n\t\t\t{divider &&\n\t\t\t\ttypeof divider !== 'string' &&\n\t\t\t\tcloneElement(divider, {\n\t\t\t\t\tclassName: classNames('breadcrumb-icon', divider.props.className),\n\t\t\t\t})}\n\t\t\t{isActive ? (\n\t\t\t\tchildren\n\t\t\t) : (\n\t\t\t\t<NavLink to={to} aria-label={ariaLabel}>\n\t\t\t\t\t{children}\n\t\t\t\t</NavLink>\n\t\t\t)}\n\t\t</TagWrapper>\n\t);\n};\n\ninterface IBreadcrumbProps extends Record<string, any> {\n\tchildren?: ReactElement<IBreadcrumbItemProps> | ReactElement<IBreadcrumbItemProps>[];\n\tlist?: {\n\t\ttitle: string;\n\t\tto: string;\n\t\ttag?: 'div' | 'li';\n\t}[];\n\ttag?: 'nav' | 'div' | 'section';\n\tlistTag?: 'div' | 'ol' | 'ul';\n\titemTag?: 'div' | 'li';\n\tariaLabel?: string | null;\n\tautoActive?: boolean;\n\tisToHome?: ReactNode;\n\tdivider?: ReactElement<any, string | JSXElementConstructor<any>> | string;\n}\nconst Breadcrumb: FC<IBreadcrumbProps> = ({\n\tchildren,\n\tlist,\n\ttag = 'nav',\n\tlistTag = 'ol',\n\titemTag = 'li',\n\tariaLabel = 'breadcrumb',\n\tautoActive = true,\n\tisToHome = <Icon icon='HolidayVillage' />,\n\tdivider = <Icon icon='ChevronRight' />,\n}) => {\n\tconst DIVIDER = divider !== 'string' && divider;\n\treturn (\n\t\t<TagWrapper\n\t\t\ttag={tag}\n\t\t\taria-label={ariaLabel}\n\t\t\tstyle={\n\t\t\t\tdivider\n\t\t\t\t\t? {\n\t\t\t\t\t\t\t'--bs-breadcrumb-divider':\n\t\t\t\t\t\t\t\ttypeof divider === 'string' ? `'${divider}'` : 'none',\n\t\t\t\t\t\t}\n\t\t\t\t\t: null\n\t\t\t}>\n\t\t\t<TagWrapper tag={listTag} className='breadcrumb'>\n\t\t\t\t{isToHome && (\n\t\t\t\t\t<BreadcrumbItem to='/' ariaLabel='Home'>\n\t\t\t\t\t\t{isToHome}\n\t\t\t\t\t</BreadcrumbItem>\n\t\t\t\t)}\n\t\t\t\t{list\n\t\t\t\t\t? list.map((item, index) => (\n\t\t\t\t\t\t\t<BreadcrumbItem\n\t\t\t\t\t\t\t\tkey={item.title}\n\t\t\t\t\t\t\t\ttag={item.tag || itemTag}\n\t\t\t\t\t\t\t\tto={item.to}\n\t\t\t\t\t\t\t\tisActive={autoActive && list.length === index + 1}\n\t\t\t\t\t\t\t\tdivider={DIVIDER as ReactElement}>\n\t\t\t\t\t\t\t\t{item.title}\n\t\t\t\t\t\t\t</BreadcrumbItem>\n\t\t\t\t\t\t))\n\t\t\t\t\t: Children.map(children, (child, index) =>\n\t\t\t\t\t\t\t// @ts-ignore\n\t\t\t\t\t\t\tcloneElement(child, {\n\t\t\t\t\t\t\t\t// @ts-ignore\n\t\t\t\t\t\t\t\ttag: child.props.tag || itemTag,\n\t\t\t\t\t\t\t\t// @ts-ignore\n\t\t\t\t\t\t\t\tisActive: autoActive && children.length === index + 1,\n\t\t\t\t\t\t\t\t// @ts-ignore\n\t\t\t\t\t\t\t\tdivider: child.props.divider || DIVIDER,\n\t\t\t\t\t\t\t}),\n\t\t\t\t\t\t)}\n\t\t\t</TagWrapper>\n\t\t</TagWrapper>\n\t);\n};\n\nexport default Breadcrumb;\n","import React from 'react';\nimport SubHeader, { SubHeaderLeft, SubHeaderRight } from '../../../layout/SubHeader/SubHeader';\nimport PageWrapper from '../../../layout/PageWrapper/PageWrapper';\nimport Page from '../../../layout/Page/Page';\nimport Badge from '../../../components/bootstrap/Badge';\nimport Card, {\n\tCardActions,\n\tCardBody,\n\tCardCodeView,\n\tCardFooter,\n\tCardHeader,\n\tCardLabel,\n\tCardSubTitle,\n\tCardTitle,\n} from '../../../components/bootstrap/Card';\nimport Breadcrumb from '../../../components/bootstrap/Breadcrumb';\nimport Alert from '../../../components/bootstrap/Alert';\nimport CommonHowToUse from '../../../common/other/CommonHowToUse';\nimport CommonDesc from '../../../common/other/CommonDesc';\nimport CommonStoryBtn from '../../../common/other/CommonStoryBtn';\nimport { componentPagesMenu } from '../../../menu';\n\nconst BadgePage = () => {\n\tconst GENERAL_USAGE = `\n<Badge\n\tclassName={ String }\n\tcolor={ String } // 'primary' || 'secondary'  || 'success' || 'info' || 'warning' || 'danger' || 'light' || 'dark'\n\tshadow={ String } // null || 'none' || 'sm' || 'default' || 'lg'\n\trounded={ String || Number } // 'default' ||  0 || 1 || 2 || 3 || 'bottom' || 'top' || 'circle' || 'end' ||  'start' || 'pill'\n\t{...props}>\n\t...\n</Badge>`;\n\treturn (\n\t\t<PageWrapper title={componentPagesMenu.components.subMenu.badge.text}>\n\t\t\t<SubHeader>\n\t\t\t\t<SubHeaderLeft>\n\t\t\t\t\t<Breadcrumb\n\t\t\t\t\t\tlist={[\n\t\t\t\t\t\t\t{\n\t\t\t\t\t\t\t\ttitle: componentPagesMenu.components.text,\n\t\t\t\t\t\t\t\tto: `/${componentPagesMenu.components.path}`,\n\t\t\t\t\t\t\t},\n\t\t\t\t\t\t\t{\n\t\t\t\t\t\t\t\ttitle: componentPagesMenu.components.subMenu.badge.text,\n\t\t\t\t\t\t\t\tto: `/${componentPagesMenu.components.subMenu.badge.path}`,\n\t\t\t\t\t\t\t},\n\t\t\t\t\t\t]}\n\t\t\t\t\t/>\n\t\t\t\t</SubHeaderLeft>\n\t\t\t\t<SubHeaderRight>\n\t\t\t\t\t<CommonStoryBtn to='/docs/components-badge--default' />\n\t\t\t\t</SubHeaderRight>\n\t\t\t</SubHeader>\n\t\t\t<Page>\n\t\t\t\t<div className='row'>\n\t\t\t\t\t{/* General Usage */}\n\t\t\t\t\t<div className='col-12'>\n\t\t\t\t\t\t<Card>\n\t\t\t\t\t\t\t<CardHeader>\n\t\t\t\t\t\t\t\t<CardLabel icon='Assignment'>\n\t\t\t\t\t\t\t\t\t<CardTitle>General Usage</CardTitle>\n\t\t\t\t\t\t\t\t</CardLabel>\n\t\t\t\t\t\t\t</CardHeader>\n\t\t\t\t\t\t\t<CardBody>\n\t\t\t\t\t\t\t\t<CardCodeView>{GENERAL_USAGE}</CardCodeView>\n\t\t\t\t\t\t\t</CardBody>\n\t\t\t\t\t\t</Card>\n\t\t\t\t\t</div>\n\n\t\t\t\t\t{/* color */}\n\t\t\t\t\t<div className='col-lg-6'>\n\t\t\t\t\t\t<Card stretch>\n\t\t\t\t\t\t\t<CardHeader>\n\t\t\t\t\t\t\t\t<CardLabel icon='Palette' iconColor='info'>\n\t\t\t\t\t\t\t\t\t<CardTitle>color</CardTitle>\n\t\t\t\t\t\t\t\t\t<CardSubTitle>Badge</CardSubTitle>\n\t\t\t\t\t\t\t\t</CardLabel>\n\t\t\t\t\t\t\t\t<CardActions>\n\t\t\t\t\t\t\t\t\t<CommonStoryBtn to='/story/components-alert-props-color--primary' />\n\t\t\t\t\t\t\t\t</CardActions>\n\t\t\t\t\t\t\t</CardHeader>\n\t\t\t\t\t\t\t<CardHeader>\n\t\t\t\t\t\t\t\t<CommonHowToUse>\n\t\t\t\t\t\t\t\t\tcolor: PropTypes.oneOf([ 'primary', 'secondary', 'success',\n\t\t\t\t\t\t\t\t\t'info', 'warning', 'danger', 'light', 'dark', ]),\n\t\t\t\t\t\t\t\t</CommonHowToUse>\n\t\t\t\t\t\t\t</CardHeader>\n\t\t\t\t\t\t\t<CardBody>\n\t\t\t\t\t\t\t\t<h2>\n\t\t\t\t\t\t\t\t\tExample heading <Badge>Badge</Badge>\n\t\t\t\t\t\t\t\t</h2>\n\t\t\t\t\t\t\t\t<h2>\n\t\t\t\t\t\t\t\t\tExample heading <Badge color='secondary'>Badge</Badge>\n\t\t\t\t\t\t\t\t</h2>\n\t\t\t\t\t\t\t\t<h2>\n\t\t\t\t\t\t\t\t\tExample heading <Badge color='success'>Badge</Badge>\n\t\t\t\t\t\t\t\t</h2>\n\t\t\t\t\t\t\t\t<h2>\n\t\t\t\t\t\t\t\t\tExample heading <Badge color='info'>Badge</Badge>\n\t\t\t\t\t\t\t\t</h2>\n\t\t\t\t\t\t\t\t<h2>\n\t\t\t\t\t\t\t\t\tExample heading <Badge color='warning'>Badge</Badge>\n\t\t\t\t\t\t\t\t</h2>\n\t\t\t\t\t\t\t\t<h2>\n\t\t\t\t\t\t\t\t\tExample heading <Badge color='danger'>Badge</Badge>\n\t\t\t\t\t\t\t\t</h2>\n\t\t\t\t\t\t\t\t<h2>\n\t\t\t\t\t\t\t\t\tExample heading <Badge color='light'>Badge</Badge>\n\t\t\t\t\t\t\t\t</h2>\n\t\t\t\t\t\t\t\t<h2>\n\t\t\t\t\t\t\t\t\tExample heading <Badge color='dark'>Badge</Badge>\n\t\t\t\t\t\t\t\t</h2>\n\t\t\t\t\t\t\t</CardBody>\n\t\t\t\t\t\t</Card>\n\t\t\t\t\t</div>\n\t\t\t\t\t{/* rounded */}\n\t\t\t\t\t<div className='col-lg-6'>\n\t\t\t\t\t\t<Card stretch>\n\t\t\t\t\t\t\t<CardHeader>\n\t\t\t\t\t\t\t\t<CardLabel icon='RoundedCorner' iconColor='success'>\n\t\t\t\t\t\t\t\t\t<CardTitle>rounded</CardTitle>\n\t\t\t\t\t\t\t\t\t<CardSubTitle>Badge</CardSubTitle>\n\t\t\t\t\t\t\t\t</CardLabel>\n\t\t\t\t\t\t\t\t<CardActions>\n\t\t\t\t\t\t\t\t\t<CommonStoryBtn to='/story/components-alert-props-rounded--default' />\n\t\t\t\t\t\t\t\t</CardActions>\n\t\t\t\t\t\t\t</CardHeader>\n\t\t\t\t\t\t\t<CardHeader>\n\t\t\t\t\t\t\t\t<CommonHowToUse>\n\t\t\t\t\t\t\t\t\trounded: PropTypes.oneOf([ 'default', 0, 1, 2, 3, 'bottom',\n\t\t\t\t\t\t\t\t\t'top', 'circle', 'end', 'start', 'pill', ]),\n\t\t\t\t\t\t\t\t</CommonHowToUse>\n\t\t\t\t\t\t\t</CardHeader>\n\t\t\t\t\t\t\t<CardBody>\n\t\t\t\t\t\t\t\t<h2>\n\t\t\t\t\t\t\t\t\tRounded is default{' '}\n\t\t\t\t\t\t\t\t\t<Badge rounded='default' color='success'>\n\t\t\t\t\t\t\t\t\t\tBadge\n\t\t\t\t\t\t\t\t\t</Badge>\n\t\t\t\t\t\t\t\t</h2>\n\t\t\t\t\t\t\t\t<h2>\n\t\t\t\t\t\t\t\t\tRounded is 0{' '}\n\t\t\t\t\t\t\t\t\t<Badge rounded={0} color='success'>\n\t\t\t\t\t\t\t\t\t\tBadge\n\t\t\t\t\t\t\t\t\t</Badge>\n\t\t\t\t\t\t\t\t</h2>\n\t\t\t\t\t\t\t\t<h2>\n\t\t\t\t\t\t\t\t\tRounded is 1{' '}\n\t\t\t\t\t\t\t\t\t<Badge rounded={1} color='success'>\n\t\t\t\t\t\t\t\t\t\tBadge\n\t\t\t\t\t\t\t\t\t</Badge>\n\t\t\t\t\t\t\t\t</h2>\n\t\t\t\t\t\t\t\t<h2>\n\t\t\t\t\t\t\t\t\tRounded is 2{' '}\n\t\t\t\t\t\t\t\t\t<Badge rounded={2} color='success'>\n\t\t\t\t\t\t\t\t\t\tBadge\n\t\t\t\t\t\t\t\t\t</Badge>\n\t\t\t\t\t\t\t\t</h2>\n\t\t\t\t\t\t\t\t<h2>\n\t\t\t\t\t\t\t\t\tRounded is 3{' '}\n\t\t\t\t\t\t\t\t\t<Badge rounded={3} color='success'>\n\t\t\t\t\t\t\t\t\t\tBadge\n\t\t\t\t\t\t\t\t\t</Badge>\n\t\t\t\t\t\t\t\t</h2>\n\t\t\t\t\t\t\t\t<h2>\n\t\t\t\t\t\t\t\t\tRounded is bottom{' '}\n\t\t\t\t\t\t\t\t\t<Badge rounded='bottom' color='success'>\n\t\t\t\t\t\t\t\t\t\tBadge\n\t\t\t\t\t\t\t\t\t</Badge>\n\t\t\t\t\t\t\t\t</h2>\n\t\t\t\t\t\t\t\t<h2>\n\t\t\t\t\t\t\t\t\tRounded is top{' '}\n\t\t\t\t\t\t\t\t\t<Badge rounded='top' color='success'>\n\t\t\t\t\t\t\t\t\t\tBadge\n\t\t\t\t\t\t\t\t\t</Badge>\n\t\t\t\t\t\t\t\t</h2>\n\t\t\t\t\t\t\t\t<h2>\n\t\t\t\t\t\t\t\t\tRounded is circle{' '}\n\t\t\t\t\t\t\t\t\t<Badge rounded='circle' color='success'>\n\t\t\t\t\t\t\t\t\t\tBadge\n\t\t\t\t\t\t\t\t\t</Badge>\n\t\t\t\t\t\t\t\t</h2>\n\t\t\t\t\t\t\t\t<h2>\n\t\t\t\t\t\t\t\t\tRounded is end{' '}\n\t\t\t\t\t\t\t\t\t<Badge rounded='end' color='success'>\n\t\t\t\t\t\t\t\t\t\tBadge\n\t\t\t\t\t\t\t\t\t</Badge>\n\t\t\t\t\t\t\t\t</h2>\n\t\t\t\t\t\t\t\t<h2>\n\t\t\t\t\t\t\t\t\tRounded is start{' '}\n\t\t\t\t\t\t\t\t\t<Badge rounded='start' color='success'>\n\t\t\t\t\t\t\t\t\t\tBadge\n\t\t\t\t\t\t\t\t\t</Badge>\n\t\t\t\t\t\t\t\t</h2>\n\t\t\t\t\t\t\t\t<h2>\n\t\t\t\t\t\t\t\t\tRounded is pill{' '}\n\t\t\t\t\t\t\t\t\t<Badge rounded='pill' color='success'>\n\t\t\t\t\t\t\t\t\t\tBadge\n\t\t\t\t\t\t\t\t\t</Badge>\n\t\t\t\t\t\t\t\t</h2>\n\t\t\t\t\t\t\t</CardBody>\n\t\t\t\t\t\t\t<CardFooter>\n\t\t\t\t\t\t\t\t<Alert\n\t\t\t\t\t\t\t\t\tcolor='warning'\n\t\t\t\t\t\t\t\t\tisLight\n\t\t\t\t\t\t\t\t\tshadow='md'\n\t\t\t\t\t\t\t\t\tborderWidth={0}\n\t\t\t\t\t\t\t\t\ticon='Info'\n\t\t\t\t\t\t\t\t\tclassName='flex-nowrap w-100 mb-0'>\n\t\t\t\t\t\t\t\t\t<code>rounded-0</code> is automatically added if rounded bottom,\n\t\t\t\t\t\t\t\t\ttop, end or start.\n\t\t\t\t\t\t\t\t</Alert>\n\t\t\t\t\t\t\t</CardFooter>\n\t\t\t\t\t\t</Card>\n\t\t\t\t\t</div>\n\n\t\t\t\t\t{/* shadow */}\n\t\t\t\t\t<div className='col-lg-6'>\n\t\t\t\t\t\t<Card stretch>\n\t\t\t\t\t\t\t<CardHeader>\n\t\t\t\t\t\t\t\t<CardLabel icon='ContentCopy' iconColor='dark'>\n\t\t\t\t\t\t\t\t\t<CardTitle>shadow</CardTitle>\n\t\t\t\t\t\t\t\t\t<CardSubTitle>Badge</CardSubTitle>\n\t\t\t\t\t\t\t\t</CardLabel>\n\t\t\t\t\t\t\t\t<CardActions>\n\t\t\t\t\t\t\t\t\t<CommonStoryBtn to='/story/components-alert-props-shadow--default' />\n\t\t\t\t\t\t\t\t</CardActions>\n\t\t\t\t\t\t\t</CardHeader>\n\t\t\t\t\t\t\t<CardHeader>\n\t\t\t\t\t\t\t\t<CommonHowToUse>\n\t\t\t\t\t\t\t\t\tshadow: PropTypes.oneOf([null, 'none', 'sm', 'default', 'lg']),\n\t\t\t\t\t\t\t\t</CommonHowToUse>\n\t\t\t\t\t\t\t</CardHeader>\n\t\t\t\t\t\t\t<CardBody>\n\t\t\t\t\t\t\t\t<h2>\n\t\t\t\t\t\t\t\t\tShadow is none <Badge shadow='none'>Badge</Badge>\n\t\t\t\t\t\t\t\t</h2>\n\t\t\t\t\t\t\t\t<h2>\n\t\t\t\t\t\t\t\t\tShadow is sm <Badge shadow='sm'>Badge</Badge>\n\t\t\t\t\t\t\t\t</h2>\n\t\t\t\t\t\t\t\t<h2>\n\t\t\t\t\t\t\t\t\tShadow is default <Badge shadow='default'>Badge</Badge>\n\t\t\t\t\t\t\t\t</h2>\n\t\t\t\t\t\t\t\t<h2>\n\t\t\t\t\t\t\t\t\tShadow is lg <Badge shadow='lg'>Badge</Badge>\n\t\t\t\t\t\t\t\t</h2>\n\t\t\t\t\t\t\t</CardBody>\n\t\t\t\t\t\t</Card>\n\t\t\t\t\t</div>\n\t\t\t\t\t{/* size */}\n\t\t\t\t\t<div className='col-lg-6'>\n\t\t\t\t\t\t<Card stretch>\n\t\t\t\t\t\t\t<CardHeader>\n\t\t\t\t\t\t\t\t<CardLabel icon='Straighten' iconColor='warning'>\n\t\t\t\t\t\t\t\t\t<CardTitle>Size</CardTitle>\n\t\t\t\t\t\t\t\t</CardLabel>\n\t\t\t\t\t\t\t\t<CardActions>\n\t\t\t\t\t\t\t\t\t<CommonStoryBtn to='/story/components-badge-props-size--default' />\n\t\t\t\t\t\t\t\t</CardActions>\n\t\t\t\t\t\t\t</CardHeader>\n\t\t\t\t\t\t\t<CardBody>\n\t\t\t\t\t\t\t\t<h1>\n\t\t\t\t\t\t\t\t\tHeading tag is H1 <Badge color='warning'>Badge</Badge>\n\t\t\t\t\t\t\t\t</h1>\n\t\t\t\t\t\t\t\t<h2>\n\t\t\t\t\t\t\t\t\tHeading tag is H2 <Badge color='warning'>Badge</Badge>\n\t\t\t\t\t\t\t\t</h2>\n\t\t\t\t\t\t\t\t<h3>\n\t\t\t\t\t\t\t\t\tHeading tag is H3 <Badge color='warning'>Badge</Badge>\n\t\t\t\t\t\t\t\t</h3>\n\t\t\t\t\t\t\t\t<h4>\n\t\t\t\t\t\t\t\t\tHeading tag is H4 <Badge color='warning'>Badge</Badge>\n\t\t\t\t\t\t\t\t</h4>\n\t\t\t\t\t\t\t\t<h5>\n\t\t\t\t\t\t\t\t\tHeading tag is H5 <Badge color='warning'>Badge</Badge>\n\t\t\t\t\t\t\t\t</h5>\n\t\t\t\t\t\t\t\t<h6>\n\t\t\t\t\t\t\t\t\tHeading tag is H6 <Badge color='warning'>Badge</Badge>\n\t\t\t\t\t\t\t\t</h6>\n\t\t\t\t\t\t\t\t<div>\n\t\t\t\t\t\t\t\t\tParent tag is div <Badge color='warning'>Badge</Badge>\n\t\t\t\t\t\t\t\t</div>\n\t\t\t\t\t\t\t</CardBody>\n\t\t\t\t\t\t\t<CardFooter>\n\t\t\t\t\t\t\t\t<CommonDesc>Gets the font size of the element it is in.</CommonDesc>\n\t\t\t\t\t\t\t</CardFooter>\n\t\t\t\t\t\t</Card>\n\t\t\t\t\t</div>\n\t\t\t\t</div>\n\t\t\t</Page>\n\t\t</PageWrapper>\n\t);\n};\n\nexport default BadgePage;\n"],"names":["_ref","children","className","color","_jsx","Alert","isLight","shadow","borderWidth","icon","classNames","useStyles","createUseStyles","prism","padding","margin","background","borderRadius","fontSize","isPrism","classes","PrismCode","code","language","to","props","Button","tag","target","href","rounded","darkModeStatus","useDarkMode","BreadcrumbItem","ariaLabel","isActive","divider","_jsxs","TagWrapper","active","cloneElement","NavLink","_ref2","list","listTag","itemTag","autoActive","isToHome","Icon","DIVIDER","style","map","item","index","length","title","Children","child","BadgePage","PageWrapper","componentPagesMenu","components","subMenu","badge","text","SubHeader","SubHeaderLeft","Breadcrumb","path","SubHeaderRight","CommonStoryBtn","Page","Card","CardHeader","CardLabel","CardTitle","CardBody","CardCodeView","stretch","iconColor","CardSubTitle","CardActions","CommonHowToUse","Badge","CardFooter","CommonDesc"],"sourceRoot":""}