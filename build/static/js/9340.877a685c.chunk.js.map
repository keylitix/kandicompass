{"version":3,"file":"static/js/9340.877a685c.chunk.js","mappings":"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","sources":["pages/presentation/appointment/EmployeePage.tsx"],"sourcesContent":["// import React, { useState } from 'react';\n// import { useParams } from 'react-router-dom';\n// import dayjs from 'dayjs';\n// import classNames from 'classnames';\n// import { getUserDataWithId } from '../../../common/data/userDummyData';\n// import PageWrapper from '../../../layout/PageWrapper/PageWrapper';\n// import Page from '../../../layout/Page/Page';\n// import SubHeader, {\n// \tSubHeaderLeft,\n// \tSubHeaderRight,\n// \tSubheaderSeparator,\n// } from '../../../layout/SubHeader/SubHeader';\n// import Button from '../../../components/bootstrap/Button';\n// import Card, {\n// \tCardActions,\n// \tCardBody,\n// \tCardHeader,\n// \tCardLabel,\n// \tCardTitle,\n// } from '../../../components/bootstrap/Card';\n// import Avatar from '../../../components/Avatar';\n// import Icon from '../../../components/icon/Icon';\n// import { demoPagesMenu } from '../../../menu';\n// import Badge from '../../../components/bootstrap/Badge';\n// import Dropdown, {\n// \tDropdownItem,\n// \tDropdownMenu,\n// \tDropdownToggle,\n// } from '../../../components/bootstrap/Dropdown';\n// import Chart, { IChartOptions } from '../../../components/extras/Chart';\n// import dummyEventsData from '../../../common/data/dummyEventsData';\n// import { priceFormat } from '../../../helpers/helpers';\n// import EVENT_STATUS from '../../../common/data/enumEventStatus';\n// import Alert from '../../../components/bootstrap/Alert';\n// import CommonAvatarTeam from '../../../common/other/CommonAvatarTeam';\n// import COLORS from '../../../common/data/enumColors';\n// import useDarkMode from '../../../hooks/useDarkMode';\n// import useTourStep from '../../../hooks/useTourStep';\n// import { useGetUserByIdQuery } from '../../../redux/api/AuthApi';\n// import Profile from '../../../assets/img/user6.png';\n// import { FeaturedPlayList } from '../../../components/icon/material-icons';\n\n// const EmployeePage = () => {\n// \tuseTourStep(19);\n// \tconst { darkModeStatus } = useDarkMode();\n\n// \tconst { id } = useParams();\n// \t// const data = getUserDataWithId(id);\n// \tconst { data, error, isLoading } = useGetUserByIdQuery(id);\n// \tconst userData = data?.[0];\n// \tconsole.log('====data====', data?.[0]);\n\n// \tconst [dayHours] = useState<IChartOptions>({\n// \t\tseries: [\n// \t\t\t{\n// \t\t\t\tdata: [8, 12, 15, 20, 15, 22, 9],\n// \t\t\t},\n// \t\t],\n// \t\toptions: {\n// \t\t\tcolors: [process.env.REACT_APP_SUCCESS_COLOR],\n// \t\t\tchart: {\n// \t\t\t\ttype: 'radar',\n// \t\t\t\twidth: 200,\n// \t\t\t\theight: 200,\n// \t\t\t\tsparkline: {\n// \t\t\t\t\tenabled: true,\n// \t\t\t\t},\n// \t\t\t},\n// \t\t\txaxis: {\n// \t\t\t\tcategories: [\n// \t\t\t\t\t'Monday',\n// \t\t\t\t\t'Tuesday',\n// \t\t\t\t\t'Wednesday',\n// \t\t\t\t\t'Thursday',\n// \t\t\t\t\t'Friday',\n// \t\t\t\t\t'Saturday',\n// \t\t\t\t\t'Sunday',\n// \t\t\t\t],\n// \t\t\t\t// convertedCatToNumeric: false,\n// \t\t\t},\n// \t\t\ttooltip: {\n// \t\t\t\ttheme: 'dark',\n// \t\t\t\tfixed: {\n// \t\t\t\t\tenabled: false,\n// \t\t\t\t},\n// \t\t\t\tx: {\n// \t\t\t\t\tshow: true,\n// \t\t\t\t},\n// \t\t\t\ty: {\n// \t\t\t\t\ttitle: {\n// \t\t\t\t\t\t// eslint-disable-next-line @typescript-eslint/no-unused-vars\n// \t\t\t\t\t\tformatter(seriesName) {\n// \t\t\t\t\t\t\treturn 'Hours';\n// \t\t\t\t\t\t},\n// \t\t\t\t\t},\n// \t\t\t\t},\n// \t\t\t},\n// \t\t\tstroke: {\n// \t\t\t\tcurve: 'smooth',\n// \t\t\t\twidth: 2,\n// \t\t\t},\n// \t\t\tplotOptions: {\n// \t\t\t\tradar: {\n// \t\t\t\t\tpolygons: {\n// \t\t\t\t\t\tstrokeColors: `${COLORS.SUCCESS.code}50`,\n// \t\t\t\t\t\tstrokeWidth: '1',\n// \t\t\t\t\t\tconnectorColors: `${COLORS.SUCCESS.code}50`,\n// \t\t\t\t\t},\n// \t\t\t\t},\n// \t\t\t},\n// \t\t},\n// \t});\n\n// \tconst [isEditing, setIsEditing] = useState(false);\n// \tconst [showChangePassword, setShowChangePassword] = useState(false);\n// \tconst [profile, setProfile] = useState({\n// \t\tname: 'John Doe',\n// \t\temail: 'john.doe@example.com',\n// \t\tphone: '+1 123 456 7890',\n// \t});\n\n// \tconst [passwordData, setPasswordData] = useState({\n// \t\tcurrent: '',\n// \t\tnew: '',\n// \t\tconfirm: '',\n// \t\tshowPassword: false,\n// \t});\n\n// \tconst handleEditToggle = () => setIsEditing(!isEditing);\n// \tconst handlePasswordToggle = () => setShowChangePassword(!showChangePassword);\n\n// \tconst handleChange = (e: any) => {\n// \t\tsetProfile({ ...profile, [e.target.name]: e.target.value });\n// \t};\n\n// \tconst handlePasswordChange = (e: any) => {\n// \t\tsetPasswordData({ ...passwordData, [e.target.name]: e.target.value });\n// \t};\n\n// \tconst toggleShowPassword = () => {\n// \t\tsetPasswordData((prev) => ({\n// \t\t\t...prev,\n// \t\t\tshowPassword: !prev.showPassword,\n// \t\t}));\n// \t};\n\n// \treturn (\n// \t\t<PageWrapper title={`${userData?.fullName}`}>\n// \t\t\t<Page>\n// \t\t\t\t<div className='pt-3 pb-5 d-flex align-items-center'>\n// \t\t\t\t\t<span className='display-4 fw-bold me-3'>{`${`${userData?.fullName}`}`}</span>\n// \t\t\t\t\t<span className='border border-success border-2 text-success fw-bold px-3 py-2 rounded'>\n// \t\t\t\t\t\t{userData?.role}\n// \t\t\t\t\t</span>\n// \t\t\t\t</div>\n// \t\t\t\t<div className='row'>\n// \t\t\t\t\t<div className='col-lg-4'>\n// \t\t\t\t\t\t<Card className='shadow-3d-info'>\n// \t\t\t\t\t\t\t<CardBody>\n// \t\t\t\t\t\t\t\t<div className='row g-5'>\n// \t\t\t\t\t\t\t\t\t<div className='col-12 d-flex justify-content-center'>\n// \t\t\t\t\t\t\t\t\t\t<Avatar\n// \t\t\t\t\t\t\t\t\t\t\tsrc={Profile}\n// \t\t\t\t\t\t\t\t\t\t\tsrcSet={Profile}\n// \t\t\t\t\t\t\t\t\t\t\tstyle={{ width: '500px', height: '250px' }}\n// \t\t\t\t\t\t\t\t\t\t/>\n// \t\t\t\t\t\t\t\t\t</div>\n// \t\t\t\t\t\t\t\t</div>\n// \t\t\t\t\t\t\t</CardBody>\n// \t\t\t\t\t\t</Card>\n// \t\t\t\t\t</div>\n// \t\t\t\t\t<div className='col-lg-8'>\n// \t\t\t\t\t\t<Card className='shadow-3d-primary'>\n// \t\t\t\t\t\t\t<CardHeader className='d-flex justify-content-between align-items-center'>\n// \t\t\t\t\t\t\t\t<CardTitle className='h4 mb-0'>My Profile</CardTitle>\n// \t\t\t\t\t\t\t\t<button\n// \t\t\t\t\t\t\t\t\tclassName='btn btn-outline-primary'\n// \t\t\t\t\t\t\t\t\tonClick={handleEditToggle}>\n// \t\t\t\t\t\t\t\t\t\tEdit\n// \t\t\t\t\t\t\t\t</button>\n// \t\t\t\t\t\t\t</CardHeader>\n// \t\t\t\t\t\t\t<CardBody>\n// \t\t\t\t\t\t\t\t{!isEditing ? (\n// \t\t\t\t\t\t\t\t\t<div>\n// \t\t\t\t\t\t\t\t\t\t<p>\n// \t\t\t\t\t\t\t\t\t\t\t<strong>Name:</strong> {profile.name}\n// \t\t\t\t\t\t\t\t\t\t</p>\n// \t\t\t\t\t\t\t\t\t\t<p>\n// \t\t\t\t\t\t\t\t\t\t\t<strong>Email:</strong> {profile.email}\n// \t\t\t\t\t\t\t\t\t\t</p>\n// \t\t\t\t\t\t\t\t\t\t<p>\n// \t\t\t\t\t\t\t\t\t\t\t<strong>Phone:</strong> {profile.phone}\n// \t\t\t\t\t\t\t\t\t\t</p>\n// \t\t\t\t\t\t\t\t\t</div>\n// \t\t\t\t\t\t\t\t) : (\n// \t\t\t\t\t\t\t\t\t<form>\n// \t\t\t\t\t\t\t\t\t\t<div className='mb-3'>\n// \t\t\t\t\t\t\t\t\t\t\t<label>Name</label>\n// \t\t\t\t\t\t\t\t\t\t\t<input\n// \t\t\t\t\t\t\t\t\t\t\t\ttype='text'\n// \t\t\t\t\t\t\t\t\t\t\t\tclassName='form-control'\n// \t\t\t\t\t\t\t\t\t\t\t\tname='name'\n// \t\t\t\t\t\t\t\t\t\t\t\tvalue={profile.name}\n// \t\t\t\t\t\t\t\t\t\t\t\tonChange={handleChange}\n// \t\t\t\t\t\t\t\t\t\t\t/>\n// \t\t\t\t\t\t\t\t\t\t</div>\n// \t\t\t\t\t\t\t\t\t\t<div className='mb-3'>\n// \t\t\t\t\t\t\t\t\t\t\t<label>Email</label>\n// \t\t\t\t\t\t\t\t\t\t\t<input\n// \t\t\t\t\t\t\t\t\t\t\t\ttype='email'\n// \t\t\t\t\t\t\t\t\t\t\t\tclassName='form-control'\n// \t\t\t\t\t\t\t\t\t\t\t\tname='email'\n// \t\t\t\t\t\t\t\t\t\t\t\tvalue={profile.email}\n// \t\t\t\t\t\t\t\t\t\t\t\tonChange={handleChange}\n// \t\t\t\t\t\t\t\t\t\t\t/>\n// \t\t\t\t\t\t\t\t\t\t</div>\n// \t\t\t\t\t\t\t\t\t\t<div className='mb-3'>\n// \t\t\t\t\t\t\t\t\t\t\t<label>Phone</label>\n// \t\t\t\t\t\t\t\t\t\t\t<input\n// \t\t\t\t\t\t\t\t\t\t\t\ttype='text'\n// \t\t\t\t\t\t\t\t\t\t\t\tclassName='form-control'\n// \t\t\t\t\t\t\t\t\t\t\t\tname='phone'\n// \t\t\t\t\t\t\t\t\t\t\t\tvalue={profile.phone}\n// \t\t\t\t\t\t\t\t\t\t\t\tonChange={handleChange}\n// \t\t\t\t\t\t\t\t\t\t\t/>\n// \t\t\t\t\t\t\t\t\t\t</div>\n// \t\t\t\t\t\t\t\t\t</form>\n// \t\t\t\t\t\t\t\t)}\n\n\n\t\t\t\t\t\t\t\t\n// \t\t\t\t\t\t\t</CardBody>\n// \t\t\t\t\t\t</Card>\n// \t\t\t\t\t\t<Card className='shadow-3d-primary'>\n// \t\t\t\t\t\t\t<CardHeader>\n// \t\t\t\t\t\t\t\t<CardLabel icon='Task' iconColor='danger'>\n// \t\t\t\t\t\t\t\t\t<CardTitle>\n// \t\t\t\t\t\t\t\t\t\t<CardLabel tag='div' className='h5'>\n// \t\t\t\t\t\t\t\t\t\t\tPassword Manager\n// \t\t\t\t\t\t\t\t\t\t</CardLabel>\n// \t\t\t\t\t\t\t\t\t</CardTitle>\n// \t\t\t\t\t\t\t\t</CardLabel>\n// \t\t\t\t\t\t\t</CardHeader>\n// \t\t\t\t\t\t\t<CardBody>\n// \t\t\t\t\t\t\t\t<button\n// \t\t\t\t\t\t\t\t\tclassName='btn btn-outline-primary'\n// \t\t\t\t\t\t\t\t\tonClick={handlePasswordToggle}>\n// \t\t\t\t\t\t\t\t\t{showChangePassword ? 'Cancel' : 'Change Password'}\n// \t\t\t\t\t\t\t\t</button>\n\n// \t\t\t\t\t\t\t\t{showChangePassword && (\n// \t\t\t\t\t\t\t\t\t<div className='mt-4'>\n// \t\t\t\t\t\t\t\t\t\t<div className='mb-3'>\n// \t\t\t\t\t\t\t\t\t\t\t<label>Current Password</label>\n// \t\t\t\t\t\t\t\t\t\t\t<input\n// \t\t\t\t\t\t\t\t\t\t\t\ttype={\n// \t\t\t\t\t\t\t\t\t\t\t\t\tpasswordData.showPassword ? 'text' : 'password'\n// \t\t\t\t\t\t\t\t\t\t\t\t}\n// \t\t\t\t\t\t\t\t\t\t\t\tclassName='form-control'\n// \t\t\t\t\t\t\t\t\t\t\t\tname='current'\n// \t\t\t\t\t\t\t\t\t\t\t\tvalue={passwordData.current}\n// \t\t\t\t\t\t\t\t\t\t\t\tonChange={handlePasswordChange}\n// \t\t\t\t\t\t\t\t\t\t\t/>\n// \t\t\t\t\t\t\t\t\t\t</div>\n// \t\t\t\t\t\t\t\t\t\t<div className='mb-3'>\n// \t\t\t\t\t\t\t\t\t\t\t<label>New Password</label>\n// \t\t\t\t\t\t\t\t\t\t\t<input\n// \t\t\t\t\t\t\t\t\t\t\t\ttype={\n// \t\t\t\t\t\t\t\t\t\t\t\t\tpasswordData.showPassword ? 'text' : 'password'\n// \t\t\t\t\t\t\t\t\t\t\t\t}\n// \t\t\t\t\t\t\t\t\t\t\t\tclassName='form-control'\n// \t\t\t\t\t\t\t\t\t\t\t\tname='new'\n// \t\t\t\t\t\t\t\t\t\t\t\tvalue={passwordData.new}\n// \t\t\t\t\t\t\t\t\t\t\t\tonChange={handlePasswordChange}\n// \t\t\t\t\t\t\t\t\t\t\t/>\n// \t\t\t\t\t\t\t\t\t\t</div>\n// \t\t\t\t\t\t\t\t\t\t<div className='mb-3'>\n// \t\t\t\t\t\t\t\t\t\t\t<label>Confirm New Password</label>\n// \t\t\t\t\t\t\t\t\t\t\t<input\n// \t\t\t\t\t\t\t\t\t\t\t\ttype={\n// \t\t\t\t\t\t\t\t\t\t\t\t\tpasswordData.showPassword ? 'text' : 'password'\n// \t\t\t\t\t\t\t\t\t\t\t\t}\n// \t\t\t\t\t\t\t\t\t\t\t\tclassName='form-control'\n// \t\t\t\t\t\t\t\t\t\t\t\tname='confirm'\n// \t\t\t\t\t\t\t\t\t\t\t\tvalue={passwordData.confirm}\n// \t\t\t\t\t\t\t\t\t\t\t\tonChange={handlePasswordChange}\n// \t\t\t\t\t\t\t\t\t\t\t/>\n// \t\t\t\t\t\t\t\t\t\t</div>\n// \t\t\t\t\t\t\t\t\t\t<div className='mb-3 form-check'>\n// \t\t\t\t\t\t\t\t\t\t\t<input\n// \t\t\t\t\t\t\t\t\t\t\t\ttype='checkbox'\n// \t\t\t\t\t\t\t\t\t\t\t\tclassName='form-check-input'\n// \t\t\t\t\t\t\t\t\t\t\t\tid='showPassToggle'\n// \t\t\t\t\t\t\t\t\t\t\t\tonChange={toggleShowPassword}\n// \t\t\t\t\t\t\t\t\t\t\t/>\n// \t\t\t\t\t\t\t\t\t\t\t<label\n// \t\t\t\t\t\t\t\t\t\t\t\tclassName='form-check-label'\n// \t\t\t\t\t\t\t\t\t\t\t\thtmlFor='showPassToggle'>\n// \t\t\t\t\t\t\t\t\t\t\t\tShow Passwords\n// \t\t\t\t\t\t\t\t\t\t\t</label>\n// \t\t\t\t\t\t\t\t\t\t</div>\n// \t\t\t\t\t\t\t\t\t\t<button className='btn btn-primary'>Update Password</button>\n// \t\t\t\t\t\t\t\t\t</div>\n// \t\t\t\t\t\t\t\t)}\n// \t\t\t\t\t\t\t</CardBody>\n// \t\t\t\t\t\t</Card>\n// \t\t\t\t\t\t{/* <Card>\n// \t\t\t\t\t\t\t<CardHeader>\n// \t\t\t\t\t\t\t\t<CardLabel icon='Task' iconColor='danger'>\n// \t\t\t\t\t\t\t\t\t<CardTitle>\n// \t\t\t\t\t\t\t\t\t\t<CardLabel tag='div' className='h5'>\n// \t\t\t\t\t\t\t\t\t\t\tcreated Thred\n// \t\t\t\t\t\t\t\t\t\t</CardLabel>\n// \t\t\t\t\t\t\t\t\t</CardTitle>\n// \t\t\t\t\t\t\t\t</CardLabel>\n// \t\t\t\t\t\t\t</CardHeader>\n// \t\t\t\t\t\t\t<CardBody>\n// \t\t\t\t\t\t\t\t<div className='table-responsive'>\n// \t\t\t\t\t\t\t\t\t<table className='table table-modern mb-0'>\n// \t\t\t\t\t\t\t\t\t\t<thead>\n// \t\t\t\t\t\t\t\t\t\t\t<tr>\n// \t\t\t\t\t\t\t\t\t\t\t\t<th>Thread  ID</th>\n// \t\t\t\t\t\t\t\t\t\t\t\t<th>Thread  Name</th>\n// \t\t\t\t\t\t\t\t\t\t\t\t<th>Visibility</th>\n// \t\t\t\t\t\t\t\t\t\t\t\t<th>Total Members</th>\n// \t\t\t\t\t\t\t\t\t\t\t\t<th>QR Code</th>\n// \t\t\t\t\t\t\t\t\t\t\t</tr>\n// \t\t\t\t\t\t\t\t\t\t</thead>\n// \t\t\t\t\t\t\t\t\t\t<tbody>\n// \t\t\t\t\t\t\t\t\t\t\t{ data && data.map((item : any) => (\n// \t\t\t\t\t\t\t\t\t\t\t\t<tr key={item.id}>\n// \t\t\t\t\t\t\t\t\t\t\t\t\t<td>\n// \t\t\t\t\t\t\t\t\t\t\t\t\t\t<div className='d-flex align-items-center'>\n// \t\t\t\t\t\t\t\t\t\t\t\t\t\t\t<span\n// \t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\tclassName={classNames(\n// \t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t'badge',\n// \t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t'border border-2 border-light',\n// \t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t'rounded-circle',\n// \t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t'bg-success',\n// \t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t'p-2 me-2',\n// \t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t`bg-${item?.status?.color}`,\n// \t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t)}>\n// \t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t<span className='visually-hidden'>\n// \t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t{item.status?.fullName}\n// \t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t</span>\n// \t\t\t\t\t\t\t\t\t\t\t\t\t\t\t</span>\n// \t\t\t\t\t\t\t\t\t\t\t\t\t\t\t<span className='text-nowrap'>\n// \t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t{dayjs(\n// \t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t`${item.date} ${item.time}`,\n// \t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t).format('MMM Do YYYY, h:mm a')}\n// \t\t\t\t\t\t\t\t\t\t\t\t\t\t\t</span>\n// \t\t\t\t\t\t\t\t\t\t\t\t\t\t</div>\n// \t\t\t\t\t\t\t\t\t\t\t\t\t</td>\n// \t\t\t\t\t\t\t\t\t\t\t\t\t<td>\n// \t\t\t\t\t\t\t\t\t\t\t\t\t\t<div>\n// \t\t\t\t\t\t\t\t\t\t\t\t\t\t\t<div>{item?.customer?.name}</div>\n// \t\t\t\t\t\t\t\t\t\t\t\t\t\t\t<div className='small text-muted'>\n// \t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t{item?.customer?.email}\n// \t\t\t\t\t\t\t\t\t\t\t\t\t\t\t</div>\n// \t\t\t\t\t\t\t\t\t\t\t\t\t\t</div>\n// \t\t\t\t\t\t\t\t\t\t\t\t\t</td>\n// \t\t\t\t\t\t\t\t\t\t\t\t\t<td>{item?.service?.name}</td>\n// \t\t\t\t\t\t\t\t\t\t\t\t\t<td>{item?.duration}</td>\n// \t\t\t\t\t\t\t\t\t\t\t\t\t<td>\n// \t\t\t\t\t\t\t\t\t\t\t\t\t\t{item?.payment && priceFormat(item?.payment)}\n// \t\t\t\t\t\t\t\t\t\t\t\t\t</td>\n// \t\t\t\t\t\t\t\t\t\t\t\t\t<td>\n// \t\t\t\t\t\t\t\t\t\t\t\t\t\t<Dropdown>\n// \t\t\t\t\t\t\t\t\t\t\t\t\t\t\t<DropdownToggle hasIcon={false}>\n// \t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t<Button\n// \t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\tisLink\n// \t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\tcolor={item?.status?.color}\n// \t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\ticon='Circle'\n// \t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\tclassName='text-nowrap'>\n// \t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t{item?.status?.name}\n// \t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t</Button>\n// \t\t\t\t\t\t\t\t\t\t\t\t\t\t\t</DropdownToggle>\n// \t\t\t\t\t\t\t\t\t\t\t\t\t\t\t<DropdownMenu>\n// \t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t{Object.keys(EVENT_STATUS).map(\n// \t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t(key) => (\n// \t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t<DropdownItem key={key}>\n// \t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t<div>\n// \t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t<Icon\n// \t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\ticon='Circle'\n// \t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\tcolor={\n// \t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\tEVENT_STATUS[\n// \t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\tkey\n// \t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t].color\n// \t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t}\n// \t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t/>\n// \t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t{\n// \t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\tEVENT_STATUS[\n// \t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\tkey\n// \t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t].name\n// \t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t}\n// \t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t</div>\n// \t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t</DropdownItem>\n// \t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t),\n// \t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t)}\n// \t\t\t\t\t\t\t\t\t\t\t\t\t\t\t</DropdownMenu>\n// \t\t\t\t\t\t\t\t\t\t\t\t\t\t</Dropdown>\n// \t\t\t\t\t\t\t\t\t\t\t\t\t</td>\n// \t\t\t\t\t\t\t\t\t\t\t\t</tr>\n// \t\t\t\t\t\t\t\t\t\t\t))}\n// \t\t\t\t\t\t\t\t\t\t</tbody>\n// \t\t\t\t\t\t\t\t\t</table>\n// \t\t\t\t\t\t\t\t</div>\n// \t\t\t\t\t\t\t\t{!data?.length && (\n// \t\t\t\t\t\t\t\t\t<Alert color='warning' isLight icon='Report' className='mt-3'>\n// \t\t\t\t\t\t\t\t\t\tThere is no scheduled and assigned task.\n// \t\t\t\t\t\t\t\t\t</Alert>\n// \t\t\t\t\t\t\t\t)}\n// \t\t\t\t\t\t\t</CardBody>\n// \t\t\t\t\t\t</Card> */}\n// \t\t\t\t\t</div>\n// \t\t\t\t</div>\n// \t\t\t</Page>\n// \t\t</PageWrapper>\n// \t);\n// };\n\n// export default EmployeePage;\n\n\n\nimport React, { useState, useEffect } from 'react';\nimport { useParams } from 'react-router-dom';\nimport { useGetUserByIdQuery, useUpdateUserMutation } from '../../../redux/api/AuthApi';\nimport PageWrapper from '../../../layout/PageWrapper/PageWrapper';\nimport Page from '../../../layout/Page/Page';\nimport Card, {\n\tCardBody,\n\tCardHeader,\n\tCardTitle,\n\tCardLabel,\n} from '../../../components/bootstrap/Card';\nimport Avatar from '../../../components/Avatar';\nimport Alert from '../../../components/bootstrap/Alert';\nimport Profile from '../../../assets/img/user6.png';\n\nconst EmployeePage = () => {\n\tconst { id } = useParams();\n\n\t// Fetch user data by ID\n\tconst { data, error, isLoading } = useGetUserByIdQuery(id);\n\tconst userData = data?.[0];\n\n\t// Update user mutation\n\tconst [updateUser, { isLoading: isUpdating }] = useUpdateUserMutation();\n\n\t// State for editing\n\tconst [isEditing, setIsEditing] = useState(false);\n\n\t// Profile state\n\tconst [profile, setProfile] = useState({\n\t\tname: '',\n\t\temail: '',\n\t\tphone: '',\n\t});\n\n\t// Sync user data into profile form\n\tuseEffect(() => {\n\t\tif (userData) {\n\t\t\tsetProfile({\n\t\t\t\tname: userData.fullName || '',\n\t\t\t\temail: userData.email || '',\n\t\t\t\tphone: userData.phone || '',\n\t\t\t});\n\t\t}\n\t}, [userData]);\n\n\t// Toggle edit mode\n\tconst handleEditToggle = () => setIsEditing(!isEditing);\n\n\t// Handle input change\n\tconst handleChange = (e: React.ChangeEvent<HTMLInputElement>) => {\n\t\tsetProfile({ ...profile, [e.target.name]: e.target.value });\n\t};\n\n\t// Handle save and API call\n\tconst handleSaveProfile = async () => {\n\t\ttry {\n\t\t\tawait updateUser({\n\t\t\t\tid,\n\t\t\t\tupdatedData: {\n\t\t\t\t\tfullName: profile.name,\n\t\t\t\t\temail: profile.email,\n\t\t\t\t\tphone: profile.phone,\n\t\t\t\t},\n\t\t\t}).unwrap();\n\t\t\talert('Profile updated successfully!');\n\t\t\tsetIsEditing(false);\n\t\t} catch (err) {\n\t\t\tconsole.error('Error updating profile:', err);\n\t\t\talert('Failed to update profile.');\n\t\t}\n\t};\n\n\tif (isLoading) return <Alert color='info'>Loading profile...</Alert>;\n\tif (error) return <Alert color='danger'>Failed to load user data.</Alert>;\n\n\treturn (\n\t\t<PageWrapper title={`${userData?.fullName || 'Employee Profile'}`}>\n\t\t\t<Page>\n\t\t\t\t<div className='pt-3 pb-5 d-flex align-items-center'>\n\t\t\t\t\t<span className='display-4 fw-bold me-3'>{userData?.fullName}</span>\n\t\t\t\t\t<span className='border border-success border-2 text-success fw-bold px-3 py-2 rounded'>\n\t\t\t\t\t\t{userData?.role}\n\t\t\t\t\t</span>\n\t\t\t\t</div>\n\n\t\t\t\t<div className='row'>\n\t\t\t\t\t<div className='col-lg-4'>\n\t\t\t\t\t\t<Card className='shadow-3d-info'>\n\t\t\t\t\t\t\t<CardBody className='text-center'>\n\t\t\t\t\t\t\t\t<Avatar\n\t\t\t\t\t\t\t\t\tsrc={Profile}\n\t\t\t\t\t\t\t\t\tstyle={{ width: '300px', height: '200px', objectFit: 'cover' }}\n\t\t\t\t\t\t\t\t/>\n\t\t\t\t\t\t\t</CardBody>\n\t\t\t\t\t\t</Card>\n\t\t\t\t\t</div>\n\n\t\t\t\t\t<div className='col-lg-8'>\n\t\t\t\t\t\t<Card className='shadow-3d-primary'>\n\t\t\t\t\t\t\t<CardHeader className='d-flex justify-content-between align-items-center'>\n\t\t\t\t\t\t\t\t<CardTitle className='h4 mb-0'>My Profile</CardTitle>\n\t\t\t\t\t\t\t\t<button\n\t\t\t\t\t\t\t\t\tclassName='btn btn-outline-primary'\n\t\t\t\t\t\t\t\t\tonClick={handleEditToggle}\n\t\t\t\t\t\t\t\t>\n\t\t\t\t\t\t\t\t\t{isEditing ? 'Cancel' : 'Edit'}\n\t\t\t\t\t\t\t\t</button>\n\t\t\t\t\t\t\t</CardHeader>\n\n\t\t\t\t\t\t\t<CardBody>\n\t\t\t\t\t\t\t\t{!isEditing ? (\n\t\t\t\t\t\t\t\t\t<>\n\t\t\t\t\t\t\t\t\t\t<p><strong>Name:</strong> {profile.name }</p>\n\t\t\t\t\t\t\t\t\t\t<p><strong>Email:</strong> {profile.email}</p>\n\t\t\t\t\t\t\t\t\t\t<p><strong>Phone:</strong> {profile.phone}</p>\n\t\t\t\t\t\t\t\t\t</>\n\t\t\t\t\t\t\t\t) : (\n\t\t\t\t\t\t\t\t\t<form>\n\t\t\t\t\t\t\t\t\t\t<div className='mb-3'>\n\t\t\t\t\t\t\t\t\t\t\t<label>Name</label>\n\t\t\t\t\t\t\t\t\t\t\t<input\n\t\t\t\t\t\t\t\t\t\t\t\ttype='text'\n\t\t\t\t\t\t\t\t\t\t\t\tclassName='form-control'\n\t\t\t\t\t\t\t\t\t\t\t\tname='name'\n\t\t\t\t\t\t\t\t\t\t\t\tvalue={profile.name}\n\t\t\t\t\t\t\t\t\t\t\t\tonChange={handleChange}\n\t\t\t\t\t\t\t\t\t\t\t/>\n\t\t\t\t\t\t\t\t\t\t</div>\n\t\t\t\t\t\t\t\t\t\t<div className='mb-3'>\n\t\t\t\t\t\t\t\t\t\t\t<label>Email</label>\n\t\t\t\t\t\t\t\t\t\t\t<input\n\t\t\t\t\t\t\t\t\t\t\t\ttype='email'\n\t\t\t\t\t\t\t\t\t\t\t\tclassName='form-control'\n\t\t\t\t\t\t\t\t\t\t\t\tname='email'\n\t\t\t\t\t\t\t\t\t\t\t\tvalue={profile.email}\n\t\t\t\t\t\t\t\t\t\t\t\tonChange={handleChange}\n\t\t\t\t\t\t\t\t\t\t\t/>\n\t\t\t\t\t\t\t\t\t\t</div>\n\t\t\t\t\t\t\t\t\t\t<div className='mb-3'>\n\t\t\t\t\t\t\t\t\t\t\t<label>Phone</label>\n\t\t\t\t\t\t\t\t\t\t\t<input\n\t\t\t\t\t\t\t\t\t\t\t\ttype='text'\n\t\t\t\t\t\t\t\t\t\t\t\tclassName='form-control'\n\t\t\t\t\t\t\t\t\t\t\t\tname='phone'\n\t\t\t\t\t\t\t\t\t\t\t\tvalue={profile.phone}\n\t\t\t\t\t\t\t\t\t\t\t\tonChange={handleChange}\n\t\t\t\t\t\t\t\t\t\t\t/>\n\t\t\t\t\t\t\t\t\t\t</div>\n\t\t\t\t\t\t\t\t\t\t<button\n\t\t\t\t\t\t\t\t\t\t\ttype='button'\n\t\t\t\t\t\t\t\t\t\t\tclassName='btn btn-success'\n\t\t\t\t\t\t\t\t\t\t\tonClick={handleSaveProfile}\n\t\t\t\t\t\t\t\t\t\t\tdisabled={isUpdating}\n\t\t\t\t\t\t\t\t\t\t>\n\t\t\t\t\t\t\t\t\t\t\t{isUpdating ? 'Saving...' : 'Save'}\n\t\t\t\t\t\t\t\t\t\t</button>\n\t\t\t\t\t\t\t\t\t</form>\n\t\t\t\t\t\t\t\t)}\n\t\t\t\t\t\t\t</CardBody>\n\t\t\t\t\t\t</Card>\n\t\t\t\t\t</div>\n\t\t\t\t</div>\n\t\t\t</Page>\n\t\t</PageWrapper>\n\t);\n};\n\nexport default EmployeePage;\n\n"],"names":["EmployeePage","id","useParams","data","error","isLoading","useGetUserByIdQuery","userData","updateUser","isUpdating","useUpdateUserMutation","isEditing","setIsEditing","useState","profile","setProfile","name","email","phone","useEffect","fullName","handleChange","e","target","value","_jsx","Alert","color","children","PageWrapper","title","_jsxs","Page","className","role","Card","CardBody","Avatar","src","Profile","style","width","height","objectFit","CardHeader","CardTitle","onClick","handleEditToggle","type","onChange","async","updatedData","unwrap","alert","err","console","disabled","_Fragment"],"sourceRoot":""}