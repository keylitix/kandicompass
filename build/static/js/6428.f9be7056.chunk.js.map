{"version":3,"file":"static/js/6428.f9be7056.chunk.js","mappings":"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","sources":["common/data/colorDummyData.ts","common/other/CommonHowToUse.tsx","common/other/CommonStoryBtn.tsx","components/bootstrap/Breadcrumb.tsx","pages/documentation/components/SpinnersPage.tsx"],"sourcesContent":["import { TColor } from '../../type/color-type';\n\nconst COLORS: { [key: string]: TColor } = {\n\tPRIMARY: 'primary',\n\tSECONDARY: 'secondary',\n\tINFO: 'info',\n\tWARNING: 'warning',\n\tDANGER: 'danger',\n\tSUCCESS: 'success',\n\tLIGHT: 'light',\n\tDARK: 'dark',\n};\nexport default COLORS;\n","import React, { FC, ReactNode } from 'react';\nimport { createUseStyles } from 'react-jss';\nimport Alert from '../../components/bootstrap/Alert';\nimport PrismCode from '../../components/extras/PrismCode';\n\nconst useStyles = createUseStyles({\n\t// stylelint-disable-next-line selector-type-no-unknown\n\tprism: {\n\t\tpadding: '0 !important',\n\t\tmargin: '0 !important',\n\t\tbackground: 'transparent !important',\n\t\tborderRadius: '0 !important',\n\n\t\t// stylelint-disable-next-line scss/selector-no-redundant-nesting-selector\n\t\t'& > code': {\n\t\t\t// stylelint-disable-next-line scale-unlimited/declaration-strict-value\n\t\t\tcolor: '#2e3f96 !important',\n\t\t\tfontSize: '0.875rem !important',\n\t\t},\n\t},\n});\n\ninterface ICommonHowToUseProps {\n\tchildren: string | ReactNode;\n\tisPrism?: boolean;\n}\nconst CommonHowToUse: FC<ICommonHowToUseProps> = ({ children, isPrism }) => {\n\tconst classes = useStyles();\n\n\treturn (\n\t\t<Alert\n\t\t\tcolor='info'\n\t\t\tisLight\n\t\t\tshadow='md'\n\t\t\tborderWidth={0}\n\t\t\ticon='CustomReact'\n\t\t\tclassName='flex-nowrap w-100'>\n\t\t\t{isPrism ? (\n\t\t\t\t<PrismCode code={children as string} language='jsx' className={classes.prism} />\n\t\t\t) : (\n\t\t\t\t<code>{children}</code>\n\t\t\t)}\n\t\t</Alert>\n\t);\n};\n\nexport default CommonHowToUse;\n","import React, { FC } from 'react';\nimport Button, { IButtonProps } from '../../components/bootstrap/Button';\n\ninterface ICommonStoryBtnProps extends IButtonProps {\n\tto: string;\n}\nconst CommonStoryBtn: FC<ICommonStoryBtnProps> = ({ to, ...props }) => {\n\treturn (\n\t\t<Button\n\t\t\tcolor='storybook'\n\t\t\ticon='CustomStorybook'\n\t\t\ttag='a'\n\t\t\ttarget='_blank'\n\t\t\tisLight\n\t\t\thref={`${process.env.REACT_APP_STORYBOOK_URL}${to}`}\n\t\t\t// eslint-disable-next-line react/jsx-props-no-spreading\n\t\t\t{...props}>\n\t\t\tStorybook\n\t\t</Button>\n\t);\n};\n\nexport default CommonStoryBtn;\n","import React, {\n\tChildren,\n\tcloneElement,\n\tFC,\n\tJSXElementConstructor,\n\tReactElement,\n\tReactNode,\n} from 'react';\nimport classNames from 'classnames';\nimport { NavLink } from 'react-router-dom';\nimport TagWrapper from '../TagWrapper';\nimport Icon from '../icon/Icon';\n\ninterface IBreadcrumbItemProps extends Record<string, any> {\n\tchildren: ReactNode;\n\tariaLabel?: string;\n\tclassName?: string;\n\ttag?: string;\n\tto: string;\n\tisActive?: boolean;\n\tdivider?: ReactElement<any, string | JSXElementConstructor<any>> | string;\n}\nexport const BreadcrumbItem: FC<IBreadcrumbItemProps> = ({\n\tchildren,\n\tariaLabel,\n\tclassName,\n\ttag = 'li',\n\tto,\n\tisActive,\n\tdivider,\n}) => {\n\treturn (\n\t\t<TagWrapper\n\t\t\ttag={tag}\n\t\t\tclassName={classNames('breadcrumb-item', { active: isActive }, className)}\n\t\t\taria-current={isActive ? 'page' : null}\n\t\t\taria-label={ariaLabel || children}>\n\t\t\t{divider &&\n\t\t\t\ttypeof divider !== 'string' &&\n\t\t\t\tcloneElement(divider, {\n\t\t\t\t\tclassName: classNames('breadcrumb-icon', divider.props.className),\n\t\t\t\t})}\n\t\t\t{isActive ? (\n\t\t\t\tchildren\n\t\t\t) : (\n\t\t\t\t<NavLink to={to} aria-label={ariaLabel}>\n\t\t\t\t\t{children}\n\t\t\t\t</NavLink>\n\t\t\t)}\n\t\t</TagWrapper>\n\t);\n};\n\ninterface IBreadcrumbProps extends Record<string, any> {\n\tchildren?: ReactElement<IBreadcrumbItemProps> | ReactElement<IBreadcrumbItemProps>[];\n\tlist?: {\n\t\ttitle: string;\n\t\tto: string;\n\t\ttag?: 'div' | 'li';\n\t}[];\n\ttag?: 'nav' | 'div' | 'section';\n\tlistTag?: 'div' | 'ol' | 'ul';\n\titemTag?: 'div' | 'li';\n\tariaLabel?: string | null;\n\tautoActive?: boolean;\n\tisToHome?: ReactNode;\n\tdivider?: ReactElement<any, string | JSXElementConstructor<any>> | string;\n}\nconst Breadcrumb: FC<IBreadcrumbProps> = ({\n\tchildren,\n\tlist,\n\ttag = 'nav',\n\tlistTag = 'ol',\n\titemTag = 'li',\n\tariaLabel = 'breadcrumb',\n\tautoActive = true,\n\tisToHome = <Icon icon='HolidayVillage' />,\n\tdivider = <Icon icon='ChevronRight' />,\n}) => {\n\tconst DIVIDER = divider !== 'string' && divider;\n\treturn (\n\t\t<TagWrapper\n\t\t\ttag={tag}\n\t\t\taria-label={ariaLabel}\n\t\t\tstyle={\n\t\t\t\tdivider\n\t\t\t\t\t? {\n\t\t\t\t\t\t\t'--bs-breadcrumb-divider':\n\t\t\t\t\t\t\t\ttypeof divider === 'string' ? `'${divider}'` : 'none',\n\t\t\t\t\t\t}\n\t\t\t\t\t: null\n\t\t\t}>\n\t\t\t<TagWrapper tag={listTag} className='breadcrumb'>\n\t\t\t\t{isToHome && (\n\t\t\t\t\t<BreadcrumbItem to='/' ariaLabel='Home'>\n\t\t\t\t\t\t{isToHome}\n\t\t\t\t\t</BreadcrumbItem>\n\t\t\t\t)}\n\t\t\t\t{list\n\t\t\t\t\t? list.map((item, index) => (\n\t\t\t\t\t\t\t<BreadcrumbItem\n\t\t\t\t\t\t\t\tkey={item.title}\n\t\t\t\t\t\t\t\ttag={item.tag || itemTag}\n\t\t\t\t\t\t\t\tto={item.to}\n\t\t\t\t\t\t\t\tisActive={autoActive && list.length === index + 1}\n\t\t\t\t\t\t\t\tdivider={DIVIDER as ReactElement}>\n\t\t\t\t\t\t\t\t{item.title}\n\t\t\t\t\t\t\t</BreadcrumbItem>\n\t\t\t\t\t\t))\n\t\t\t\t\t: Children.map(children, (child, index) =>\n\t\t\t\t\t\t\t// @ts-ignore\n\t\t\t\t\t\t\tcloneElement(child, {\n\t\t\t\t\t\t\t\t// @ts-ignore\n\t\t\t\t\t\t\t\ttag: child.props.tag || itemTag,\n\t\t\t\t\t\t\t\t// @ts-ignore\n\t\t\t\t\t\t\t\tisActive: autoActive && children.length === index + 1,\n\t\t\t\t\t\t\t\t// @ts-ignore\n\t\t\t\t\t\t\t\tdivider: child.props.divider || DIVIDER,\n\t\t\t\t\t\t\t}),\n\t\t\t\t\t\t)}\n\t\t\t</TagWrapper>\n\t\t</TagWrapper>\n\t);\n};\n\nexport default Breadcrumb;\n","import React, { Fragment } from 'react';\nimport PageWrapper from '../../../layout/PageWrapper/PageWrapper';\nimport { componentPagesMenu } from '../../../menu';\nimport SubHeader, { SubHeaderLeft, SubHeaderRight } from '../../../layout/SubHeader/SubHeader';\nimport Breadcrumb from '../../../components/bootstrap/Breadcrumb';\nimport CommonStoryBtn from '../../../common/other/CommonStoryBtn';\nimport Page from '../../../layout/Page/Page';\nimport Card, {\n\tCardActions,\n\tCardBody,\n\tCardCodeView,\n\tCardHeader,\n\tCardLabel,\n\tCardSubTitle,\n\tCardTitle,\n} from '../../../components/bootstrap/Card';\nimport CommonHowToUse from '../../../common/other/CommonHowToUse';\nimport COLORS from '../../../common/data/colorDummyData';\nimport Spinner from '../../../components/bootstrap/Spinner';\nimport Popovers from '../../../components/bootstrap/Popovers';\nimport Button from '../../../components/bootstrap/Button';\n\nconst SpinnersPage = () => {\n\tconst GENERAL_USAGE = `\n<Spinner\n\ttag={ String } // 'div' || 'span'\n\tcolor={ String } // 'primary' || 'secondary' || 'success' || 'info' || 'warning' || 'danger' || 'light' || 'dark'\n\tisGrow={ Boolean }\n\tisSmall={ Boolean }\n\tsize={ Number || String } // Example: 10, '3vh', '5rem' etc.\n\tinButton={ Boolean || String} // true || false || 'onlyIcon'\n\tclassName={ String }\n\t{...props} />`;\n\treturn (\n\t\t<PageWrapper title={componentPagesMenu.components.subMenu.spinners.text}>\n\t\t\t<SubHeader>\n\t\t\t\t<SubHeaderLeft>\n\t\t\t\t\t<Breadcrumb\n\t\t\t\t\t\tlist={[\n\t\t\t\t\t\t\t{\n\t\t\t\t\t\t\t\ttitle: componentPagesMenu.components.text,\n\t\t\t\t\t\t\t\tto: `/${componentPagesMenu.components.path}`,\n\t\t\t\t\t\t\t},\n\t\t\t\t\t\t\t{\n\t\t\t\t\t\t\t\ttitle: componentPagesMenu.components.subMenu.spinners.text,\n\t\t\t\t\t\t\t\tto: `/${componentPagesMenu.components.subMenu.spinners.path}`,\n\t\t\t\t\t\t\t},\n\t\t\t\t\t\t]}\n\t\t\t\t\t/>\n\t\t\t\t</SubHeaderLeft>\n\t\t\t\t<SubHeaderRight>\n\t\t\t\t\t<CommonStoryBtn to='/docs/components-spinner--default' />\n\t\t\t\t</SubHeaderRight>\n\t\t\t</SubHeader>\n\t\t\t<Page>\n\t\t\t\t<div className='row'>\n\t\t\t\t\t{/* General Usage */}\n\t\t\t\t\t<div className='col-12'>\n\t\t\t\t\t\t<Card>\n\t\t\t\t\t\t\t<CardHeader>\n\t\t\t\t\t\t\t\t<CardLabel icon='Assignment'>\n\t\t\t\t\t\t\t\t\t<CardTitle>General Usage</CardTitle>\n\t\t\t\t\t\t\t\t</CardLabel>\n\t\t\t\t\t\t\t</CardHeader>\n\t\t\t\t\t\t\t<CardBody>\n\t\t\t\t\t\t\t\t<CardCodeView>{GENERAL_USAGE}</CardCodeView>\n\t\t\t\t\t\t\t</CardBody>\n\t\t\t\t\t\t</Card>\n\t\t\t\t\t</div>\n\n\t\t\t\t\t<div className='col-lg-6'>\n\t\t\t\t\t\t<Card stretch>\n\t\t\t\t\t\t\t<CardHeader>\n\t\t\t\t\t\t\t\t<CardLabel icon='Palette' iconColor='info'>\n\t\t\t\t\t\t\t\t\t<CardTitle>color</CardTitle>\n\t\t\t\t\t\t\t\t\t<CardSubTitle>Spinner</CardSubTitle>\n\t\t\t\t\t\t\t\t</CardLabel>\n\t\t\t\t\t\t\t\t<CardActions>\n\t\t\t\t\t\t\t\t\t<CommonStoryBtn to='/story/components-spinner--default&args=color:secondary' />\n\t\t\t\t\t\t\t\t</CardActions>\n\t\t\t\t\t\t\t</CardHeader>\n\t\t\t\t\t\t\t<CardHeader>\n\t\t\t\t\t\t\t\t<CommonHowToUse>\n\t\t\t\t\t\t\t\t\tcolor: PropTypes.oneOf([ 'primary', 'secondary', 'success',\n\t\t\t\t\t\t\t\t\t'info', 'warning', 'danger', 'light', 'dark', ]),\n\t\t\t\t\t\t\t\t</CommonHowToUse>\n\t\t\t\t\t\t\t</CardHeader>\n\t\t\t\t\t\t\t<CardBody>\n\t\t\t\t\t\t\t\t<div className='row g-3'>\n\t\t\t\t\t\t\t\t\t{Object.keys(COLORS).map((color) => (\n\t\t\t\t\t\t\t\t\t\t<div key={COLORS[color]} className='col-auto'>\n\t\t\t\t\t\t\t\t\t\t\t<Spinner color={COLORS[color]} />\n\t\t\t\t\t\t\t\t\t\t</div>\n\t\t\t\t\t\t\t\t\t))}\n\t\t\t\t\t\t\t\t</div>\n\t\t\t\t\t\t\t</CardBody>\n\t\t\t\t\t\t</Card>\n\t\t\t\t\t</div>\n\t\t\t\t\t<div className='col-lg-6'>\n\t\t\t\t\t\t<Card stretch>\n\t\t\t\t\t\t\t<CardHeader>\n\t\t\t\t\t\t\t\t<CardLabel icon='RadioButtonChecked' iconColor='success'>\n\t\t\t\t\t\t\t\t\t<CardTitle>isGrow</CardTitle>\n\t\t\t\t\t\t\t\t\t<CardSubTitle>Spinner</CardSubTitle>\n\t\t\t\t\t\t\t\t</CardLabel>\n\t\t\t\t\t\t\t\t<CardActions>\n\t\t\t\t\t\t\t\t\t<CommonStoryBtn to='/story/components-spinner--default&args=isGrow:true' />\n\t\t\t\t\t\t\t\t</CardActions>\n\t\t\t\t\t\t\t</CardHeader>\n\t\t\t\t\t\t\t<CardHeader>\n\t\t\t\t\t\t\t\t<CommonHowToUse>isGrow: PropTypes.bool,</CommonHowToUse>\n\t\t\t\t\t\t\t</CardHeader>\n\t\t\t\t\t\t\t<CardBody>\n\t\t\t\t\t\t\t\t<div className='row g-3'>\n\t\t\t\t\t\t\t\t\t{Object.keys(COLORS).map((color) => (\n\t\t\t\t\t\t\t\t\t\t<div key={COLORS[color]} className='col-auto'>\n\t\t\t\t\t\t\t\t\t\t\t<Spinner color={COLORS[color]} isGrow />\n\t\t\t\t\t\t\t\t\t\t</div>\n\t\t\t\t\t\t\t\t\t))}\n\t\t\t\t\t\t\t\t</div>\n\t\t\t\t\t\t\t</CardBody>\n\t\t\t\t\t\t</Card>\n\t\t\t\t\t</div>\n\n\t\t\t\t\t<div className='col-lg-6'>\n\t\t\t\t\t\t<Card stretch>\n\t\t\t\t\t\t\t<CardHeader>\n\t\t\t\t\t\t\t\t<CardLabel icon='PhotoSizeSelectSmall' iconColor='danger'>\n\t\t\t\t\t\t\t\t\t<CardTitle>isSmall</CardTitle>\n\t\t\t\t\t\t\t\t\t<CardSubTitle>Spinner</CardSubTitle>\n\t\t\t\t\t\t\t\t</CardLabel>\n\t\t\t\t\t\t\t\t<CardActions>\n\t\t\t\t\t\t\t\t\t<CommonStoryBtn to='/story/components-spinner--default&args=isSmall:true' />\n\t\t\t\t\t\t\t\t</CardActions>\n\t\t\t\t\t\t\t</CardHeader>\n\t\t\t\t\t\t\t<CardHeader>\n\t\t\t\t\t\t\t\t<CommonHowToUse>isSmall: PropTypes.bool,</CommonHowToUse>\n\t\t\t\t\t\t\t</CardHeader>\n\t\t\t\t\t\t\t<CardBody>\n\t\t\t\t\t\t\t\t<div className='row g-3'>\n\t\t\t\t\t\t\t\t\t{Object.keys(COLORS).map((color) => (\n\t\t\t\t\t\t\t\t\t\t<Fragment key={COLORS[color]}>\n\t\t\t\t\t\t\t\t\t\t\t<div className='col-auto'>\n\t\t\t\t\t\t\t\t\t\t\t\t<Spinner color={COLORS[color]} isSmall />\n\t\t\t\t\t\t\t\t\t\t\t</div>\n\t\t\t\t\t\t\t\t\t\t\t<div className='col-auto'>\n\t\t\t\t\t\t\t\t\t\t\t\t<Spinner color={COLORS[color]} isSmall isGrow />\n\t\t\t\t\t\t\t\t\t\t\t</div>\n\t\t\t\t\t\t\t\t\t\t</Fragment>\n\t\t\t\t\t\t\t\t\t))}\n\t\t\t\t\t\t\t\t</div>\n\t\t\t\t\t\t\t</CardBody>\n\t\t\t\t\t\t</Card>\n\t\t\t\t\t</div>\n\t\t\t\t\t<div className='col-lg-6'>\n\t\t\t\t\t\t<Card stretch>\n\t\t\t\t\t\t\t<CardHeader>\n\t\t\t\t\t\t\t\t<CardLabel icon='Straighten' iconColor='warning'>\n\t\t\t\t\t\t\t\t\t<CardTitle>size</CardTitle>\n\t\t\t\t\t\t\t\t\t<CardSubTitle>Spinner</CardSubTitle>\n\t\t\t\t\t\t\t\t</CardLabel>\n\t\t\t\t\t\t\t\t<CardActions>\n\t\t\t\t\t\t\t\t\t<CommonStoryBtn to='/story/components-spinner--default&args=size:3rem' />\n\t\t\t\t\t\t\t\t</CardActions>\n\t\t\t\t\t\t\t</CardHeader>\n\t\t\t\t\t\t\t<CardHeader>\n\t\t\t\t\t\t\t\t<CommonHowToUse>\n\t\t\t\t\t\t\t\t\tsize: PropTypes.oneOfType([PropTypes.string, PropTypes.number]),\n\t\t\t\t\t\t\t\t</CommonHowToUse>\n\t\t\t\t\t\t\t</CardHeader>\n\t\t\t\t\t\t\t<CardBody>\n\t\t\t\t\t\t\t\t<div className='row g-3 align-items-center'>\n\t\t\t\t\t\t\t\t\t<div className='col-auto'>\n\t\t\t\t\t\t\t\t\t\t<Popovers trigger='hover' desc='Size 10'>\n\t\t\t\t\t\t\t\t\t\t\t<Spinner color='primary' size={10} />\n\t\t\t\t\t\t\t\t\t\t</Popovers>\n\t\t\t\t\t\t\t\t\t</div>\n\t\t\t\t\t\t\t\t\t<div className='col-auto'>\n\t\t\t\t\t\t\t\t\t\t<Popovers trigger='hover' desc='Size 10'>\n\t\t\t\t\t\t\t\t\t\t\t<Spinner color='primary' size={10} isGrow />\n\t\t\t\t\t\t\t\t\t\t</Popovers>\n\t\t\t\t\t\t\t\t\t</div>\n\t\t\t\t\t\t\t\t\t<div className='col-auto'>\n\t\t\t\t\t\t\t\t\t\t<Popovers trigger='hover' desc='Size 3rem'>\n\t\t\t\t\t\t\t\t\t\t\t<Spinner color='secondary' size='3rem' />\n\t\t\t\t\t\t\t\t\t\t</Popovers>\n\t\t\t\t\t\t\t\t\t</div>\n\t\t\t\t\t\t\t\t\t<div className='col-auto'>\n\t\t\t\t\t\t\t\t\t\t<Popovers trigger='hover' desc='Size 3rem'>\n\t\t\t\t\t\t\t\t\t\t\t<Spinner color='secondary' size='3rem' isGrow />\n\t\t\t\t\t\t\t\t\t\t</Popovers>\n\t\t\t\t\t\t\t\t\t</div>\n\t\t\t\t\t\t\t\t</div>\n\t\t\t\t\t\t\t</CardBody>\n\t\t\t\t\t\t</Card>\n\t\t\t\t\t</div>\n\n\t\t\t\t\t<div className='col-12'>\n\t\t\t\t\t\t<Card stretch>\n\t\t\t\t\t\t\t<CardHeader>\n\t\t\t\t\t\t\t\t<CardLabel icon='SmartButton' iconColor='primary'>\n\t\t\t\t\t\t\t\t\t<CardTitle>inButton</CardTitle>\n\t\t\t\t\t\t\t\t\t<CardSubTitle>Spinner</CardSubTitle>\n\t\t\t\t\t\t\t\t</CardLabel>\n\t\t\t\t\t\t\t\t<CardActions>\n\t\t\t\t\t\t\t\t\t<CommonStoryBtn to='/story/components-spinner--default&args=isSmall:true;inButton:true' />\n\t\t\t\t\t\t\t\t</CardActions>\n\t\t\t\t\t\t\t</CardHeader>\n\t\t\t\t\t\t\t<CardHeader>\n\t\t\t\t\t\t\t\t<CommonHowToUse>\n\t\t\t\t\t\t\t\t\tinButton: PropTypes.oneOfType([PropTypes.bool,\n\t\t\t\t\t\t\t\t\tPropTypes.oneOf(['onlyIcon'])]),\n\t\t\t\t\t\t\t\t</CommonHowToUse>\n\t\t\t\t\t\t\t</CardHeader>\n\t\t\t\t\t\t\t<CardBody>\n\t\t\t\t\t\t\t\t<div className='row g-3 align-items-center'>\n\t\t\t\t\t\t\t\t\t<div className='col-auto'>\n\t\t\t\t\t\t\t\t\t\t<Button color='primary' isLight>\n\t\t\t\t\t\t\t\t\t\t\t<Spinner isSmall inButton='onlyIcon' />\n\t\t\t\t\t\t\t\t\t\t</Button>\n\t\t\t\t\t\t\t\t\t</div>\n\t\t\t\t\t\t\t\t\t<div className='col-auto'>\n\t\t\t\t\t\t\t\t\t\t<Button color='info' isLight>\n\t\t\t\t\t\t\t\t\t\t\t<Spinner isSmall inButton='onlyIcon' isGrow />\n\t\t\t\t\t\t\t\t\t\t</Button>\n\t\t\t\t\t\t\t\t\t</div>\n\t\t\t\t\t\t\t\t\t<div className='col-auto'>\n\t\t\t\t\t\t\t\t\t\t<Button color='primary' isLight>\n\t\t\t\t\t\t\t\t\t\t\t<Spinner isSmall inButton />\n\t\t\t\t\t\t\t\t\t\t\tLoading...\n\t\t\t\t\t\t\t\t\t\t</Button>\n\t\t\t\t\t\t\t\t\t</div>\n\t\t\t\t\t\t\t\t\t<div className='col-auto'>\n\t\t\t\t\t\t\t\t\t\t<Button color='info' isLight>\n\t\t\t\t\t\t\t\t\t\t\t<Spinner isSmall inButton isGrow />\n\t\t\t\t\t\t\t\t\t\t\tLoading...\n\t\t\t\t\t\t\t\t\t\t</Button>\n\t\t\t\t\t\t\t\t\t</div>\n\t\t\t\t\t\t\t\t</div>\n\t\t\t\t\t\t\t</CardBody>\n\t\t\t\t\t\t</Card>\n\t\t\t\t\t</div>\n\t\t\t\t</div>\n\t\t\t</Page>\n\t\t</PageWrapper>\n\t);\n};\n\nexport default SpinnersPage;\n"],"names":["PRIMARY","SECONDARY","INFO","WARNING","DANGER","SUCCESS","LIGHT","DARK","useStyles","createUseStyles","prism","padding","margin","background","borderRadius","color","fontSize","_ref","children","isPrism","classes","_jsx","Alert","isLight","shadow","borderWidth","icon","className","PrismCode","code","language","to","props","Button","tag","target","href","BreadcrumbItem","ariaLabel","isActive","divider","_jsxs","TagWrapper","classNames","active","cloneElement","NavLink","_ref2","list","listTag","itemTag","autoActive","isToHome","Icon","DIVIDER","style","map","item","index","length","title","Children","child","SpinnersPage","PageWrapper","componentPagesMenu","components","subMenu","spinners","text","SubHeader","SubHeaderLeft","Breadcrumb","path","SubHeaderRight","CommonStoryBtn","Page","Card","CardHeader","CardLabel","CardTitle","CardBody","CardCodeView","stretch","iconColor","CardSubTitle","CardActions","CommonHowToUse","Object","keys","COLORS","Spinner","isGrow","Fragment","isSmall","Popovers","trigger","desc","size","inButton"],"sourceRoot":""}