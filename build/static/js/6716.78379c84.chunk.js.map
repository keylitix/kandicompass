{"version":3,"file":"static/js/6716.78379c84.chunk.js","mappings":"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","sources":["assets/img/instagram.svg","common/function/generateDayWiseTimeSeries.ts","common/other/CommonStoryBtn.tsx","components/bootstrap/Breadcrumb.tsx","pages/documentation/charts/chart-line/LineBasic.tsx","pages/documentation/charts/chart-line/LineWithLabel.tsx","pages/documentation/charts/chart-line/LineWithAnnotations.tsx","pages/documentation/charts/chart-line/LineSyncingOptions.tsx","pages/documentation/charts/chart-line/LineBrush.tsx","pages/documentation/charts/chart-line/LineStep.tsx","pages/documentation/charts/chart-line/LineGradient.tsx","pages/documentation/charts/chart-line/LineRealtime.tsx","pages/documentation/charts/chart-line/LineDashed.tsx","pages/documentation/charts/chart-line/LineWithMissingData.tsx","pages/documentation/charts/ChartLinePage.tsx","pages/documentation/charts/chart-line/LineZoomableTimeSeries.tsx"],"sourcesContent":["var _linearGradient, _path, _path2;\nfunction _extends() { return _extends = Object.assign ? Object.assign.bind() : function (n) { for (var e = 1; e < arguments.length; e++) { var t = arguments[e]; for (var r in t) ({}).hasOwnProperty.call(t, r) && (n[r] = t[r]); } return n; }, _extends.apply(null, arguments); }\nimport * as React from \"react\";\nfunction SvgInstagram(_ref, svgRef) {\n  let {\n    title,\n    titleId,\n    ...props\n  } = _ref;\n  return /*#__PURE__*/React.createElement(\"svg\", _extends({\n    enableBackground: \"new 0 0 24 24\",\n    height: \"1em\",\n    viewBox: \"0 0 24 24\",\n    width: \"1em\",\n    xmlns: \"http://www.w3.org/2000/svg\",\n    className: \"svg-icon\",\n    ref: svgRef,\n    \"aria-labelledby\": titleId\n  }, props), title ? /*#__PURE__*/React.createElement(\"title\", {\n    id: titleId\n  }, title) : null, _linearGradient || (_linearGradient = /*#__PURE__*/React.createElement(\"linearGradient\", {\n    id: \"SVGID_1_\",\n    gradientTransform: \"matrix(0 -1.982 -1.844 0 -132.522 -51.077)\",\n    gradientUnits: \"userSpaceOnUse\",\n    x1: -37.106,\n    x2: -26.555,\n    y1: -72.705,\n    y2: -84.047\n  }, /*#__PURE__*/React.createElement(\"stop\", {\n    offset: 0,\n    stopColor: \"#fd5\"\n  }), /*#__PURE__*/React.createElement(\"stop\", {\n    offset: 0.5,\n    stopColor: \"#ff543e\"\n  }), /*#__PURE__*/React.createElement(\"stop\", {\n    offset: 1,\n    stopColor: \"#c837ab\"\n  }))), _path || (_path = /*#__PURE__*/React.createElement(\"path\", {\n    d: \"m1.5 1.633c-1.886 1.959-1.5 4.04-1.5 10.362 0 5.25-.916 10.513 3.878 11.752 1.497.385 14.761.385 16.256-.002 1.996-.515 3.62-2.134 3.842-4.957.031-.394.031-13.185-.001-13.587-.236-3.007-2.087-4.74-4.526-5.091-.559-.081-.671-.105-3.539-.11-10.173.005-12.403-.448-14.41 1.633z\",\n    fill: \"url(#SVGID_1_)\"\n  })), _path2 || (_path2 = /*#__PURE__*/React.createElement(\"path\", {\n    d: \"m11.998 3.139c-3.631 0-7.079-.323-8.396 3.057-.544 1.396-.465 3.209-.465 5.805 0 2.278-.073 4.419.465 5.804 1.314 3.382 4.79 3.058 8.394 3.058 3.477 0 7.062.362 8.395-3.058.545-1.41.465-3.196.465-5.804 0-3.462.191-5.697-1.488-7.375-1.7-1.7-3.999-1.487-7.374-1.487zm-.794 1.597c7.574-.012 8.538-.854 8.006 10.843-.189 4.137-3.339 3.683-7.211 3.683-7.06 0-7.263-.202-7.263-7.265 0-7.145.56-7.257 6.468-7.263zm5.524 1.471c-.587 0-1.063.476-1.063 1.063s.476 1.063 1.063 1.063 1.063-.476 1.063-1.063-.476-1.063-1.063-1.063zm-4.73 1.243c-2.513 0-4.55 2.038-4.55 4.551s2.037 4.55 4.55 4.55 4.549-2.037 4.549-4.55-2.036-4.551-4.549-4.551zm0 1.597c3.905 0 3.91 5.908 0 5.908-3.904 0-3.91-5.908 0-5.908z\",\n    fill: \"#fff\"\n  })));\n}\nconst ForwardRef = /*#__PURE__*/React.forwardRef(SvgInstagram);\nexport default __webpack_public_path__ + \"static/media/instagram.b351f7620776efdfce54f22f13c35a4b.svg\";\nexport { ForwardRef as ReactComponent };","import { ApexOptions } from 'apexcharts';\r\n\r\nconst generateDayWiseTimeSeries = (\r\n\tbaseval: number,\r\n\tcount: number,\r\n\tyrange: { min: any; max: any },\r\n\t// @ts-ignore\r\n): ApexOptions['series']['data'][] => {\r\n\tlet i = 0;\r\n\tconst series2 = [];\r\n\twhile (i < count) {\r\n\t\tconst x = baseval;\r\n\t\tconst y = Math.floor(Math.random() * (yrange.max - yrange.min + 1)) + yrange.min;\r\n\r\n\t\tseries2.push([x, y]);\r\n\t\tbaseval += 86400000;\r\n\t\ti += 1;\r\n\t}\r\n\treturn series2;\r\n};\r\n\r\nexport default generateDayWiseTimeSeries;\r\n","import React, { FC } from 'react';\r\nimport Button, { IButtonProps } from '../../components/bootstrap/Button';\r\n\r\ninterface ICommonStoryBtnProps extends IButtonProps {\r\n\tto: string;\r\n}\r\nconst CommonStoryBtn: FC<ICommonStoryBtnProps> = ({ to, ...props }) => {\r\n\treturn (\r\n\t\t<Button\r\n\t\t\tcolor='storybook'\r\n\t\t\ticon='CustomStorybook'\r\n\t\t\ttag='a'\r\n\t\t\ttarget='_blank'\r\n\t\t\tisLight\r\n\t\t\thref={`${process.env.REACT_APP_STORYBOOK_URL}${to}`}\r\n\t\t\t// eslint-disable-next-line react/jsx-props-no-spreading\r\n\t\t\t{...props}>\r\n\t\t\tStorybook\r\n\t\t</Button>\r\n\t);\r\n};\r\n\r\nexport default CommonStoryBtn;\r\n","import React, {\r\n\tChildren,\r\n\tcloneElement,\r\n\tFC,\r\n\tJSXElementConstructor,\r\n\tReactElement,\r\n\tReactNode,\r\n} from 'react';\r\nimport classNames from 'classnames';\r\nimport { NavLink } from 'react-router-dom';\r\nimport TagWrapper from '../TagWrapper';\r\nimport Icon from '../icon/Icon';\r\n\r\ninterface IBreadcrumbItemProps extends Record<string, any> {\r\n\tchildren: ReactNode;\r\n\tariaLabel?: string;\r\n\tclassName?: string;\r\n\ttag?: string;\r\n\tto: string;\r\n\tisActive?: boolean;\r\n\tdivider?: ReactElement<any, string | JSXElementConstructor<any>> | string;\r\n}\r\nexport const BreadcrumbItem: FC<IBreadcrumbItemProps> = ({\r\n\tchildren,\r\n\tariaLabel,\r\n\tclassName,\r\n\ttag = 'li',\r\n\tto,\r\n\tisActive,\r\n\tdivider,\r\n}) => {\r\n\treturn (\r\n\t\t<TagWrapper\r\n\t\t\ttag={tag}\r\n\t\t\tclassName={classNames('breadcrumb-item', { active: isActive }, className)}\r\n\t\t\taria-current={isActive ? 'page' : null}\r\n\t\t\taria-label={ariaLabel || children}>\r\n\t\t\t{divider &&\r\n\t\t\t\ttypeof divider !== 'string' &&\r\n\t\t\t\tcloneElement(divider, {\r\n\t\t\t\t\tclassName: classNames('breadcrumb-icon', divider.props.className),\r\n\t\t\t\t})}\r\n\t\t\t{isActive ? (\r\n\t\t\t\tchildren\r\n\t\t\t) : (\r\n\t\t\t\t<NavLink to={to} aria-label={ariaLabel}>\r\n\t\t\t\t\t{children}\r\n\t\t\t\t</NavLink>\r\n\t\t\t)}\r\n\t\t</TagWrapper>\r\n\t);\r\n};\r\n\r\ninterface IBreadcrumbProps extends Record<string, any> {\r\n\tchildren?: ReactElement<IBreadcrumbItemProps> | ReactElement<IBreadcrumbItemProps>[];\r\n\tlist?: {\r\n\t\ttitle: string;\r\n\t\tto: string;\r\n\t\ttag?: 'div' | 'li';\r\n\t}[];\r\n\ttag?: 'nav' | 'div' | 'section';\r\n\tlistTag?: 'div' | 'ol' | 'ul';\r\n\titemTag?: 'div' | 'li';\r\n\tariaLabel?: string | null;\r\n\tautoActive?: boolean;\r\n\tisToHome?: ReactNode;\r\n\tdivider?: ReactElement<any, string | JSXElementConstructor<any>> | string;\r\n}\r\nconst Breadcrumb: FC<IBreadcrumbProps> = ({\r\n\tchildren,\r\n\tlist,\r\n\ttag = 'nav',\r\n\tlistTag = 'ol',\r\n\titemTag = 'li',\r\n\tariaLabel = 'breadcrumb',\r\n\tautoActive = true,\r\n\tisToHome = <Icon icon='HolidayVillage' />,\r\n\tdivider = <Icon icon='ChevronRight' />,\r\n}) => {\r\n\tconst DIVIDER = divider !== 'string' && divider;\r\n\treturn (\r\n\t\t<TagWrapper\r\n\t\t\ttag={tag}\r\n\t\t\taria-label={ariaLabel}\r\n\t\t\tstyle={\r\n\t\t\t\tdivider\r\n\t\t\t\t\t? {\r\n\t\t\t\t\t\t\t'--bs-breadcrumb-divider':\r\n\t\t\t\t\t\t\t\ttypeof divider === 'string' ? `'${divider}'` : 'none',\r\n\t\t\t\t\t\t}\r\n\t\t\t\t\t: null\r\n\t\t\t}>\r\n\t\t\t<TagWrapper tag={listTag} className='breadcrumb'>\r\n\t\t\t\t{isToHome && (\r\n\t\t\t\t\t<BreadcrumbItem to='/' ariaLabel='Home'>\r\n\t\t\t\t\t\t{isToHome}\r\n\t\t\t\t\t</BreadcrumbItem>\r\n\t\t\t\t)}\r\n\t\t\t\t{list\r\n\t\t\t\t\t? list.map((item, index) => (\r\n\t\t\t\t\t\t\t<BreadcrumbItem\r\n\t\t\t\t\t\t\t\tkey={item.title}\r\n\t\t\t\t\t\t\t\ttag={item.tag || itemTag}\r\n\t\t\t\t\t\t\t\tto={item.to}\r\n\t\t\t\t\t\t\t\tisActive={autoActive && list.length === index + 1}\r\n\t\t\t\t\t\t\t\tdivider={DIVIDER as ReactElement}>\r\n\t\t\t\t\t\t\t\t{item.title}\r\n\t\t\t\t\t\t\t</BreadcrumbItem>\r\n\t\t\t\t\t\t))\r\n\t\t\t\t\t: Children.map(children, (child, index) =>\r\n\t\t\t\t\t\t\t// @ts-ignore\r\n\t\t\t\t\t\t\tcloneElement(child, {\r\n\t\t\t\t\t\t\t\t// @ts-ignore\r\n\t\t\t\t\t\t\t\ttag: child.props.tag || itemTag,\r\n\t\t\t\t\t\t\t\t// @ts-ignore\r\n\t\t\t\t\t\t\t\tisActive: autoActive && children.length === index + 1,\r\n\t\t\t\t\t\t\t\t// @ts-ignore\r\n\t\t\t\t\t\t\t\tdivider: child.props.divider || DIVIDER,\r\n\t\t\t\t\t\t\t}),\r\n\t\t\t\t\t\t)}\r\n\t\t\t</TagWrapper>\r\n\t\t</TagWrapper>\r\n\t);\r\n};\r\n\r\nexport default Breadcrumb;\r\n","import React, { useState } from 'react';\r\nimport Card, {\r\n\tCardActions,\r\n\tCardBody,\r\n\tCardHeader,\r\n\tCardLabel,\r\n\tCardSubTitle,\r\n\tCardTitle,\r\n} from '../../../../components/bootstrap/Card';\r\nimport Chart, { IChartOptions } from '../../../../components/extras/Chart';\r\nimport CommonStoryBtn from '../../../../common/other/CommonStoryBtn';\r\n\r\nconst LineBasic = () => {\r\n\tconst [state] = useState<IChartOptions>({\r\n\t\tseries: [\r\n\t\t\t{\r\n\t\t\t\tname: 'Desktops',\r\n\t\t\t\tdata: [10, 41, 35, 51, 49, 62, 69, 91, 148],\r\n\t\t\t},\r\n\t\t],\r\n\t\toptions: {\r\n\t\t\tchart: {\r\n\t\t\t\theight: 350,\r\n\t\t\t\ttype: 'line',\r\n\t\t\t\tzoom: {\r\n\t\t\t\t\tenabled: false,\r\n\t\t\t\t},\r\n\t\t\t},\r\n\t\t\tdataLabels: {\r\n\t\t\t\tenabled: false,\r\n\t\t\t},\r\n\t\t\tstroke: {\r\n\t\t\t\tcurve: 'straight',\r\n\t\t\t},\r\n\t\t\ttitle: {\r\n\t\t\t\ttext: 'Product Trends by Month',\r\n\t\t\t\talign: 'left',\r\n\t\t\t},\r\n\t\t\tgrid: {\r\n\t\t\t\trow: {\r\n\t\t\t\t\tcolors: ['#f3f3f3', 'transparent'], // takes an array which will be repeated on columns\r\n\t\t\t\t\topacity: 0.5,\r\n\t\t\t\t},\r\n\t\t\t},\r\n\t\t\txaxis: {\r\n\t\t\t\tcategories: ['Jan', 'Feb', 'Mar', 'Apr', 'May', 'Jun', 'Jul', 'Aug', 'Sep'],\r\n\t\t\t},\r\n\t\t},\r\n\t});\r\n\treturn (\r\n\t\t<div className='col-lg-6'>\r\n\t\t\t<Card stretch>\r\n\t\t\t\t<CardHeader>\r\n\t\t\t\t\t<CardLabel icon='ShowChart'>\r\n\t\t\t\t\t\t<CardTitle>\r\n\t\t\t\t\t\t\ttype <small>line</small>\r\n\t\t\t\t\t\t</CardTitle>\r\n\t\t\t\t\t\t<CardSubTitle>Chart</CardSubTitle>\r\n\t\t\t\t\t</CardLabel>\r\n\t\t\t\t\t<CardActions>\r\n\t\t\t\t\t\t<CommonStoryBtn to='/story/extra-chart-line--line-basic' />\r\n\t\t\t\t\t</CardActions>\r\n\t\t\t\t</CardHeader>\r\n\t\t\t\t<CardBody>\r\n\t\t\t\t\t<Chart\r\n\t\t\t\t\t\tseries={state.series}\r\n\t\t\t\t\t\toptions={state.options}\r\n\t\t\t\t\t\ttype={state.options.chart?.type}\r\n\t\t\t\t\t\theight={state.options.chart?.height}\r\n\t\t\t\t\t/>\r\n\t\t\t\t</CardBody>\r\n\t\t\t</Card>\r\n\t\t</div>\r\n\t);\r\n};\r\n\r\nexport default LineBasic;\r\n","import React, { useState } from 'react';\r\nimport Card, {\r\n\tCardBody,\r\n\tCardHeader,\r\n\tCardLabel,\r\n\tCardSubTitle,\r\n\tCardTitle,\r\n} from '../../../../components/bootstrap/Card';\r\nimport Chart, { IChartOptions } from '../../../../components/extras/Chart';\r\n\r\nconst LineWithLabel = () => {\r\n\tconst [state] = useState<IChartOptions>({\r\n\t\tseries: [\r\n\t\t\t{\r\n\t\t\t\tname: 'High - 2013',\r\n\t\t\t\tdata: [28, 29, 33, 36, 32, 32, 33],\r\n\t\t\t},\r\n\t\t\t{\r\n\t\t\t\tname: 'Low - 2013',\r\n\t\t\t\tdata: [12, 11, 14, 18, 17, 13, 13],\r\n\t\t\t},\r\n\t\t],\r\n\t\toptions: {\r\n\t\t\tchart: {\r\n\t\t\t\theight: 350,\r\n\t\t\t\ttype: 'line',\r\n\t\t\t\tdropShadow: {\r\n\t\t\t\t\tenabled: true,\r\n\t\t\t\t\tcolor: '#000',\r\n\t\t\t\t\ttop: 18,\r\n\t\t\t\t\tleft: 7,\r\n\t\t\t\t\tblur: 10,\r\n\t\t\t\t\topacity: 0.2,\r\n\t\t\t\t},\r\n\t\t\t\ttoolbar: {\r\n\t\t\t\t\tshow: false,\r\n\t\t\t\t},\r\n\t\t\t},\r\n\t\t\ttooltip: {\r\n\t\t\t\ttheme: 'dark',\r\n\t\t\t},\r\n\t\t\tdataLabels: {\r\n\t\t\t\tenabled: true,\r\n\t\t\t},\r\n\t\t\tstroke: {\r\n\t\t\t\tcurve: 'smooth',\r\n\t\t\t},\r\n\t\t\ttitle: {\r\n\t\t\t\ttext: 'Average High & Low Temperature',\r\n\t\t\t\talign: 'left',\r\n\t\t\t},\r\n\t\t\tgrid: {\r\n\t\t\t\tborderColor: '#e7e7e7',\r\n\t\t\t\trow: {\r\n\t\t\t\t\tcolors: ['#f3f3f3', 'transparent'], // takes an array which will be repeated on columns\r\n\t\t\t\t\topacity: 0.5,\r\n\t\t\t\t},\r\n\t\t\t},\r\n\t\t\tmarkers: {\r\n\t\t\t\tsize: 1,\r\n\t\t\t},\r\n\t\t\txaxis: {\r\n\t\t\t\tcategories: ['Jan', 'Feb', 'Mar', 'Apr', 'May', 'Jun', 'Jul'],\r\n\t\t\t\ttitle: {\r\n\t\t\t\t\ttext: 'Month',\r\n\t\t\t\t},\r\n\t\t\t},\r\n\t\t\tyaxis: {\r\n\t\t\t\ttitle: {\r\n\t\t\t\t\ttext: 'Temperature',\r\n\t\t\t\t},\r\n\t\t\t\tmin: 5,\r\n\t\t\t\tmax: 40,\r\n\t\t\t},\r\n\t\t\tlegend: {\r\n\t\t\t\tposition: 'top',\r\n\t\t\t\thorizontalAlign: 'right',\r\n\t\t\t\tfloating: true,\r\n\t\t\t\toffsetY: -25,\r\n\t\t\t\toffsetX: -5,\r\n\t\t\t},\r\n\t\t},\r\n\t});\r\n\treturn (\r\n\t\t<div className='col-lg-6'>\r\n\t\t\t<Card stretch>\r\n\t\t\t\t<CardHeader>\r\n\t\t\t\t\t<CardLabel icon='ShowChart' iconColor='warning'>\r\n\t\t\t\t\t\t<CardTitle>\r\n\t\t\t\t\t\t\ttype <small>line</small>\r\n\t\t\t\t\t\t</CardTitle>\r\n\t\t\t\t\t\t<CardSubTitle>Chart</CardSubTitle>\r\n\t\t\t\t\t</CardLabel>\r\n\t\t\t\t</CardHeader>\r\n\t\t\t\t<CardBody>\r\n\t\t\t\t\t<Chart\r\n\t\t\t\t\t\tseries={state.series}\r\n\t\t\t\t\t\toptions={state.options}\r\n\t\t\t\t\t\ttype={state.options.chart?.type}\r\n\t\t\t\t\t\theight={state.options.chart?.height}\r\n\t\t\t\t\t/>\r\n\t\t\t\t</CardBody>\r\n\t\t\t</Card>\r\n\t\t</div>\r\n\t);\r\n};\r\n\r\nexport default LineWithLabel;\r\n","import React, { useState } from 'react';\r\nimport Card, {\r\n\tCardBody,\r\n\tCardHeader,\r\n\tCardLabel,\r\n\tCardSubTitle,\r\n\tCardTitle,\r\n} from '../../../../components/bootstrap/Card';\r\nimport Chart, { IChartOptions } from '../../../../components/extras/Chart';\r\nimport { series } from '../../../../common/data/chartDummyData';\r\nimport Instagram from '../../../../assets/img/instagram.svg';\r\n\r\nconst LineWithAnnotations = () => {\r\n\tconst [state] = useState<IChartOptions>({\r\n\t\tseries: [\r\n\t\t\t{\r\n\t\t\t\tdata: series.monthDataSeries1.prices,\r\n\t\t\t},\r\n\t\t],\r\n\t\toptions: {\r\n\t\t\tannotations: {\r\n\t\t\t\tyaxis: [\r\n\t\t\t\t\t{\r\n\t\t\t\t\t\ty: 8200,\r\n\t\t\t\t\t\tborderColor: process.env.REACT_APP_SUCCESS_COLOR,\r\n\t\t\t\t\t\tlabel: {\r\n\t\t\t\t\t\t\tborderColor: process.env.REACT_APP_SUCCESS_COLOR,\r\n\t\t\t\t\t\t\tstyle: {\r\n\t\t\t\t\t\t\t\tcolor: '#fff',\r\n\t\t\t\t\t\t\t\tbackground: process.env.REACT_APP_SUCCESS_COLOR,\r\n\t\t\t\t\t\t\t},\r\n\t\t\t\t\t\t\ttext: 'Support',\r\n\t\t\t\t\t\t},\r\n\t\t\t\t\t},\r\n\t\t\t\t\t{\r\n\t\t\t\t\t\ty: 8600,\r\n\t\t\t\t\t\ty2: 9000,\r\n\t\t\t\t\t\tborderColor: '#000',\r\n\t\t\t\t\t\tfillColor: process.env.REACT_APP_WARNING_COLOR,\r\n\t\t\t\t\t\topacity: 0.2,\r\n\t\t\t\t\t\tlabel: {\r\n\t\t\t\t\t\t\tborderColor: process.env.REACT_APP_WARNING_COLOR,\r\n\t\t\t\t\t\t\tstyle: {\r\n\t\t\t\t\t\t\t\tfontSize: '10px',\r\n\t\t\t\t\t\t\t\tcolor: '#333',\r\n\t\t\t\t\t\t\t\tbackground: process.env.REACT_APP_WARNING_COLOR,\r\n\t\t\t\t\t\t\t},\r\n\t\t\t\t\t\t\ttext: 'Y-axis range',\r\n\t\t\t\t\t\t},\r\n\t\t\t\t\t},\r\n\t\t\t\t],\r\n\t\t\t\txaxis: [\r\n\t\t\t\t\t{\r\n\t\t\t\t\t\tx: new Date('23 Nov 2017').getTime(),\r\n\t\t\t\t\t\tstrokeDashArray: 0,\r\n\t\t\t\t\t\tborderColor: process.env.REACT_APP_PRIMARY_COLOR,\r\n\t\t\t\t\t\tlabel: {\r\n\t\t\t\t\t\t\tborderColor: process.env.REACT_APP_PRIMARY_COLOR,\r\n\t\t\t\t\t\t\tstyle: {\r\n\t\t\t\t\t\t\t\tcolor: '#fff',\r\n\t\t\t\t\t\t\t\tbackground: process.env.REACT_APP_PRIMARY_COLOR,\r\n\t\t\t\t\t\t\t},\r\n\t\t\t\t\t\t\ttext: 'Anno Test',\r\n\t\t\t\t\t\t},\r\n\t\t\t\t\t},\r\n\t\t\t\t\t{\r\n\t\t\t\t\t\tx: new Date('26 Nov 2017').getTime(),\r\n\t\t\t\t\t\tx2: new Date('28 Nov 2017').getTime(),\r\n\t\t\t\t\t\tfillColor: process.env.REACT_APP_SUCCESS_COLOR,\r\n\t\t\t\t\t\topacity: 0.4,\r\n\t\t\t\t\t\tlabel: {\r\n\t\t\t\t\t\t\tborderColor: process.env.REACT_APP_SUCCESS_COLOR,\r\n\t\t\t\t\t\t\tstyle: {\r\n\t\t\t\t\t\t\t\tfontSize: '10px',\r\n\t\t\t\t\t\t\t\tcolor: '#fff',\r\n\t\t\t\t\t\t\t\tbackground: process.env.REACT_APP_SUCCESS_COLOR,\r\n\t\t\t\t\t\t\t},\r\n\t\t\t\t\t\t\toffsetY: -10,\r\n\t\t\t\t\t\t\ttext: 'X-axis range',\r\n\t\t\t\t\t\t},\r\n\t\t\t\t\t},\r\n\t\t\t\t],\r\n\t\t\t\tpoints: [\r\n\t\t\t\t\t{\r\n\t\t\t\t\t\tx: new Date('01 Dec 2017').getTime(),\r\n\t\t\t\t\t\ty: 8607.55,\r\n\t\t\t\t\t\tmarker: {\r\n\t\t\t\t\t\t\tsize: 8,\r\n\t\t\t\t\t\t\tfillColor: '#fff',\r\n\t\t\t\t\t\t\tstrokeColor: 'red',\r\n\t\t\t\t\t\t\t// radius: 2,\r\n\t\t\t\t\t\t\tcssClass: 'apexcharts-custom-class',\r\n\t\t\t\t\t\t},\r\n\t\t\t\t\t\tlabel: {\r\n\t\t\t\t\t\t\tborderColor: process.env.REACT_APP_DANGER_COLOR,\r\n\t\t\t\t\t\t\toffsetY: 0,\r\n\t\t\t\t\t\t\tstyle: {\r\n\t\t\t\t\t\t\t\tcolor: '#fff',\r\n\t\t\t\t\t\t\t\tbackground: process.env.REACT_APP_DANGER_COLOR,\r\n\t\t\t\t\t\t\t},\r\n\t\t\t\t\t\t\ttext: 'Point Annotation',\r\n\t\t\t\t\t\t},\r\n\t\t\t\t\t},\r\n\t\t\t\t\t{\r\n\t\t\t\t\t\tx: new Date('08 Dec 2017').getTime(),\r\n\t\t\t\t\t\ty: 9340.85,\r\n\t\t\t\t\t\tmarker: {\r\n\t\t\t\t\t\t\tsize: 0,\r\n\t\t\t\t\t\t},\r\n\t\t\t\t\t\timage: {\r\n\t\t\t\t\t\t\tpath: Instagram,\r\n\t\t\t\t\t\t},\r\n\t\t\t\t\t},\r\n\t\t\t\t],\r\n\t\t\t},\r\n\t\t\tdataLabels: {\r\n\t\t\t\tenabled: false,\r\n\t\t\t},\r\n\t\t\tstroke: {\r\n\t\t\t\tcurve: 'straight',\r\n\t\t\t},\r\n\t\t\tgrid: {\r\n\t\t\t\tpadding: {\r\n\t\t\t\t\tright: 30,\r\n\t\t\t\t\tleft: 20,\r\n\t\t\t\t},\r\n\t\t\t},\r\n\t\t\ttitle: {\r\n\t\t\t\ttext: 'Line with Annotations',\r\n\t\t\t\talign: 'left',\r\n\t\t\t},\r\n\t\t\tlabels: series.monthDataSeries1.dates,\r\n\t\t\txaxis: {\r\n\t\t\t\ttype: 'datetime',\r\n\t\t\t},\r\n\t\t},\r\n\t});\r\n\treturn (\r\n\t\t<div className='col-lg-12'>\r\n\t\t\t<Card stretch>\r\n\t\t\t\t<CardHeader>\r\n\t\t\t\t\t<CardLabel icon='ShowChart' iconColor='success'>\r\n\t\t\t\t\t\t<CardTitle>\r\n\t\t\t\t\t\t\ttype <small>line</small>\r\n\t\t\t\t\t\t</CardTitle>\r\n\t\t\t\t\t\t<CardSubTitle>Chart</CardSubTitle>\r\n\t\t\t\t\t</CardLabel>\r\n\t\t\t\t</CardHeader>\r\n\t\t\t\t<CardBody>\r\n\t\t\t\t\t<Chart series={state.series} options={state.options} type='line' height={350} />\r\n\t\t\t\t</CardBody>\r\n\t\t\t</Card>\r\n\t\t</div>\r\n\t);\r\n};\r\n\r\nexport default LineWithAnnotations;\r\n","import React, { useState } from 'react';\r\nimport Card, {\r\n\tCardBody,\r\n\tCardHeader,\r\n\tCardLabel,\r\n\tCardSubTitle,\r\n\tCardTitle,\r\n} from '../../../../components/bootstrap/Card';\r\nimport Chart, { IChartOptions } from '../../../../components/extras/Chart';\r\nimport generateDayWiseTimeSeries from '../../../../common/function/generateDayWiseTimeSeries';\r\n\r\nconst LineSyncingOptions = () => {\r\n\tconst syncingChartsOptions: IChartOptions['options'] = {\r\n\t\tchart: {\r\n\t\t\theight: 160,\r\n\t\t},\r\n\t\tdataLabels: {\r\n\t\t\tenabled: false,\r\n\t\t},\r\n\t\tstroke: {\r\n\t\t\tcurve: 'straight',\r\n\t\t},\r\n\t\ttoolbar: {\r\n\t\t\ttools: {\r\n\t\t\t\tselection: false,\r\n\t\t\t},\r\n\t\t},\r\n\t\tmarkers: {\r\n\t\t\tsize: 6,\r\n\t\t\thover: {\r\n\t\t\t\tsize: 10,\r\n\t\t\t},\r\n\t\t},\r\n\t\ttooltip: {\r\n\t\t\tfollowCursor: false,\r\n\t\t\ttheme: 'dark',\r\n\t\t},\r\n\t\tgrid: {\r\n\t\t\t// @ts-ignore\r\n\t\t\tclipMarkers: false,\r\n\t\t},\r\n\t\tyaxis: {\r\n\t\t\ttickAmount: 2,\r\n\t\t},\r\n\t\txaxis: {\r\n\t\t\ttype: 'datetime',\r\n\t\t},\r\n\t};\r\n\tconst [state] = useState<IChartOptions>({\r\n\t\tseries: [\r\n\t\t\t{\r\n\t\t\t\tdata: generateDayWiseTimeSeries(new Date('11 Feb 2017').getTime(), 20, {\r\n\t\t\t\t\tmin: 10,\r\n\t\t\t\t\tmax: 60,\r\n\t\t\t\t}),\r\n\t\t\t},\r\n\t\t],\r\n\t\toptions: {\r\n\t\t\t...syncingChartsOptions,\r\n\t\t\tchart: {\r\n\t\t\t\tid: 'fb',\r\n\t\t\t\tgroup: 'social',\r\n\t\t\t\ttype: 'line',\r\n\t\t\t\theight: 160,\r\n\t\t\t},\r\n\t\t\tcolors: ['#008FFB'],\r\n\t\t\tyaxis: {\r\n\t\t\t\tlabels: {\r\n\t\t\t\t\tminWidth: 40,\r\n\t\t\t\t},\r\n\t\t\t},\r\n\t\t},\r\n\r\n\t\tseriesLine2: [\r\n\t\t\t{\r\n\t\t\t\tdata: generateDayWiseTimeSeries(new Date('11 Feb 2017').getTime(), 20, {\r\n\t\t\t\t\tmin: 10,\r\n\t\t\t\t\tmax: 30,\r\n\t\t\t\t}),\r\n\t\t\t},\r\n\t\t],\r\n\t\toptionsLine2: {\r\n\t\t\t...syncingChartsOptions,\r\n\t\t\tchart: {\r\n\t\t\t\tid: 'tw',\r\n\t\t\t\tgroup: 'social',\r\n\t\t\t\ttype: 'line',\r\n\t\t\t\theight: 160,\r\n\t\t\t},\r\n\t\t\tcolors: [process.env.REACT_APP_WARNING_COLOR],\r\n\t\t\tyaxis: {\r\n\t\t\t\tlabels: {\r\n\t\t\t\t\tminWidth: 40,\r\n\t\t\t\t},\r\n\t\t\t},\r\n\t\t},\r\n\r\n\t\tseriesArea: [\r\n\t\t\t{\r\n\t\t\t\tdata: generateDayWiseTimeSeries(new Date('11 Feb 2017').getTime(), 20, {\r\n\t\t\t\t\tmin: 10,\r\n\t\t\t\t\tmax: 60,\r\n\t\t\t\t}),\r\n\t\t\t},\r\n\t\t],\r\n\t\toptionsArea: {\r\n\t\t\t...syncingChartsOptions,\r\n\t\t\tchart: {\r\n\t\t\t\tid: 'yt',\r\n\t\t\t\tgroup: 'social',\r\n\t\t\t\ttype: 'area',\r\n\t\t\t\theight: 160,\r\n\t\t\t},\r\n\t\t\tcolors: [process.env.REACT_APP_SUCCESS_COLOR],\r\n\t\t\tyaxis: {\r\n\t\t\t\tlabels: {\r\n\t\t\t\t\tminWidth: 40,\r\n\t\t\t\t},\r\n\t\t\t},\r\n\t\t},\r\n\t});\r\n\treturn (\r\n\t\t<div className='col-lg-6'>\r\n\t\t\t<Card stretch>\r\n\t\t\t\t<CardHeader>\r\n\t\t\t\t\t<CardLabel icon='ShowChart' iconColor='info'>\r\n\t\t\t\t\t\t<CardTitle>\r\n\t\t\t\t\t\t\ttype <small>line & area</small>\r\n\t\t\t\t\t\t</CardTitle>\r\n\t\t\t\t\t\t<CardSubTitle>Chart</CardSubTitle>\r\n\t\t\t\t\t</CardLabel>\r\n\t\t\t\t</CardHeader>\r\n\t\t\t\t<CardBody>\r\n\t\t\t\t\t<Chart options={state.options} series={state.series} type='line' height={160} />\r\n\t\t\t\t\t<Chart\r\n\t\t\t\t\t\toptions={state.optionsLine2}\r\n\t\t\t\t\t\tseries={state.seriesLine2}\r\n\t\t\t\t\t\ttype='line'\r\n\t\t\t\t\t\theight={160}\r\n\t\t\t\t\t/>\r\n\t\t\t\t\t<Chart\r\n\t\t\t\t\t\toptions={state.optionsArea}\r\n\t\t\t\t\t\tseries={state.seriesArea}\r\n\t\t\t\t\t\ttype='area'\r\n\t\t\t\t\t\theight={160}\r\n\t\t\t\t\t/>\r\n\t\t\t\t</CardBody>\r\n\t\t\t</Card>\r\n\t\t</div>\r\n\t);\r\n};\r\n\r\nexport default LineSyncingOptions;\r\n","import React, { useState } from 'react';\r\nimport Card, {\r\n\tCardBody,\r\n\tCardHeader,\r\n\tCardLabel,\r\n\tCardSubTitle,\r\n\tCardTitle,\r\n} from '../../../../components/bootstrap/Card';\r\nimport Chart, { IChartOptions } from '../../../../components/extras/Chart';\r\nimport generateDayWiseTimeSeries from '../../../../common/function/generateDayWiseTimeSeries';\r\n\r\nconst LineBrush = () => {\r\n\tconst brushData = generateDayWiseTimeSeries(new Date('11 Feb 2017').getTime(), 185, {\r\n\t\tmin: 30,\r\n\t\tmax: 90,\r\n\t});\r\n\tconst [state] = useState<IChartOptions>({\r\n\t\tseries: [\r\n\t\t\t{\r\n\t\t\t\tdata: brushData,\r\n\t\t\t},\r\n\t\t],\r\n\t\toptions: {\r\n\t\t\tchart: {\r\n\t\t\t\tid: 'chart2',\r\n\t\t\t\ttype: 'line',\r\n\t\t\t\theight: 230,\r\n\t\t\t\ttoolbar: {\r\n\t\t\t\t\tautoSelected: 'pan',\r\n\t\t\t\t\tshow: false,\r\n\t\t\t\t},\r\n\t\t\t},\r\n\t\t\tcolors: [process.env.REACT_APP_PRIMARY_COLOR],\r\n\t\t\tstroke: {\r\n\t\t\t\twidth: 3,\r\n\t\t\t},\r\n\t\t\tdataLabels: {\r\n\t\t\t\tenabled: false,\r\n\t\t\t},\r\n\t\t\tfill: {\r\n\t\t\t\topacity: 1,\r\n\t\t\t},\r\n\t\t\tmarkers: {\r\n\t\t\t\tsize: 0,\r\n\t\t\t},\r\n\t\t\txaxis: {\r\n\t\t\t\ttype: 'datetime',\r\n\t\t\t},\r\n\t\t},\r\n\r\n\t\tseriesLine: [\r\n\t\t\t{\r\n\t\t\t\tdata: brushData,\r\n\t\t\t},\r\n\t\t],\r\n\t\toptionsLine: {\r\n\t\t\tchart: {\r\n\t\t\t\tid: 'chart1',\r\n\t\t\t\theight: 130,\r\n\t\t\t\ttype: 'area',\r\n\t\t\t\tbrush: {\r\n\t\t\t\t\ttarget: 'chart2',\r\n\t\t\t\t\tenabled: true,\r\n\t\t\t\t},\r\n\t\t\t\tselection: {\r\n\t\t\t\t\tenabled: true,\r\n\t\t\t\t\txaxis: {\r\n\t\t\t\t\t\tmin: new Date('19 Jun 2017').getTime(),\r\n\t\t\t\t\t\tmax: new Date('14 Aug 2017').getTime(),\r\n\t\t\t\t\t},\r\n\t\t\t\t},\r\n\t\t\t},\r\n\t\t\tcolors: [process.env.REACT_APP_INFO_COLOR],\r\n\t\t\tfill: {\r\n\t\t\t\ttype: 'gradient',\r\n\t\t\t\tgradient: {\r\n\t\t\t\t\topacityFrom: 0.91,\r\n\t\t\t\t\topacityTo: 0.1,\r\n\t\t\t\t},\r\n\t\t\t},\r\n\t\t\txaxis: {\r\n\t\t\t\ttype: 'datetime',\r\n\t\t\t\ttooltip: {\r\n\t\t\t\t\tenabled: false,\r\n\t\t\t\t},\r\n\t\t\t},\r\n\t\t\tyaxis: {\r\n\t\t\t\ttickAmount: 2,\r\n\t\t\t},\r\n\t\t},\r\n\t});\r\n\treturn (\r\n\t\t<div className='col-lg-6'>\r\n\t\t\t<Card stretch>\r\n\t\t\t\t<CardHeader>\r\n\t\t\t\t\t<CardLabel icon='ShowChart' iconColor='secondary'>\r\n\t\t\t\t\t\t<CardTitle>\r\n\t\t\t\t\t\t\ttype <small>line & area</small>\r\n\t\t\t\t\t\t</CardTitle>\r\n\t\t\t\t\t\t<CardSubTitle>Chart</CardSubTitle>\r\n\t\t\t\t\t</CardLabel>\r\n\t\t\t\t</CardHeader>\r\n\t\t\t\t<CardBody>\r\n\t\t\t\t\t<Chart options={state.options} series={state.series} type='line' height={230} />\r\n\t\t\t\t\t<Chart\r\n\t\t\t\t\t\toptions={state.optionsLine}\r\n\t\t\t\t\t\tseries={state.seriesLine}\r\n\t\t\t\t\t\ttype='area'\r\n\t\t\t\t\t\theight={130}\r\n\t\t\t\t\t\tstyle={{\r\n\t\t\t\t\t\t\tposition: 'relative',\r\n\t\t\t\t\t\t\tmarginTop: -40,\r\n\t\t\t\t\t\t}}\r\n\t\t\t\t\t/>\r\n\t\t\t\t</CardBody>\r\n\t\t\t</Card>\r\n\t\t</div>\r\n\t);\r\n};\r\n\r\nexport default LineBrush;\r\n","import React, { useState } from 'react';\r\nimport Card, {\r\n\tCardBody,\r\n\tCardHeader,\r\n\tCardLabel,\r\n\tCardSubTitle,\r\n\tCardTitle,\r\n} from '../../../../components/bootstrap/Card';\r\nimport Chart, { IChartOptions } from '../../../../components/extras/Chart';\r\n\r\nconst LineStep = () => {\r\n\tconst [state] = useState<IChartOptions>({\r\n\t\tseries: [\r\n\t\t\t{\r\n\t\t\t\tdata: [34, 44, 54, 21, 12, 43, 33, 23, 66, 66, 58],\r\n\t\t\t},\r\n\t\t],\r\n\t\toptions: {\r\n\t\t\tchart: {\r\n\t\t\t\ttype: 'line',\r\n\t\t\t\theight: 350,\r\n\t\t\t},\r\n\t\t\tstroke: {\r\n\t\t\t\tcurve: 'stepline',\r\n\t\t\t},\r\n\t\t\tdataLabels: {\r\n\t\t\t\tenabled: false,\r\n\t\t\t},\r\n\t\t\ttitle: {\r\n\t\t\t\ttext: 'Stepline Chart',\r\n\t\t\t\talign: 'left',\r\n\t\t\t},\r\n\t\t\tmarkers: {\r\n\t\t\t\thover: {\r\n\t\t\t\t\tsizeOffset: 4,\r\n\t\t\t\t},\r\n\t\t\t},\r\n\t\t},\r\n\t});\r\n\treturn (\r\n\t\t<div className='col-lg-6'>\r\n\t\t\t<Card stretch>\r\n\t\t\t\t<CardHeader>\r\n\t\t\t\t\t<CardLabel icon='ShowChart' iconColor='secondary'>\r\n\t\t\t\t\t\t<CardTitle>\r\n\t\t\t\t\t\t\ttype <small>line</small>\r\n\t\t\t\t\t\t</CardTitle>\r\n\t\t\t\t\t\t<CardSubTitle>Chart</CardSubTitle>\r\n\t\t\t\t\t</CardLabel>\r\n\t\t\t\t</CardHeader>\r\n\t\t\t\t<CardBody>\r\n\t\t\t\t\t<Chart options={state.options} series={state.series} type='line' height={350} />\r\n\t\t\t\t</CardBody>\r\n\t\t\t</Card>\r\n\t\t</div>\r\n\t);\r\n};\r\n\r\nexport default LineStep;\r\n","import React, { useState } from 'react';\r\nimport Card, {\r\n\tCardBody,\r\n\tCardHeader,\r\n\tCardLabel,\r\n\tCardSubTitle,\r\n\tCardTitle,\r\n} from '../../../../components/bootstrap/Card';\r\nimport Chart, { IChartOptions } from '../../../../components/extras/Chart';\r\n\r\nconst LineGradient = () => {\r\n\tconst [state] = useState<IChartOptions>({\r\n\t\tseries: [\r\n\t\t\t{\r\n\t\t\t\tname: 'Likes',\r\n\t\t\t\tdata: [4, 3, 10, 9, 29, 19, 22, 9, 12, 7, 19, 5, 13, 9, 17, 2, 7, 5],\r\n\t\t\t},\r\n\t\t],\r\n\t\toptions: {\r\n\t\t\tchart: {\r\n\t\t\t\theight: 350,\r\n\t\t\t\ttype: 'line',\r\n\t\t\t},\r\n\t\t\ttooltip: {\r\n\t\t\t\ttheme: 'dark',\r\n\t\t\t},\r\n\t\t\tstroke: {\r\n\t\t\t\twidth: 7,\r\n\t\t\t\tcurve: 'smooth',\r\n\t\t\t},\r\n\t\t\txaxis: {\r\n\t\t\t\ttype: 'datetime',\r\n\t\t\t\tcategories: [\r\n\t\t\t\t\t'1/11/2000',\r\n\t\t\t\t\t'2/11/2000',\r\n\t\t\t\t\t'3/11/2000',\r\n\t\t\t\t\t'4/11/2000',\r\n\t\t\t\t\t'5/11/2000',\r\n\t\t\t\t\t'6/11/2000',\r\n\t\t\t\t\t'7/11/2000',\r\n\t\t\t\t\t'8/11/2000',\r\n\t\t\t\t\t'9/11/2000',\r\n\t\t\t\t\t'10/11/2000',\r\n\t\t\t\t\t'11/11/2000',\r\n\t\t\t\t\t'12/11/2000',\r\n\t\t\t\t\t'1/11/2001',\r\n\t\t\t\t\t'2/11/2001',\r\n\t\t\t\t\t'3/11/2001',\r\n\t\t\t\t\t'4/11/2001',\r\n\t\t\t\t\t'5/11/2001',\r\n\t\t\t\t\t'6/11/2001',\r\n\t\t\t\t],\r\n\t\t\t\ttickAmount: 10,\r\n\t\t\t\tlabels: {\r\n\t\t\t\t\tformatter(value, timestamp, opts) {\r\n\t\t\t\t\t\treturn opts.dateFormatter(\r\n\t\t\t\t\t\t\tnew Date(typeof timestamp === 'number' ? timestamp : ''),\r\n\t\t\t\t\t\t\t'dd MMM',\r\n\t\t\t\t\t\t);\r\n\t\t\t\t\t},\r\n\t\t\t\t},\r\n\t\t\t},\r\n\t\t\ttitle: {\r\n\t\t\t\ttext: 'Social Media',\r\n\t\t\t\talign: 'left',\r\n\t\t\t\tstyle: {\r\n\t\t\t\t\tfontSize: '16px',\r\n\t\t\t\t\tcolor: '#666',\r\n\t\t\t\t},\r\n\t\t\t},\r\n\t\t\tfill: {\r\n\t\t\t\ttype: 'gradient',\r\n\t\t\t\tgradient: {\r\n\t\t\t\t\tshade: 'dark',\r\n\t\t\t\t\tgradientToColors: [String(process.env.REACT_APP_SECONDARY_COLOR)],\r\n\t\t\t\t\tshadeIntensity: 1,\r\n\t\t\t\t\ttype: 'horizontal',\r\n\t\t\t\t\topacityFrom: 1,\r\n\t\t\t\t\topacityTo: 1,\r\n\t\t\t\t\tstops: [0, 100, 100, 100],\r\n\t\t\t\t},\r\n\t\t\t},\r\n\t\t\tmarkers: {\r\n\t\t\t\tsize: 4,\r\n\t\t\t\tcolors: ['#FFA41B'],\r\n\t\t\t\tstrokeColors: '#fff',\r\n\t\t\t\tstrokeWidth: 2,\r\n\t\t\t\thover: {\r\n\t\t\t\t\tsize: 7,\r\n\t\t\t\t},\r\n\t\t\t},\r\n\t\t\tyaxis: {\r\n\t\t\t\tmin: -10,\r\n\t\t\t\tmax: 40,\r\n\t\t\t\ttitle: {\r\n\t\t\t\t\ttext: 'Engagement',\r\n\t\t\t\t},\r\n\t\t\t},\r\n\t\t},\r\n\t});\r\n\treturn (\r\n\t\t<div className='col-lg-6'>\r\n\t\t\t<Card stretch>\r\n\t\t\t\t<CardHeader>\r\n\t\t\t\t\t<CardLabel icon='ShowChart' iconColor='secondary'>\r\n\t\t\t\t\t\t<CardTitle>\r\n\t\t\t\t\t\t\ttype <small>line</small>\r\n\t\t\t\t\t\t</CardTitle>\r\n\t\t\t\t\t\t<CardSubTitle>Chart</CardSubTitle>\r\n\t\t\t\t\t</CardLabel>\r\n\t\t\t\t</CardHeader>\r\n\t\t\t\t<CardBody>\r\n\t\t\t\t\t<Chart options={state.options} series={state.series} type='line' height={350} />\r\n\t\t\t\t</CardBody>\r\n\t\t\t</Card>\r\n\t\t</div>\r\n\t);\r\n};\r\n\r\nexport default LineGradient;\r\n","import React, { useEffect, useState } from 'react';\r\nimport Card, {\r\n\tCardBody,\r\n\tCardHeader,\r\n\tCardLabel,\r\n\tCardSubTitle,\r\n\tCardTitle,\r\n} from '../../../../components/bootstrap/Card';\r\nimport Chart, { IChartOptions } from '../../../../components/extras/Chart';\r\n\r\nconst LineRealtime = () => {\r\n\tlet lastDate = 0;\r\n\tconst data: any[] = [];\r\n\tconst TICK_INTERVAL = 86400000;\r\n\tconst X_AXIS_RANGE = 777600000;\r\n\tconst getDayWiseTimeSeries = (\r\n\t\tbaseval: number,\r\n\t\tcount: number,\r\n\t\tyrange: { min: any; max: any },\r\n\t) => {\r\n\t\tlet i = 0;\r\n\t\twhile (i < count) {\r\n\t\t\tconst x = baseval;\r\n\t\t\tconst y = Math.floor(Math.random() * (yrange.max - yrange.min + 1)) + yrange.min;\r\n\r\n\t\t\tdata.push({\r\n\t\t\t\tx,\r\n\t\t\t\ty,\r\n\t\t\t});\r\n\t\t\tlastDate = baseval;\r\n\t\t\tbaseval += TICK_INTERVAL;\r\n\t\t\ti += 1;\r\n\t\t}\r\n\t};\r\n\tgetDayWiseTimeSeries(new Date('11 Feb 2017 GMT').getTime(), 10, {\r\n\t\tmin: 10,\r\n\t\tmax: 90,\r\n\t});\r\n\tconst getNewSeries = (baseval: number, yrange: { min: any; max: any }) => {\r\n\t\tconst newDate = baseval + TICK_INTERVAL;\r\n\t\tlastDate = newDate;\r\n\r\n\t\tfor (let i = 0; i < data.length - 10; i += 1) {\r\n\t\t\t// IMPORTANT\r\n\t\t\t// we reset the x and y of the data which is out of drawing area\r\n\t\t\t// to prevent memory leaks\r\n\t\t\tdata[i].x = newDate - X_AXIS_RANGE - TICK_INTERVAL;\r\n\t\t\tdata[i].y = 0;\r\n\t\t}\r\n\r\n\t\tdata.push({\r\n\t\t\tx: newDate,\r\n\t\t\ty: Math.floor(Math.random() * (yrange.max - yrange.min + 1)) + yrange.min,\r\n\t\t});\r\n\t};\r\n\tconst [state, setState] = useState<IChartOptions>({\r\n\t\tseries: [\r\n\t\t\t{\r\n\t\t\t\tdata: data.slice(),\r\n\t\t\t},\r\n\t\t],\r\n\t\toptions: {\r\n\t\t\tchart: {\r\n\t\t\t\tid: 'realtime',\r\n\t\t\t\theight: 350,\r\n\t\t\t\ttype: 'line',\r\n\t\t\t\tanimations: {\r\n\t\t\t\t\tenabled: true,\r\n\t\t\t\t\teasing: 'linear',\r\n\t\t\t\t\tdynamicAnimation: {\r\n\t\t\t\t\t\tspeed: 1000,\r\n\t\t\t\t\t},\r\n\t\t\t\t},\r\n\t\t\t\ttoolbar: {\r\n\t\t\t\t\tshow: false,\r\n\t\t\t\t},\r\n\t\t\t\tzoom: {\r\n\t\t\t\t\tenabled: false,\r\n\t\t\t\t},\r\n\t\t\t},\r\n\t\t\tdataLabels: {\r\n\t\t\t\tenabled: false,\r\n\t\t\t},\r\n\t\t\tstroke: {\r\n\t\t\t\tcurve: 'smooth',\r\n\t\t\t},\r\n\t\t\ttitle: {\r\n\t\t\t\ttext: 'Dynamic Updating Chart',\r\n\t\t\t\talign: 'left',\r\n\t\t\t},\r\n\t\t\tmarkers: {\r\n\t\t\t\tsize: 0,\r\n\t\t\t},\r\n\t\t\txaxis: {\r\n\t\t\t\ttype: 'datetime',\r\n\t\t\t\trange: X_AXIS_RANGE,\r\n\t\t\t},\r\n\t\t\tyaxis: {\r\n\t\t\t\tmax: 100,\r\n\t\t\t},\r\n\t\t\tlegend: {\r\n\t\t\t\tshow: false,\r\n\t\t\t},\r\n\t\t},\r\n\t});\r\n\tuseEffect(() => {\r\n\t\twindow.setInterval(() => {\r\n\t\t\tgetNewSeries(lastDate, {\r\n\t\t\t\tmin: 10,\r\n\t\t\t\tmax: 90,\r\n\t\t\t});\r\n\t\t\tsetState({\r\n\t\t\t\tseries: [\r\n\t\t\t\t\t{\r\n\t\t\t\t\t\tdata: data.slice(),\r\n\t\t\t\t\t},\r\n\t\t\t\t],\r\n\t\t\t\toptions: {\r\n\t\t\t\t\t...state.options,\r\n\t\t\t\t},\r\n\t\t\t});\r\n\r\n\t\t\t// ApexCharts.exec('realtime', 'updateSeries', [\r\n\t\t\t// \t{\r\n\t\t\t// \t\tdata,\r\n\t\t\t// \t},\r\n\t\t\t// ]);\r\n\t\t}, 1000);\r\n\t\treturn () => {};\r\n\t\t// eslint-disable-next-line react-hooks/exhaustive-deps\r\n\t}, []);\r\n\treturn (\r\n\t\t<div className='col-lg-6'>\r\n\t\t\t<Card stretch>\r\n\t\t\t\t<CardHeader>\r\n\t\t\t\t\t<CardLabel icon='ShowChart' iconColor='secondary'>\r\n\t\t\t\t\t\t<CardTitle>\r\n\t\t\t\t\t\t\ttype <small>line</small>\r\n\t\t\t\t\t\t</CardTitle>\r\n\t\t\t\t\t\t<CardSubTitle>Chart</CardSubTitle>\r\n\t\t\t\t\t</CardLabel>\r\n\t\t\t\t</CardHeader>\r\n\t\t\t\t<CardBody>\r\n\t\t\t\t\t<Chart options={state.options} series={state.series} type='line' height={350} />\r\n\t\t\t\t</CardBody>\r\n\t\t\t</Card>\r\n\t\t</div>\r\n\t);\r\n};\r\n\r\nexport default LineRealtime;\r\n","import React, { useState } from 'react';\r\nimport Card, {\r\n\tCardBody,\r\n\tCardHeader,\r\n\tCardLabel,\r\n\tCardSubTitle,\r\n\tCardTitle,\r\n} from '../../../../components/bootstrap/Card';\r\nimport Chart, { IChartOptions } from '../../../../components/extras/Chart';\r\n\r\nconst LineDashed = () => {\r\n\tconst [state] = useState<IChartOptions>({\r\n\t\tseries: [\r\n\t\t\t{\r\n\t\t\t\tname: 'Session Duration',\r\n\t\t\t\tdata: [45, 52, 38, 24, 33, 26, 21, 20, 6, 8, 15, 10],\r\n\t\t\t},\r\n\t\t\t{\r\n\t\t\t\tname: 'Page Views',\r\n\t\t\t\tdata: [35, 41, 62, 42, 13, 18, 29, 37, 36, 51, 32, 35],\r\n\t\t\t},\r\n\t\t\t{\r\n\t\t\t\tname: 'Total Visits',\r\n\t\t\t\tdata: [87, 57, 74, 99, 75, 38, 62, 47, 82, 56, 45, 47],\r\n\t\t\t},\r\n\t\t],\r\n\t\toptions: {\r\n\t\t\tchart: {\r\n\t\t\t\theight: 350,\r\n\t\t\t\ttype: 'line',\r\n\t\t\t\tzoom: {\r\n\t\t\t\t\tenabled: false,\r\n\t\t\t\t},\r\n\t\t\t},\r\n\t\t\tdataLabels: {\r\n\t\t\t\tenabled: false,\r\n\t\t\t},\r\n\t\t\tstroke: {\r\n\t\t\t\twidth: [5, 7, 5],\r\n\t\t\t\tcurve: 'straight',\r\n\t\t\t\tdashArray: [0, 8, 5],\r\n\t\t\t},\r\n\t\t\ttitle: {\r\n\t\t\t\ttext: 'Page Statistics',\r\n\t\t\t\talign: 'left',\r\n\t\t\t},\r\n\t\t\tlegend: {\r\n\t\t\t\ttooltipHoverFormatter(val, opts) {\r\n\t\t\t\t\treturn `${val} - <strong>${\r\n\t\t\t\t\t\topts.w.globals.series[opts.seriesIndex][opts.dataPointIndex]\r\n\t\t\t\t\t}</strong>`;\r\n\t\t\t\t},\r\n\t\t\t},\r\n\t\t\tmarkers: {\r\n\t\t\t\tsize: 0,\r\n\t\t\t\thover: {\r\n\t\t\t\t\tsizeOffset: 6,\r\n\t\t\t\t},\r\n\t\t\t},\r\n\t\t\txaxis: {\r\n\t\t\t\tcategories: [\r\n\t\t\t\t\t'01 Jan',\r\n\t\t\t\t\t'02 Jan',\r\n\t\t\t\t\t'03 Jan',\r\n\t\t\t\t\t'04 Jan',\r\n\t\t\t\t\t'05 Jan',\r\n\t\t\t\t\t'06 Jan',\r\n\t\t\t\t\t'07 Jan',\r\n\t\t\t\t\t'08 Jan',\r\n\t\t\t\t\t'09 Jan',\r\n\t\t\t\t\t'10 Jan',\r\n\t\t\t\t\t'11 Jan',\r\n\t\t\t\t\t'12 Jan',\r\n\t\t\t\t],\r\n\t\t\t},\r\n\t\t\ttooltip: {\r\n\t\t\t\ty: [\r\n\t\t\t\t\t{\r\n\t\t\t\t\t\ttitle: {\r\n\t\t\t\t\t\t\tformatter(val) {\r\n\t\t\t\t\t\t\t\treturn `${val} (mins)`;\r\n\t\t\t\t\t\t\t},\r\n\t\t\t\t\t\t},\r\n\t\t\t\t\t},\r\n\t\t\t\t\t{\r\n\t\t\t\t\t\ttitle: {\r\n\t\t\t\t\t\t\tformatter(val) {\r\n\t\t\t\t\t\t\t\treturn `${val} per session`;\r\n\t\t\t\t\t\t\t},\r\n\t\t\t\t\t\t},\r\n\t\t\t\t\t},\r\n\t\t\t\t\t{\r\n\t\t\t\t\t\ttitle: {\r\n\t\t\t\t\t\t\tformatter(val) {\r\n\t\t\t\t\t\t\t\treturn val;\r\n\t\t\t\t\t\t\t},\r\n\t\t\t\t\t\t},\r\n\t\t\t\t\t},\r\n\t\t\t\t],\r\n\t\t\t},\r\n\t\t\tgrid: {\r\n\t\t\t\tborderColor: '#f1f1f1',\r\n\t\t\t},\r\n\t\t},\r\n\t});\r\n\treturn (\r\n\t\t<div className='col-lg-6'>\r\n\t\t\t<Card stretch>\r\n\t\t\t\t<CardHeader>\r\n\t\t\t\t\t<CardLabel icon='ShowChart' iconColor='secondary'>\r\n\t\t\t\t\t\t<CardTitle>\r\n\t\t\t\t\t\t\ttype <small>line</small>\r\n\t\t\t\t\t\t</CardTitle>\r\n\t\t\t\t\t\t<CardSubTitle>Chart</CardSubTitle>\r\n\t\t\t\t\t</CardLabel>\r\n\t\t\t\t</CardHeader>\r\n\t\t\t\t<CardBody>\r\n\t\t\t\t\t<Chart options={state.options} series={state.series} type='line' height={350} />\r\n\t\t\t\t</CardBody>\r\n\t\t\t</Card>\r\n\t\t</div>\r\n\t);\r\n};\r\n\r\nexport default LineDashed;\r\n","import React, { useState } from 'react';\r\nimport Card, {\r\n\tCardBody,\r\n\tCardHeader,\r\n\tCardLabel,\r\n\tCardSubTitle,\r\n\tCardTitle,\r\n} from '../../../../components/bootstrap/Card';\r\nimport Chart, { IChartOptions } from '../../../../components/extras/Chart';\r\n\r\nconst LineWithMissingData = () => {\r\n\tconst [state] = useState<IChartOptions>({\r\n\t\tseries: [\r\n\t\t\t{\r\n\t\t\t\tname: 'Peter',\r\n\t\t\t\tdata: [5, 5, 10, 8, 7, 5, 4, null, null, null, 10, 10, 7, 8, 6, 9],\r\n\t\t\t},\r\n\t\t\t{\r\n\t\t\t\tname: 'Johnny',\r\n\t\t\t\tdata: [\r\n\t\t\t\t\t10,\r\n\t\t\t\t\t15,\r\n\t\t\t\t\tnull,\r\n\t\t\t\t\t12,\r\n\t\t\t\t\tnull,\r\n\t\t\t\t\t10,\r\n\t\t\t\t\t12,\r\n\t\t\t\t\t15,\r\n\t\t\t\t\tnull,\r\n\t\t\t\t\tnull,\r\n\t\t\t\t\t12,\r\n\t\t\t\t\tnull,\r\n\t\t\t\t\t14,\r\n\t\t\t\t\tnull,\r\n\t\t\t\t\tnull,\r\n\t\t\t\t\tnull,\r\n\t\t\t\t],\r\n\t\t\t},\r\n\t\t\t{\r\n\t\t\t\tname: 'David',\r\n\t\t\t\tdata: [null, null, null, null, 3, 4, 1, 3, 4, 6, 7, 9, 5, null, null, null],\r\n\t\t\t},\r\n\t\t],\r\n\t\toptions: {\r\n\t\t\tchart: {\r\n\t\t\t\theight: 350,\r\n\t\t\t\ttype: 'line',\r\n\t\t\t\tzoom: {\r\n\t\t\t\t\tenabled: false,\r\n\t\t\t\t},\r\n\t\t\t\tanimations: {\r\n\t\t\t\t\tenabled: false,\r\n\t\t\t\t},\r\n\t\t\t},\r\n\t\t\tstroke: {\r\n\t\t\t\twidth: [5, 5, 4],\r\n\t\t\t\tcurve: 'straight',\r\n\t\t\t},\r\n\t\t\tlabels: [\r\n\t\t\t\t'1',\r\n\t\t\t\t'2',\r\n\t\t\t\t'3',\r\n\t\t\t\t'4',\r\n\t\t\t\t'5',\r\n\t\t\t\t'6',\r\n\t\t\t\t'7',\r\n\t\t\t\t'8',\r\n\t\t\t\t'9',\r\n\t\t\t\t'10',\r\n\t\t\t\t'11',\r\n\t\t\t\t'12',\r\n\t\t\t\t'13',\r\n\t\t\t\t'14',\r\n\t\t\t\t'15',\r\n\t\t\t\t'16',\r\n\t\t\t],\r\n\t\t\ttitle: {\r\n\t\t\t\ttext: 'Missing data (null values)',\r\n\t\t\t},\r\n\t\t\txaxis: {},\r\n\t\t},\r\n\t});\r\n\treturn (\r\n\t\t<div className='col-12'>\r\n\t\t\t<Card stretch>\r\n\t\t\t\t<CardHeader>\r\n\t\t\t\t\t<CardLabel icon='ShowChart' iconColor='secondary'>\r\n\t\t\t\t\t\t<CardTitle>\r\n\t\t\t\t\t\t\ttype <small>line</small>\r\n\t\t\t\t\t\t</CardTitle>\r\n\t\t\t\t\t\t<CardSubTitle>Chart</CardSubTitle>\r\n\t\t\t\t\t</CardLabel>\r\n\t\t\t\t</CardHeader>\r\n\t\t\t\t<CardBody>\r\n\t\t\t\t\t<Chart options={state.options} series={state.series} type='line' height={350} />\r\n\t\t\t\t</CardBody>\r\n\t\t\t</Card>\r\n\t\t</div>\r\n\t);\r\n};\r\n\r\nexport default LineWithMissingData;\r\n","import React from 'react';\r\nimport SubHeader, { SubHeaderLeft, SubHeaderRight } from '../../../layout/SubHeader/SubHeader';\r\nimport Breadcrumb from '../../../components/bootstrap/Breadcrumb';\r\nimport Page from '../../../layout/Page/Page';\r\nimport PageWrapper from '../../../layout/PageWrapper/PageWrapper';\r\nimport LineBasic from './chart-line/LineBasic';\r\nimport LineWithLabel from './chart-line/LineWithLabel';\r\nimport LineZoomableTimeSeries from './chart-line/LineZoomableTimeSeries';\r\nimport LineWithAnnotations from './chart-line/LineWithAnnotations';\r\nimport LineSyncingOptions from './chart-line/LineSyncingOptions';\r\nimport LineBrush from './chart-line/LineBrush';\r\nimport LineStep from './chart-line/LineStep';\r\nimport LineGradient from './chart-line/LineGradient';\r\nimport LineRealtime from './chart-line/LineRealtime';\r\nimport LineDashed from './chart-line/LineDashed';\r\nimport LineWithMissingData from './chart-line/LineWithMissingData';\r\nimport CommonStoryBtn from '../../../common/other/CommonStoryBtn';\r\nimport { componentPagesMenu } from '../../../menu';\r\n\r\nconst ChartLinePage = () => {\r\n\treturn (\r\n\t\t<PageWrapper title={componentPagesMenu.charts.subMenu.chartsLine.text}>\r\n\t\t\t<SubHeader>\r\n\t\t\t\t<SubHeaderLeft>\r\n\t\t\t\t\t<Breadcrumb\r\n\t\t\t\t\t\tlist={[\r\n\t\t\t\t\t\t\t{ title: 'Charts', to: '/charts' },\r\n\t\t\t\t\t\t\t{ title: 'Line', to: '/charts/line' },\r\n\t\t\t\t\t\t]}\r\n\t\t\t\t\t/>\r\n\t\t\t\t</SubHeaderLeft>\r\n\t\t\t\t<SubHeaderRight>\r\n\t\t\t\t\t<CommonStoryBtn to='/story/extra-chart-line--line-basic' />\r\n\t\t\t\t</SubHeaderRight>\r\n\t\t\t</SubHeader>\r\n\t\t\t<Page>\r\n\t\t\t\t<div className='row'>\r\n\t\t\t\t\t<LineBasic />\r\n\t\t\t\t\t<LineWithLabel />\r\n\r\n\t\t\t\t\t<LineZoomableTimeSeries />\r\n\t\t\t\t\t<LineWithAnnotations />\r\n\r\n\t\t\t\t\t<LineSyncingOptions />\r\n\t\t\t\t\t<LineBrush />\r\n\r\n\t\t\t\t\t<LineStep />\r\n\t\t\t\t\t<LineGradient />\r\n\r\n\t\t\t\t\t<LineRealtime />\r\n\t\t\t\t\t<LineDashed />\r\n\r\n\t\t\t\t\t<LineWithMissingData />\r\n\t\t\t\t</div>\r\n\t\t\t</Page>\r\n\t\t</PageWrapper>\r\n\t);\r\n};\r\n\r\nexport default ChartLinePage;\r\n","import React, { useState } from 'react';\r\nimport Card, {\r\n\tCardBody,\r\n\tCardHeader,\r\n\tCardLabel,\r\n\tCardSubTitle,\r\n\tCardTitle,\r\n} from '../../../../components/bootstrap/Card';\r\nimport Chart, { IChartOptions } from '../../../../components/extras/Chart';\r\nimport { dataSeries } from '../../../../common/data/chartDummyData';\r\n\r\nconst LineZoomableTimeSeries = () => {\r\n\tlet ts2 = 1484418600000;\r\n\tconst dates: any[] = [];\r\n\tfor (let i = 0; i < 120; i += 1) {\r\n\t\tts2 += 86400000;\r\n\t\tconst innerArr = [ts2, dataSeries[1][i].value];\r\n\t\tdates.push(innerArr);\r\n\t}\r\n\tconst [state] = useState<IChartOptions>({\r\n\t\tseries: [\r\n\t\t\t{\r\n\t\t\t\tname: 'XYZ MOTORS',\r\n\t\t\t\tdata: dates,\r\n\t\t\t},\r\n\t\t],\r\n\t\toptions: {\r\n\t\t\tchart: {\r\n\t\t\t\ttype: 'area',\r\n\t\t\t\tstacked: false,\r\n\t\t\t\theight: 350,\r\n\t\t\t\tzoom: {\r\n\t\t\t\t\ttype: 'x',\r\n\t\t\t\t\tenabled: true,\r\n\t\t\t\t\tautoScaleYaxis: true,\r\n\t\t\t\t},\r\n\t\t\t\ttoolbar: {\r\n\t\t\t\t\tautoSelected: 'zoom',\r\n\t\t\t\t},\r\n\t\t\t},\r\n\t\t\tdataLabels: {\r\n\t\t\t\tenabled: false,\r\n\t\t\t},\r\n\t\t\tmarkers: {\r\n\t\t\t\tsize: 0,\r\n\t\t\t},\r\n\t\t\ttitle: {\r\n\t\t\t\ttext: 'Bead Movement',\r\n\t\t\t\talign: 'left',\r\n\t\t\t},\r\n\t\t\tfill: {\r\n\t\t\t\ttype: 'gradient',\r\n\t\t\t\tgradient: {\r\n\t\t\t\t\tshadeIntensity: 1,\r\n\t\t\t\t\tinverseColors: false,\r\n\t\t\t\t\topacityFrom: 0.5,\r\n\t\t\t\t\topacityTo: 0,\r\n\t\t\t\t\tstops: [0, 90, 100],\r\n\t\t\t\t},\r\n\t\t\t},\r\n\t\t\tyaxis: {\r\n\t\t\t\tlabels: {\r\n\t\t\t\t\tformatter(val) {\r\n\t\t\t\t\t\treturn (val / 1000000).toFixed(0);\r\n\t\t\t\t\t},\r\n\t\t\t\t},\r\n\t\t\t\ttitle: {\r\n\t\t\t\t\ttext: 'Price',\r\n\t\t\t\t},\r\n\t\t\t},\r\n\t\t\txaxis: {\r\n\t\t\t\ttype: 'datetime',\r\n\t\t\t},\r\n\t\t\ttooltip: {\r\n\t\t\t\tshared: false,\r\n\t\t\t\ty: {\r\n\t\t\t\t\tformatter(val) {\r\n\t\t\t\t\t\treturn (val / 1000000).toFixed(0);\r\n\t\t\t\t\t},\r\n\t\t\t\t},\r\n\t\t\t},\r\n\t\t},\r\n\t});\r\n\treturn (\r\n\t\t<div className='col-lg-6'>\r\n\t\t\t<Card stretch>\r\n\t\t\t\t<CardHeader>\r\n\t\t\t\t\t<CardLabel icon='ShowChart' iconColor='danger'>\r\n\t\t\t\t\t\t<CardTitle>\r\n\t\t\t\t\t\t\tBead <small>OverView</small>\r\n\t\t\t\t\t\t</CardTitle>\r\n\t\t\t\t\t\t<CardSubTitle>Chart</CardSubTitle>\r\n\t\t\t\t\t</CardLabel>\r\n\t\t\t\t</CardHeader>\r\n\t\t\t\t<CardBody>\r\n\t\t\t\t\t<Chart\r\n\t\t\t\t\t\tseries={state.series}\r\n\t\t\t\t\t\toptions={state.options}\r\n\t\t\t\t\t\ttype={state.options.chart?.type}\r\n\t\t\t\t\t\theight={state.options.chart?.height}\r\n\t\t\t\t\t/>\r\n\t\t\t\t</CardBody>\r\n\t\t\t</Card>\r\n\t\t</div>\r\n\t);\r\n};\r\n\r\nexport default LineZoomableTimeSeries;\r\n"],"names":["generateDayWiseTimeSeries","baseval","count","yrange","i","series2","x","y","Math","floor","random","max","min","push","_ref","to","props","_jsx","Button","color","icon","tag","target","isLight","href","children","BreadcrumbItem","ariaLabel","className","isActive","divider","_jsxs","TagWrapper","classNames","active","cloneElement","NavLink","_ref2","list","listTag","itemTag","autoActive","isToHome","Icon","DIVIDER","style","map","item","index","length","title","Children","child","LineBasic","_state$options$chart","_state$options$chart2","state","useState","series","name","data","options","chart","height","type","zoom","enabled","dataLabels","stroke","curve","text","align","grid","row","colors","opacity","xaxis","categories","Card","stretch","CardHeader","CardLabel","CardTitle","CardSubTitle","CardActions","CommonStoryBtn","CardBody","Chart","LineWithLabel","dropShadow","top","left","blur","toolbar","show","tooltip","theme","borderColor","markers","size","yaxis","legend","position","horizontalAlign","floating","offsetY","offsetX","iconColor","LineWithAnnotations","monthDataSeries1","prices","annotations","process","label","background","y2","fillColor","fontSize","Date","getTime","strokeDashArray","x2","points","marker","strokeColor","cssClass","image","path","Instagram","padding","right","labels","dates","LineSyncingOptions","syncingChartsOptions","tools","selection","hover","followCursor","clipMarkers","tickAmount","id","group","minWidth","seriesLine2","optionsLine2","seriesArea","optionsArea","LineBrush","brushData","autoSelected","width","fill","seriesLine","optionsLine","brush","gradient","opacityFrom","opacityTo","marginTop","LineStep","sizeOffset","LineGradient","formatter","value","timestamp","opts","dateFormatter","shade","gradientToColors","String","shadeIntensity","stops","strokeColors","strokeWidth","LineRealtime","lastDate","TICK_INTERVAL","X_AXIS_RANGE","getDayWiseTimeSeries","setState","slice","animations","easing","dynamicAnimation","speed","range","useEffect","window","setInterval","getNewSeries","newDate","LineDashed","dashArray","tooltipHoverFormatter","val","w","globals","seriesIndex","dataPointIndex","LineWithMissingData","ChartLinePage","PageWrapper","componentPagesMenu","charts","subMenu","chartsLine","SubHeader","SubHeaderLeft","Breadcrumb","SubHeaderRight","Page","LineZoomableTimeSeries","ts2","innerArr","dataSeries","stacked","autoScaleYaxis","inverseColors","toFixed","shared"],"sourceRoot":""}