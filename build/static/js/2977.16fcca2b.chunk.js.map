{"version":3,"file":"static/js/2977.16fcca2b.chunk.js","mappings":"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","sources":["common/other/CommonAvatarTeam.tsx","components/bootstrap/Badge.tsx","components/bootstrap/Option.tsx","components/bootstrap/forms/Checks.tsx","components/bootstrap/forms/Select.tsx","common/data/boardTagsData.ts","pages/presentation/project-management/helper/helper.ts","pages/presentation/project-management/component/Board.tsx","pages/presentation/project-management/component/ColumnCard.tsx","pages/presentation/project-management/component/ColumnCardWrapper.tsx","pages/presentation/project-management/helper/style.ts","pages/presentation/project-management/component/Columns.tsx","pages/presentation/project-management/ProjectManagementsProject.tsx"],"sourcesContent":["import React, { FC, memo, ReactNode } from 'react';\r\nimport Avatar, { AvatarGroup } from '../../components/Avatar';\r\nimport USERS from '../data/userDummyData';\r\n\r\ninterface ICommonAvatarTeamProps {\r\n\tchildren: ReactNode;\r\n\tisAlignmentEnd?: boolean;\r\n}\r\nconst CommonAvatarTeam: FC<ICommonAvatarTeamProps> = ({ children, isAlignmentEnd }) => {\r\n\treturn (\r\n\t\t<>\r\n\t\t\t{children && !isAlignmentEnd && <span className='me-3'>{children}</span>}\r\n\t\t\t<AvatarGroup>\r\n\t\t\t\t<Avatar\r\n\t\t\t\t\tsrc={USERS.GRACE.src}\r\n\t\t\t\t\tsrcSet={USERS.GRACE.srcSet}\r\n\t\t\t\t\t// @ts-ignore\r\n\t\t\t\t\tcolor={USERS.GRACE.color}\r\n\t\t\t\t\tuserName={`${USERS.GRACE.name} ${USERS.GRACE.surname}`}\r\n\t\t\t\t/>\r\n\t\t\t\t<Avatar\r\n\t\t\t\t\tsrc={USERS.JANE.src}\r\n\t\t\t\t\tsrcSet={USERS.JANE.srcSet}\r\n\t\t\t\t\t// @ts-ignore\r\n\t\t\t\t\tcolor={USERS.JANE.color}\r\n\t\t\t\t\tuserName={`${USERS.JANE.name} ${USERS.JANE.surname}`}\r\n\t\t\t\t/>\r\n\t\t\t\t<Avatar\r\n\t\t\t\t\tsrc={USERS.RYAN.src}\r\n\t\t\t\t\tsrcSet={USERS.RYAN.srcSet}\r\n\t\t\t\t\t// @ts-ignore\r\n\t\t\t\t\tcolor={USERS.RYAN.color}\r\n\t\t\t\t\tuserName={`${USERS.RYAN.name} ${USERS.RYAN.surname}`}\r\n\t\t\t\t/>\r\n\t\t\t\t<Avatar\r\n\t\t\t\t\tsrc={USERS.ELLA.src}\r\n\t\t\t\t\tsrcSet={USERS.ELLA.srcSet}\r\n\t\t\t\t\t// @ts-ignore\r\n\t\t\t\t\tcolor={USERS.ELLA.color}\r\n\t\t\t\t\tuserName={`${USERS.ELLA.name} ${USERS.ELLA.surname}`}\r\n\t\t\t\t/>\r\n\t\t\t\t<Avatar\r\n\t\t\t\t\tsrc={USERS.CHLOE.src}\r\n\t\t\t\t\tsrcSet={USERS.CHLOE.srcSet}\r\n\t\t\t\t\t// @ts-ignore\r\n\t\t\t\t\tcolor={USERS.CHLOE.color}\r\n\t\t\t\t\tuserName={`${USERS.CHLOE.name} ${USERS.CHLOE.surname}`}\r\n\t\t\t\t/>\r\n\t\t\t\t<Avatar\r\n\t\t\t\t\tsrc={USERS.SAM.src}\r\n\t\t\t\t\tsrcSet={USERS.SAM.srcSet}\r\n\t\t\t\t\t// @ts-ignore\r\n\t\t\t\t\tcolor={USERS.SAM.color}\r\n\t\t\t\t\tuserName={`${USERS.SAM.name} ${USERS.SAM.surname}`}\r\n\t\t\t\t/>\r\n\t\t\t</AvatarGroup>\r\n\t\t\t{children && isAlignmentEnd && <span>{children}</span>}\r\n\t\t</>\r\n\t);\r\n};\r\n\r\nexport default memo(CommonAvatarTeam);\r\n","import React, { FC, ReactNode } from 'react';\r\nimport classNames from 'classnames';\r\nimport useDarkMode from '../../hooks/useDarkMode';\r\nimport { TColor } from '../../type/color-type';\r\n\r\ninterface IBadgeProps extends Record<string, any> {\r\n\tchildren: ReactNode;\r\n\tclassName?: string;\r\n\tcolor?: TColor;\r\n\trounded?:\r\n\t\t| null\r\n\t\t| 'default'\r\n\t\t| 0\r\n\t\t| 1\r\n\t\t| 2\r\n\t\t| 3\r\n\t\t| 'bottom'\r\n\t\t| 'top'\r\n\t\t| 'circle'\r\n\t\t| 'end'\r\n\t\t| 'start'\r\n\t\t| 'pill';\r\n\tshadow?: null | 'none' | 'sm' | 'default' | 'lg';\r\n\tisLight?: boolean;\r\n}\r\nconst Badge: FC<IBadgeProps> = ({\r\n\tchildren,\r\n\tclassName,\r\n\tcolor = 'primary',\r\n\tshadow,\r\n\trounded,\r\n\tisLight,\r\n\t...props\r\n}) => {\r\n\tconst { darkModeStatus } = useDarkMode();\r\n\treturn (\r\n\t\t<span\r\n\t\t\tclassName={classNames(\r\n\t\t\t\t'badge',\r\n\t\t\t\t{\r\n\t\t\t\t\t[`bg-${color}`]: !isLight,\r\n\t\t\t\t\t[`bg-l${darkModeStatus ? 'o25' : '10'}-${color}`]: isLight,\r\n\t\t\t\t\t[`text-${color}`]: isLight,\r\n\t\t\t\t\t[`shadow${shadow !== 'default' ? `-${shadow}` : ''}`]: !!shadow,\r\n\t\t\t\t\t[`rounded${rounded !== 'default' ? `-${rounded}` : ''}`]: rounded,\r\n\t\t\t\t\t'rounded-0':\r\n\t\t\t\t\t\trounded === 'bottom' ||\r\n\t\t\t\t\t\trounded === 'top' ||\r\n\t\t\t\t\t\trounded === 'end' ||\r\n\t\t\t\t\t\trounded === 'start' ||\r\n\t\t\t\t\t\trounded === 0,\r\n\t\t\t\t},\r\n\t\t\t\tclassName,\r\n\t\t\t)}\r\n\t\t\t{...props}>\r\n\t\t\t{children}\r\n\t\t</span>\r\n\t);\r\n};\r\n\r\nexport default Badge;\r\n","import React, { FC, HTMLAttributes } from 'react';\r\n\r\ninterface IOptionProps extends HTMLAttributes<HTMLOptionElement> {\r\n\tchildren: string;\r\n\tvalue?: string | number;\r\n\tdisabled?: boolean;\r\n\tariaLabelledby?: string | null;\r\n}\r\nconst Option: FC<IOptionProps> = ({ children, value, disabled, ariaLabelledby, ...props }) => {\r\n\treturn (\r\n\t\t<option\r\n\t\t\tvalue={value}\r\n\t\t\tdisabled={disabled}\r\n\t\t\taria-labelledby={ariaLabelledby || children}\r\n\t\t\t{...props}>\r\n\t\t\t{children}\r\n\t\t</option>\r\n\t);\r\n};\r\n\r\nexport interface IOptionsProps {\r\n\tlist: {\r\n\t\tvalue?: string | number;\r\n\t\ttext?: string | number;\r\n\t\tlabel?: string | number;\r\n\t}[];\r\n}\r\n// @ts-ignore\r\nexport const Options: FC<IOptionsProps> = ({ list }) => {\r\n\treturn list?.map((item) => (\r\n\t\t// eslint-disable-next-line react/jsx-props-no-spreading\r\n\t\t<Option key={item.value} value={item.value} {...item}>\r\n\t\t\t{(item.text as string) || (item.label as string)}\r\n\t\t</Option>\r\n\t));\r\n};\r\n\r\nexport default Option;\r\n","import React, {\r\n\tChildren,\r\n\tcloneElement,\r\n\tforwardRef,\r\n\tHTMLAttributes,\r\n\tReactElement,\r\n\tReactNode,\r\n} from 'react';\r\nimport classNames from 'classnames';\r\nimport Validation from './Validation';\r\n\r\ninterface IChecksGroupProps extends HTMLAttributes<HTMLDivElement> {\r\n\tid?: string | undefined;\r\n\tclassName?: string;\r\n\tchildren: ReactElement<IChecksProps> | ReactElement<IChecksProps>[];\r\n\tisInline?: boolean;\r\n\tisTouched?: boolean;\r\n\tisValid?: boolean;\r\n\tinvalidFeedback?: string;\r\n\tvalidFeedback?: string;\r\n\tisTooltipFeedback?: boolean;\r\n}\r\nexport const ChecksGroup = forwardRef<HTMLDivElement, IChecksGroupProps>(\r\n\t(\r\n\t\t{\r\n\t\t\tid,\r\n\t\t\tclassName,\r\n\t\t\tchildren,\r\n\t\t\tisInline,\r\n\t\t\tisValid,\r\n\t\t\tisTouched,\r\n\t\t\tinvalidFeedback,\r\n\t\t\tvalidFeedback,\r\n\t\t\tisTooltipFeedback,\r\n\t\t\t...props\r\n\t\t},\r\n\t\tref,\r\n\t) => {\r\n\t\treturn (\r\n\t\t\t<>\r\n\t\t\t\t<div\r\n\t\t\t\t\tref={ref}\r\n\t\t\t\t\tid={id}\r\n\t\t\t\t\tclassName={classNames(\r\n\t\t\t\t\t\t{\r\n\t\t\t\t\t\t\t'is-invalid': !isValid && isTouched && invalidFeedback,\r\n\t\t\t\t\t\t\t'is-valid': !isValid && isTouched && !invalidFeedback,\r\n\t\t\t\t\t\t},\r\n\t\t\t\t\t\tclassName,\r\n\t\t\t\t\t)}\r\n\t\t\t\t\t{...props}>\r\n\t\t\t\t\t{Children.map(children, (child) =>\r\n\t\t\t\t\t\tcloneElement(child, {\r\n\t\t\t\t\t\t\tisInline: child.props.isInline || isInline,\r\n\t\t\t\t\t\t\tisValid,\r\n\t\t\t\t\t\t\tisTouched,\r\n\t\t\t\t\t\t\tinvalidFeedback,\r\n\t\t\t\t\t\t\tvalidFeedback,\r\n\t\t\t\t\t\t\tisTooltipFeedback,\r\n\t\t\t\t\t\t\tisValidMessage: false,\r\n\t\t\t\t\t\t}),\r\n\t\t\t\t\t)}\r\n\t\t\t\t</div>\r\n\t\t\t\t<Validation\r\n\t\t\t\t\tisTouched={isTouched}\r\n\t\t\t\t\tinvalidFeedback={invalidFeedback}\r\n\t\t\t\t\tvalidFeedback={validFeedback}\r\n\t\t\t\t\tisTooltip={isTooltipFeedback}\r\n\t\t\t\t/>\r\n\t\t\t</>\r\n\t\t);\r\n\t},\r\n);\r\nChecksGroup.displayName = 'ChecksGroup';\r\n\r\nexport interface IChecksProps extends HTMLAttributes<HTMLInputElement> {\r\n\tid?: string | undefined;\r\n\tclassName?: string;\r\n\tname?: string | null;\r\n\ttype?: 'checkbox' | 'radio' | 'switch';\r\n\tlabel?: ReactNode;\r\n\tvalue?: string | number;\r\n\tchecked?: boolean | string;\r\n\tdisabled?: boolean;\r\n\tisInline?: boolean;\r\n\tisFormCheckInput?: boolean;\r\n\tisTouched?: boolean;\r\n\tisValid?: boolean;\r\n\tinvalidFeedback?: string;\r\n\tvalidFeedback?: string;\r\n\tisValidMessage?: boolean;\r\n\tisTooltipFeedback?: boolean;\r\n\tonBlur?(...args: unknown[]): unknown;\r\n\tonChange?(...args: unknown[]): unknown;\r\n\tonFocus?(...args: unknown[]): unknown;\r\n\tonInput?(...args: unknown[]): unknown;\r\n\tonInvalid?(...args: unknown[]): unknown;\r\n\tonSelect?(...args: unknown[]): unknown;\r\n\tariaLabel?: string;\r\n}\r\nconst Checks = forwardRef<HTMLInputElement, IChecksProps>(\r\n\t(\r\n\t\t{\r\n\t\t\tid,\r\n\t\t\tclassName,\r\n\t\t\tname,\r\n\t\t\ttype = 'checkbox',\r\n\t\t\tlabel,\r\n\t\t\tvalue,\r\n\t\t\tchecked,\r\n\t\t\tdisabled,\r\n\t\t\tisInline,\r\n\t\t\tisFormCheckInput,\r\n\t\t\tisValid,\r\n\t\t\tisTouched,\r\n\t\t\tinvalidFeedback,\r\n\t\t\tvalidFeedback,\r\n\t\t\tisValidMessage = true,\r\n\t\t\tisTooltipFeedback,\r\n\t\t\tonBlur,\r\n\t\t\tonChange,\r\n\t\t\tonFocus,\r\n\t\t\tonInput,\r\n\t\t\tonInvalid,\r\n\t\t\tonSelect,\r\n\t\t\tariaLabel,\r\n\t\t\t...props\r\n\t\t},\r\n\t\tref,\r\n\t) => {\r\n\t\tconst INNER = (\r\n\t\t\t<input\r\n\t\t\t\tref={ref}\r\n\t\t\t\tclassName={classNames(\r\n\t\t\t\t\t'form-check-input',\r\n\t\t\t\t\t{\r\n\t\t\t\t\t\t'mt-0': isFormCheckInput,\r\n\t\t\t\t\t\t'is-invalid': !isValid && isTouched && invalidFeedback,\r\n\t\t\t\t\t\t'is-valid': !isValid && isTouched && !invalidFeedback,\r\n\t\t\t\t\t},\r\n\t\t\t\t\tclassName,\r\n\t\t\t\t)}\r\n\t\t\t\tname={name === null ? id : name}\r\n\t\t\t\ttype={type === 'radio' ? 'radio' : 'checkbox'}\r\n\t\t\t\tid={id}\r\n\t\t\t\tvalue={value}\r\n\t\t\t\tchecked={type === 'radio' ? checked === value : !!checked}\r\n\t\t\t\tdisabled={disabled}\r\n\t\t\t\tonBlur={onBlur}\r\n\t\t\t\tonChange={onChange}\r\n\t\t\t\tonFocus={onFocus}\r\n\t\t\t\tonInput={onInput}\r\n\t\t\t\tonInvalid={onInvalid}\r\n\t\t\t\tonSelect={onSelect}\r\n\t\t\t\taria-label={ariaLabel}\r\n\t\t\t\t{...props}\r\n\t\t\t/>\r\n\t\t);\r\n\r\n\t\tif (isFormCheckInput) {\r\n\t\t\treturn INNER;\r\n\t\t}\r\n\t\treturn (\r\n\t\t\t<div\r\n\t\t\t\tclassName={classNames('form-check', {\r\n\t\t\t\t\t'form-switch': type === 'switch',\r\n\t\t\t\t\t'form-check-inline': isInline,\r\n\t\t\t\t})}>\r\n\t\t\t\t{INNER}\r\n\t\t\t\t{label && (\r\n\t\t\t\t\t<label className='form-check-label' htmlFor={id}>\r\n\t\t\t\t\t\t{label}\r\n\t\t\t\t\t</label>\r\n\t\t\t\t)}\r\n\t\t\t\t{isValidMessage && (\r\n\t\t\t\t\t<Validation\r\n\t\t\t\t\t\tisTouched={isTouched}\r\n\t\t\t\t\t\tinvalidFeedback={invalidFeedback}\r\n\t\t\t\t\t\tvalidFeedback={validFeedback}\r\n\t\t\t\t\t\tisTooltip={isTooltipFeedback}\r\n\t\t\t\t\t/>\r\n\t\t\t\t)}\r\n\t\t\t</div>\r\n\t\t);\r\n\t},\r\n);\r\nChecks.displayName = 'Checks';\r\n\r\nexport default Checks;\r\n","import React, { forwardRef, HTMLAttributes, ReactNode } from 'react';\r\nimport classNames from 'classnames';\r\nimport Option, { IOptionsProps, Options } from '../Option';\r\nimport Validation from './Validation';\r\n\r\ninterface ISelectProps extends Partial<IOptionsProps>, HTMLAttributes<HTMLSelectElement> {\r\n\tid?: string;\r\n\tclassName?: string;\r\n\tname?: string;\r\n\tchildren?: ReactNode;\r\n\tariaLabel: string;\r\n\tplaceholder?: string;\r\n\tsize?: 'lg' | 'sm';\r\n\tmultiple?: boolean;\r\n\tdisabled?: boolean;\r\n\trequired?: boolean;\r\n\tariaDescribedby?: string;\r\n\tariaLabelledby?: string;\r\n\ttitle?: string;\r\n\tvalue?: string | string[];\r\n\tdefaultValue?: string | string[];\r\n\tisTouched?: boolean;\r\n\tisValid?: boolean;\r\n\tinvalidFeedback?: string;\r\n\tvalidFeedback?: string;\r\n\tisValidMessage?: boolean;\r\n\tisTooltipFeedback?: boolean;\r\n\tonBlur?(...args: unknown[]): unknown;\r\n\tonChange?(...args: unknown[]): unknown;\r\n\tonFocus?(...args: unknown[]): unknown;\r\n\tonInput?(...args: unknown[]): unknown;\r\n\tonInvalid?(...args: unknown[]): unknown;\r\n\tonSelect?(...args: unknown[]): unknown;\r\n}\r\nconst Select = forwardRef<HTMLSelectElement, ISelectProps>(\r\n\t(\r\n\t\t{\r\n\t\t\tid,\r\n\t\t\tname,\r\n\t\t\tclassName,\r\n\t\t\tchildren,\r\n\t\t\trequired,\r\n\t\t\tplaceholder,\r\n\t\t\tariaDescribedby,\r\n\t\t\tariaLabelledby,\r\n\t\t\tariaLabel,\r\n\t\t\tlist,\r\n\t\t\tmultiple,\r\n\t\t\ttitle,\r\n\t\t\tsize,\r\n\t\t\tdisabled,\r\n\t\t\tvalue,\r\n\t\t\tdefaultValue,\r\n\t\t\tisValid,\r\n\t\t\tisTouched,\r\n\t\t\tinvalidFeedback,\r\n\t\t\tvalidFeedback,\r\n\t\t\tisValidMessage = true,\r\n\t\t\tisTooltipFeedback,\r\n\t\t\tonBlur,\r\n\t\t\tonChange,\r\n\t\t\tonFocus,\r\n\t\t\tonInput,\r\n\t\t\tonInvalid,\r\n\t\t\tonSelect,\r\n\t\t\t...props\r\n\t\t},\r\n\r\n\t\tref,\r\n\t) => {\r\n\t\treturn (\r\n\t\t\t<>\r\n\t\t\t\t<select\r\n\t\t\t\t\tref={ref}\r\n\t\t\t\t\tid={id}\r\n\t\t\t\t\tclassName={classNames(\r\n\t\t\t\t\t\t'form-select',\r\n\t\t\t\t\t\t{\r\n\t\t\t\t\t\t\t[`form-select-${size}`]: size,\r\n\t\t\t\t\t\t\t'text-muted': value === '' && placeholder,\r\n\t\t\t\t\t\t\t'is-invalid': !isValid && isTouched && invalidFeedback,\r\n\t\t\t\t\t\t\t'is-valid': !isValid && isTouched && !invalidFeedback,\r\n\t\t\t\t\t\t},\r\n\t\t\t\t\t\tclassName,\r\n\t\t\t\t\t)}\r\n\t\t\t\t\tname={name}\r\n\t\t\t\t\taria-label={ariaLabel}\r\n\t\t\t\t\taria-describedby={ariaDescribedby}\r\n\t\t\t\t\taria-labelledby={ariaLabelledby}\r\n\t\t\t\t\tmultiple={multiple}\r\n\t\t\t\t\tdisabled={disabled}\r\n\t\t\t\t\ttitle={title}\r\n\t\t\t\t\tvalue={value}\r\n\t\t\t\t\tdefaultValue={defaultValue}\r\n\t\t\t\t\trequired={required}\r\n\t\t\t\t\tonBlur={onBlur}\r\n\t\t\t\t\tonChange={onChange}\r\n\t\t\t\t\tonFocus={onFocus}\r\n\t\t\t\t\tonInput={onInput}\r\n\t\t\t\t\tonInvalid={onInvalid}\r\n\t\t\t\t\tonSelect={onSelect}\r\n\t\t\t\t\t{...props}>\r\n\t\t\t\t\t{placeholder && (\r\n\t\t\t\t\t\t<Option value='' hidden>\r\n\t\t\t\t\t\t\t{placeholder}\r\n\t\t\t\t\t\t</Option>\r\n\t\t\t\t\t)}\r\n\t\t\t\t\t{children || (list && <Options list={list} />)}\r\n\t\t\t\t</select>\r\n\t\t\t\t{isValidMessage && (\r\n\t\t\t\t\t<Validation\r\n\t\t\t\t\t\tisTouched={isTouched}\r\n\t\t\t\t\t\tinvalidFeedback={invalidFeedback}\r\n\t\t\t\t\t\tvalidFeedback={validFeedback}\r\n\t\t\t\t\t\tisTooltip={isTooltipFeedback}\r\n\t\t\t\t\t/>\r\n\t\t\t\t)}\r\n\t\t\t</>\r\n\t\t);\r\n\t},\r\n);\r\nSelect.displayName = 'Select';\r\n\r\nexport default Select;\r\n","import COLORS from './enumColors';\r\nimport { TColor } from '../../type/color-type';\r\n\r\nconst TAGS: { [key: string]: { id: string; color: TColor; title: string } } = {\r\n\tcritical: {\r\n\t\tid: 'critical',\r\n\t\tcolor: COLORS.SUCCESS.name,\r\n\t\ttitle: 'Critical',\r\n\t},\r\n\tdesign: {\r\n\t\tid: 'design',\r\n\t\tcolor: COLORS.WARNING.name,\r\n\t\ttitle: 'Design',\r\n\t},\r\n\tcode: {\r\n\t\tid: 'code',\r\n\t\tcolor: COLORS.INFO.name,\r\n\t\ttitle: 'Code',\r\n\t},\r\n\treview: {\r\n\t\tid: 'review',\r\n\t\tcolor: COLORS.INFO.name,\r\n\t\ttitle: 'Review',\r\n\t},\r\n\trevise: {\r\n\t\tid: 'revise',\r\n\t\tcolor: COLORS.SECONDARY.name,\r\n\t\ttitle: 'Revise',\r\n\t},\r\n};\r\n\r\nexport function getTagsDataWithId(id: { toString: () => any }) {\r\n\t// @ts-ignore\r\n\treturn TAGS[Object.keys(TAGS).filter((f) => TAGS[f].id.toString() === id.toString())];\r\n}\r\n\r\nexport default TAGS;\r\n","import { TCard } from '../type/types';\r\n\r\n/**\r\n * A little function to help us with reordering the result\r\n * @param list\r\n * @param startIndex\r\n * @param endIndex\r\n */\r\nexport const reorder = (list: TCard[], startIndex: number, endIndex: number): TCard[] => {\r\n\tconst result = Array.from(list);\r\n\tconst [removed] = result.splice(startIndex, 1);\r\n\tresult.splice(endIndex, 0, removed);\r\n\r\n\treturn result;\r\n};\r\n\r\n/**\r\n * Moves an item from one list to another list.\r\n * @param source\r\n * @param destination\r\n * @param droppableSource\r\n * @param droppableDestination\r\n */\r\nexport const move = (\r\n\tsource: TCard[],\r\n\tdestination: TCard[],\r\n\tdroppableSource: { index: number; droppableId: string },\r\n\tdroppableDestination: { index: number; droppableId: string },\r\n) => {\r\n\tconst sourceClone: TCard[] = Array.from(source);\r\n\tconst destClone: TCard[] = Array.from(destination);\r\n\tconst [removed] = sourceClone.splice(droppableSource.index, 1);\r\n\r\n\tdestClone.splice(droppableDestination.index, 0, removed);\r\n\r\n\tconst result: { [key: string]: TCard[] } = {};\r\n\tresult[droppableSource.droppableId] = sourceClone;\r\n\tresult[droppableDestination.droppableId] = destClone;\r\n\r\n\treturn result;\r\n};\r\n","import React, { FC, ReactNode } from 'react';\r\n\r\ninterface IBoard {\r\n\tchildren: ReactNode;\r\n}\r\nconst Board: FC<IBoard> = ({ children }) => {\r\n\treturn <div className='board row mx-n4 pb-3 px-3'>{children}</div>;\r\n};\r\n\r\nexport default Board;\r\n","import React, { FC, useState } from 'react';\r\nimport { useFormik } from 'formik';\r\nimport classNames from 'classnames';\r\nimport useDarkMode from '../../../../hooks/useDarkMode';\r\nimport Card, {\r\n\tCardActions,\r\n\tCardBody,\r\n\tCardFooter,\r\n\tCardFooterLeft,\r\n\tCardHeader,\r\n\tCardLabel,\r\n\tCardSubTitle,\r\n\tCardTitle,\r\n} from '../../../../components/bootstrap/Card';\r\nimport Avatar from '../../../../components/Avatar';\r\nimport Icon from '../../../../components/icon/Icon';\r\nimport Badge from '../../../../components/bootstrap/Badge';\r\nimport Modal, {\r\n\tModalBody,\r\n\tModalFooter,\r\n\tModalHeader,\r\n\tModalTitle,\r\n} from '../../../../components/bootstrap/Modal';\r\nimport FormGroup from '../../../../components/bootstrap/forms/FormGroup';\r\nimport Input from '../../../../components/bootstrap/forms/Input';\r\nimport Textarea from '../../../../components/bootstrap/forms/Textarea';\r\nimport Button from '../../../../components/bootstrap/Button';\r\nimport Checks, { ChecksGroup } from '../../../../components/bootstrap/forms/Checks';\r\nimport Chat, { ChatGroup } from '../../../../components/Chat';\r\nimport CHATS from '../../../../common/data/chatDummyData';\r\nimport InputGroup from '../../../../components/bootstrap/forms/InputGroup';\r\nimport Select from '../../../../components/bootstrap/forms/Select';\r\nimport Option from '../../../../components/bootstrap/Option';\r\nimport USERS from '../../../../common/data/userDummyData';\r\nimport TAGS from '../../../../common/data/boardTagsData';\r\nimport { TCard, TCards, TColumnsData } from '../type/types';\r\nimport { move } from '../helper/helper';\r\n\r\ninterface IColumnCard {\r\n\tcolumnKey: string;\r\n\tcolumnsData: TColumnsData;\r\n\tcard: TCard;\r\n\tcardsData: TCards;\r\n\tsetCardsData(...args: unknown[]): unknown;\r\n\tindex: number;\r\n}\r\nconst ColumnCard: FC<IColumnCard> = ({\r\n\tcolumnKey,\r\n\tcolumnsData,\r\n\tcard,\r\n\tcardsData,\r\n\tsetCardsData,\r\n\tindex,\r\n}) => {\r\n\tconst { darkModeStatus } = useDarkMode();\r\n\tconst [editModalStatus, setEditModalStatus] = useState<boolean>(false);\r\n\r\n\tconst formik = useFormik({\r\n\t\tinitialValues: {\r\n\t\t\tcardName: card.title || '',\r\n\t\t\tgroupId: columnKey || '',\r\n\t\t\tdescription: card.description || '',\r\n\t\t\tassignee: card.user.username || '',\r\n\t\t\ttask:\r\n\t\t\t\t(card.tasks && card.tasks.filter((f) => f.status).map((m) => m.id.toString())) ||\r\n\t\t\t\t[],\r\n\t\t\ttags: (card.tags && card.tags.map((m) => m.id)) || [],\r\n\t\t},\r\n\t\tonSubmit: (values) => {\r\n\t\t\tconst RESULT = move(\r\n\t\t\t\tcardsData[columnKey],\r\n\t\t\t\tcardsData[formik.values.groupId],\r\n\t\t\t\t{\r\n\t\t\t\t\tindex,\r\n\t\t\t\t\tdroppableId: columnKey,\r\n\t\t\t\t},\r\n\t\t\t\t{ index: 0, droppableId: values.groupId },\r\n\t\t\t);\r\n\t\t\tsetCardsData({ ...cardsData, ...RESULT });\r\n\t\t\tsetEditModalStatus(false);\r\n\t\t},\r\n\t});\r\n\r\n\treturn (\r\n\t\t<>\r\n\t\t\t<CardHeader>\r\n\t\t\t\t<CardLabel>\r\n\t\t\t\t\t<CardTitle\r\n\t\t\t\t\t\ttag='div'\r\n\t\t\t\t\t\tclassName={classNames('h6', 'cursor-pointer', {\r\n\t\t\t\t\t\t\t'link-dark': !darkModeStatus,\r\n\t\t\t\t\t\t\t'link-light': darkModeStatus,\r\n\t\t\t\t\t\t})}\r\n\t\t\t\t\t\tonClick={() => setEditModalStatus(true)}\r\n\t\t\t\t\t\tdata-tour={card.title}>\r\n\t\t\t\t\t\t{card.title}\r\n\t\t\t\t\t</CardTitle>\r\n\t\t\t\t\t{card.subtitle && (\r\n\t\t\t\t\t\t<CardSubTitle className='text-muted'>{card.subtitle}</CardSubTitle>\r\n\t\t\t\t\t)}\r\n\t\t\t\t</CardLabel>\r\n\t\t\t\t{card.user && (\r\n\t\t\t\t\t<CardActions>\r\n\t\t\t\t\t\t<Avatar\r\n\t\t\t\t\t\t\tsrc={card.user.src}\r\n\t\t\t\t\t\t\tsrcSet={card.user.srcSet}\r\n\t\t\t\t\t\t\tcolor={card.user.color}\r\n\t\t\t\t\t\t\tsize={24}\r\n\t\t\t\t\t\t\tuserName={`${card.user.name} ${card.user.surname}`}\r\n\t\t\t\t\t\t/>\r\n\t\t\t\t\t</CardActions>\r\n\t\t\t\t)}\r\n\t\t\t</CardHeader>\r\n\t\t\t<CardBody className='pt-0'>\r\n\t\t\t\t<div className='row g-2 mb-3'>\r\n\t\t\t\t\t{!!card?.attachments?.length && (\r\n\t\t\t\t\t\t<div className='col-auto'>\r\n\t\t\t\t\t\t\t<small className='border border-info border-2 text-info fw-bold px-2 py-1 rounded-1'>\r\n\t\t\t\t\t\t\t\t<Icon icon='AttachFile' className='me-1' />\r\n\t\t\t\t\t\t\t\t{card.attachments.length}\r\n\t\t\t\t\t\t\t</small>\r\n\t\t\t\t\t\t</div>\r\n\t\t\t\t\t)}\r\n\t\t\t\t\t{!!card?.tasks?.length && (\r\n\t\t\t\t\t\t<div className='col-auto'>\r\n\t\t\t\t\t\t\t<small className='border border-info border-2 text-info fw-bold px-2 py-1 rounded-1'>\r\n\t\t\t\t\t\t\t\t<Icon icon='TaskAlt' className='me-1' />\r\n\t\t\t\t\t\t\t\t{card.tasks.length}\r\n\t\t\t\t\t\t\t</small>\r\n\t\t\t\t\t\t</div>\r\n\t\t\t\t\t)}\r\n\t\t\t\t\t{card.label && (\r\n\t\t\t\t\t\t<div className='col-auto'>\r\n\t\t\t\t\t\t\t<small className='border border-success border-2 text-success fw-bold px-2 py-1 rounded-1'>\r\n\t\t\t\t\t\t\t\t{card.label}\r\n\t\t\t\t\t\t\t</small>\r\n\t\t\t\t\t\t</div>\r\n\t\t\t\t\t)}\r\n\t\t\t\t</div>\r\n\t\t\t\t{card.img && (\r\n\t\t\t\t\t<img\r\n\t\t\t\t\t\tsrc={card.img}\r\n\t\t\t\t\t\tclassName={classNames('img-fluid rounded mb-3 mt-1', {\r\n\t\t\t\t\t\t\t'bg-lo25-primary': darkModeStatus,\r\n\t\t\t\t\t\t\t'bg-l25-primary': !darkModeStatus,\r\n\t\t\t\t\t\t})}\r\n\t\t\t\t\t\talt={card.title}\r\n\t\t\t\t\t/>\r\n\t\t\t\t)}\r\n\t\t\t\t{card.description}\r\n\t\t\t</CardBody>\r\n\t\t\t{card.tags && (\r\n\t\t\t\t<CardFooter className='pt-0' size='sm'>\r\n\t\t\t\t\t<CardFooterLeft>\r\n\t\t\t\t\t\t{card.tags.map((tag) => (\r\n\t\t\t\t\t\t\t<Badge key={tag.id} color={tag.color} isLight>\r\n\t\t\t\t\t\t\t\t{tag.title}\r\n\t\t\t\t\t\t\t</Badge>\r\n\t\t\t\t\t\t))}\r\n\t\t\t\t\t</CardFooterLeft>\r\n\t\t\t\t</CardFooter>\r\n\t\t\t)}\r\n\r\n\t\t\t<Modal\r\n\t\t\t\tsetIsOpen={setEditModalStatus}\r\n\t\t\t\tisOpen={editModalStatus}\r\n\t\t\t\tsize='lg'\r\n\t\t\t\tisScrollable\r\n\t\t\t\tdata-tour='mail-app-modal'>\r\n\t\t\t\t<ModalHeader className='px-4' setIsOpen={setEditModalStatus}>\r\n\t\t\t\t\t<ModalTitle id='project-edit'>{card.title}</ModalTitle>\r\n\t\t\t\t</ModalHeader>\r\n\t\t\t\t<ModalBody className='px-4'>\r\n\t\t\t\t\t<div className='row'>\r\n\t\t\t\t\t\t<div className='col-md-8'>\r\n\t\t\t\t\t\t\t<Card shadow='sm'>\r\n\t\t\t\t\t\t\t\t<CardHeader>\r\n\t\t\t\t\t\t\t\t\t<CardLabel icon='Info' iconColor='success'>\r\n\t\t\t\t\t\t\t\t\t\t<CardTitle>Task Information</CardTitle>\r\n\t\t\t\t\t\t\t\t\t</CardLabel>\r\n\t\t\t\t\t\t\t\t</CardHeader>\r\n\t\t\t\t\t\t\t\t<CardBody>\r\n\t\t\t\t\t\t\t\t\t<div className='row g-4'>\r\n\t\t\t\t\t\t\t\t\t\t<FormGroup\r\n\t\t\t\t\t\t\t\t\t\t\tclassName='col-12'\r\n\t\t\t\t\t\t\t\t\t\t\tid='cardName'\r\n\t\t\t\t\t\t\t\t\t\t\tlabel='Task Name'>\r\n\t\t\t\t\t\t\t\t\t\t\t<Input\r\n\t\t\t\t\t\t\t\t\t\t\t\tonChange={formik.handleChange}\r\n\t\t\t\t\t\t\t\t\t\t\t\tvalue={formik.values.cardName}\r\n\t\t\t\t\t\t\t\t\t\t\t/>\r\n\t\t\t\t\t\t\t\t\t\t</FormGroup>\r\n\t\t\t\t\t\t\t\t\t\t<FormGroup\r\n\t\t\t\t\t\t\t\t\t\t\tclassName='col-12'\r\n\t\t\t\t\t\t\t\t\t\t\tid='description'\r\n\t\t\t\t\t\t\t\t\t\t\tlabel='Description'>\r\n\t\t\t\t\t\t\t\t\t\t\t<Textarea\r\n\t\t\t\t\t\t\t\t\t\t\t\tonChange={formik.handleChange}\r\n\t\t\t\t\t\t\t\t\t\t\t\tvalue={formik.values.description}\r\n\t\t\t\t\t\t\t\t\t\t\t/>\r\n\t\t\t\t\t\t\t\t\t\t</FormGroup>\r\n\t\t\t\t\t\t\t\t\t</div>\r\n\t\t\t\t\t\t\t\t</CardBody>\r\n\t\t\t\t\t\t\t</Card>\r\n\t\t\t\t\t\t\t{card.attachments && (\r\n\t\t\t\t\t\t\t\t<Card shadow='sm'>\r\n\t\t\t\t\t\t\t\t\t<CardHeader>\r\n\t\t\t\t\t\t\t\t\t\t<CardLabel icon='AttachFile' iconColor='danger'>\r\n\t\t\t\t\t\t\t\t\t\t\t<CardTitle>Attachment</CardTitle>\r\n\t\t\t\t\t\t\t\t\t\t\t<CardSubTitle>\r\n\t\t\t\t\t\t\t\t\t\t\t\t{card.attachments.length} files\r\n\t\t\t\t\t\t\t\t\t\t\t</CardSubTitle>\r\n\t\t\t\t\t\t\t\t\t\t</CardLabel>\r\n\t\t\t\t\t\t\t\t\t\t<CardActions>\r\n\t\t\t\t\t\t\t\t\t\t\t<Button color='danger' isOutline>\r\n\t\t\t\t\t\t\t\t\t\t\t\tNew\r\n\t\t\t\t\t\t\t\t\t\t\t</Button>\r\n\t\t\t\t\t\t\t\t\t\t</CardActions>\r\n\t\t\t\t\t\t\t\t\t</CardHeader>\r\n\t\t\t\t\t\t\t\t\t<CardBody>\r\n\t\t\t\t\t\t\t\t\t\t<div className='row g-3'>\r\n\t\t\t\t\t\t\t\t\t\t\t{card.attachments.map((a) => (\r\n\t\t\t\t\t\t\t\t\t\t\t\t<div key={a.id} className='col-auto'>\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t<Button\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t\tcolor='danger'\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t\tisLight\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t\ticon='CloudDownload'>\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t{a.file}\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t</Button>\r\n\t\t\t\t\t\t\t\t\t\t\t\t</div>\r\n\t\t\t\t\t\t\t\t\t\t\t))}\r\n\t\t\t\t\t\t\t\t\t\t</div>\r\n\t\t\t\t\t\t\t\t\t</CardBody>\r\n\t\t\t\t\t\t\t\t</Card>\r\n\t\t\t\t\t\t\t)}\r\n\t\t\t\t\t\t\t{card.tasks && (\r\n\t\t\t\t\t\t\t\t<Card shadow='sm'>\r\n\t\t\t\t\t\t\t\t\t<CardHeader>\r\n\t\t\t\t\t\t\t\t\t\t<CardLabel icon='Task Alt' iconColor='primary'>\r\n\t\t\t\t\t\t\t\t\t\t\t<CardTitle>Tasks</CardTitle>\r\n\t\t\t\t\t\t\t\t\t\t\t<CardSubTitle>{card.tasks.length} tasks</CardSubTitle>\r\n\t\t\t\t\t\t\t\t\t\t</CardLabel>\r\n\t\t\t\t\t\t\t\t\t\t<CardActions>\r\n\t\t\t\t\t\t\t\t\t\t\t<Button color='primary' isOutline>\r\n\t\t\t\t\t\t\t\t\t\t\t\tNew\r\n\t\t\t\t\t\t\t\t\t\t\t</Button>\r\n\t\t\t\t\t\t\t\t\t\t</CardActions>\r\n\t\t\t\t\t\t\t\t\t</CardHeader>\r\n\t\t\t\t\t\t\t\t\t<CardBody>\r\n\t\t\t\t\t\t\t\t\t\t<ChecksGroup>\r\n\t\t\t\t\t\t\t\t\t\t\t{/* @ts-ignore */}\r\n\t\t\t\t\t\t\t\t\t\t\t{card.tasks.map((t) => (\r\n\t\t\t\t\t\t\t\t\t\t\t\t<Checks\r\n\t\t\t\t\t\t\t\t\t\t\t\t\tkey={t.id}\r\n\t\t\t\t\t\t\t\t\t\t\t\t\tid={t.id.toString()}\r\n\t\t\t\t\t\t\t\t\t\t\t\t\tname='task'\r\n\t\t\t\t\t\t\t\t\t\t\t\t\tlabel={t.text}\r\n\t\t\t\t\t\t\t\t\t\t\t\t\tvalue={t.id}\r\n\t\t\t\t\t\t\t\t\t\t\t\t\tonChange={formik.handleChange}\r\n\t\t\t\t\t\t\t\t\t\t\t\t\tchecked={formik.values.task.includes(\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t\tt.id.toString(),\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t)}\r\n\t\t\t\t\t\t\t\t\t\t\t\t/>\r\n\t\t\t\t\t\t\t\t\t\t\t))}\r\n\t\t\t\t\t\t\t\t\t\t</ChecksGroup>\r\n\t\t\t\t\t\t\t\t\t</CardBody>\r\n\t\t\t\t\t\t\t\t</Card>\r\n\t\t\t\t\t\t\t)}\r\n\t\t\t\t\t\t\t<Card shadow='sm'>\r\n\t\t\t\t\t\t\t\t<CardHeader>\r\n\t\t\t\t\t\t\t\t\t<CardLabel icon='QuestionAnswer' iconColor='info'>\r\n\t\t\t\t\t\t\t\t\t\t<CardTitle>Comments</CardTitle>\r\n\t\t\t\t\t\t\t\t\t</CardLabel>\r\n\t\t\t\t\t\t\t\t</CardHeader>\r\n\t\t\t\t\t\t\t\t<CardBody>\r\n\t\t\t\t\t\t\t\t\t<Chat>\r\n\t\t\t\t\t\t\t\t\t\t{CHATS.CHLOE_VS_JOHN.map((msg) => (\r\n\t\t\t\t\t\t\t\t\t\t\t<ChatGroup\r\n\t\t\t\t\t\t\t\t\t\t\t\tkey={msg.id}\r\n\t\t\t\t\t\t\t\t\t\t\t\tmessages={msg.messages}\r\n\t\t\t\t\t\t\t\t\t\t\t\t// @ts-ignore\r\n\t\t\t\t\t\t\t\t\t\t\t\tuser={msg.user}\r\n\t\t\t\t\t\t\t\t\t\t\t\tisReply={msg.isReply}\r\n\t\t\t\t\t\t\t\t\t\t\t/>\r\n\t\t\t\t\t\t\t\t\t\t))}\r\n\t\t\t\t\t\t\t\t\t</Chat>\r\n\t\t\t\t\t\t\t\t</CardBody>\r\n\t\t\t\t\t\t\t\t<CardFooter className='d-block'>\r\n\t\t\t\t\t\t\t\t\t<InputGroup>\r\n\t\t\t\t\t\t\t\t\t\t<Textarea />\r\n\t\t\t\t\t\t\t\t\t\t<Button color='info' icon='Send'>\r\n\t\t\t\t\t\t\t\t\t\t\tSEND\r\n\t\t\t\t\t\t\t\t\t\t</Button>\r\n\t\t\t\t\t\t\t\t\t</InputGroup>\r\n\t\t\t\t\t\t\t\t</CardFooter>\r\n\t\t\t\t\t\t\t</Card>\r\n\t\t\t\t\t\t</div>\r\n\t\t\t\t\t\t<div className='col-md-4'>\r\n\t\t\t\t\t\t\t<div className='row g-4 sticky-top'>\r\n\t\t\t\t\t\t\t\t<FormGroup className='col-12' id='groupId' label='Status'>\r\n\t\t\t\t\t\t\t\t\t<Select\r\n\t\t\t\t\t\t\t\t\t\tariaLabel='Board select'\r\n\t\t\t\t\t\t\t\t\t\tplaceholder='Select group'\r\n\t\t\t\t\t\t\t\t\t\tonChange={formik.handleChange}\r\n\t\t\t\t\t\t\t\t\t\tvalue={formik.values.groupId}>\r\n\t\t\t\t\t\t\t\t\t\t{Object.keys(columnsData).map((columnItemKey) => (\r\n\t\t\t\t\t\t\t\t\t\t\t<Option\r\n\t\t\t\t\t\t\t\t\t\t\t\tkey={columnsData[columnItemKey].id}\r\n\t\t\t\t\t\t\t\t\t\t\t\tvalue={columnsData[columnItemKey].id}>\r\n\t\t\t\t\t\t\t\t\t\t\t\t{columnsData[columnItemKey].title}\r\n\t\t\t\t\t\t\t\t\t\t\t</Option>\r\n\t\t\t\t\t\t\t\t\t\t))}\r\n\t\t\t\t\t\t\t\t\t</Select>\r\n\t\t\t\t\t\t\t\t</FormGroup>\r\n\t\t\t\t\t\t\t\t<FormGroup className='col-12' id='assignee' label='Assignee'>\r\n\t\t\t\t\t\t\t\t\t<Select\r\n\t\t\t\t\t\t\t\t\t\tariaLabel='Board select'\r\n\t\t\t\t\t\t\t\t\t\tplaceholder='Select group'\r\n\t\t\t\t\t\t\t\t\t\tonChange={formik.handleChange}\r\n\t\t\t\t\t\t\t\t\t\tvalue={formik.values.assignee}>\r\n\t\t\t\t\t\t\t\t\t\t{Object.keys(USERS).map((u) => (\r\n\t\t\t\t\t\t\t\t\t\t\t// @ts-ignore\r\n\t\t\t\t\t\t\t\t\t\t\t<Option key={USERS[u].id} value={USERS[u].username}>\r\n\t\t\t\t\t\t\t\t\t\t\t\t{\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t// @ts-ignore\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t`${USERS[u].name} ${USERS[u].surname}`\r\n\t\t\t\t\t\t\t\t\t\t\t\t}\r\n\t\t\t\t\t\t\t\t\t\t\t</Option>\r\n\t\t\t\t\t\t\t\t\t\t))}\r\n\t\t\t\t\t\t\t\t\t</Select>\r\n\t\t\t\t\t\t\t\t</FormGroup>\r\n\t\t\t\t\t\t\t\t<FormGroup className='col-12' id='tags' label='Tags'>\r\n\t\t\t\t\t\t\t\t\t<Select\r\n\t\t\t\t\t\t\t\t\t\tmultiple\r\n\t\t\t\t\t\t\t\t\t\tariaLabel='Board select'\r\n\t\t\t\t\t\t\t\t\t\tplaceholder='Select group'\r\n\t\t\t\t\t\t\t\t\t\tonChange={formik.handleChange}\r\n\t\t\t\t\t\t\t\t\t\tvalue={formik.values.tags}>\r\n\t\t\t\t\t\t\t\t\t\t{Object.keys(TAGS).map((t) => (\r\n\t\t\t\t\t\t\t\t\t\t\t// @ts-ignore\r\n\t\t\t\t\t\t\t\t\t\t\t<Option key={TAGS[t].id} value={TAGS[t].id}>\r\n\t\t\t\t\t\t\t\t\t\t\t\t{\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t// @ts-ignore\r\n\t\t\t\t\t\t\t\t\t\t\t\t\tTAGS[t].title\r\n\t\t\t\t\t\t\t\t\t\t\t\t}\r\n\t\t\t\t\t\t\t\t\t\t\t</Option>\r\n\t\t\t\t\t\t\t\t\t\t))}\r\n\t\t\t\t\t\t\t\t\t</Select>\r\n\t\t\t\t\t\t\t\t</FormGroup>\r\n\t\t\t\t\t\t\t</div>\r\n\t\t\t\t\t\t</div>\r\n\t\t\t\t\t</div>\r\n\t\t\t\t</ModalBody>\r\n\t\t\t\t<ModalFooter className='px-4 pb-4'>\r\n\t\t\t\t\t<Button\r\n\t\t\t\t\t\tcolor='primary'\r\n\t\t\t\t\t\tclassName='w-100'\r\n\t\t\t\t\t\ttype='submit'\r\n\t\t\t\t\t\tonClick={formik.handleSubmit}>\r\n\t\t\t\t\t\tSave\r\n\t\t\t\t\t</Button>\r\n\t\t\t\t</ModalFooter>\r\n\t\t\t</Modal>\r\n\t\t</>\r\n\t);\r\n};\r\n\r\nexport default ColumnCard;\r\n","import React, { FC } from 'react';\r\nimport { Draggable, DraggableProvided, DraggableStateSnapshot } from '@hello-pangea/dnd';\r\nimport classNames from 'classnames';\r\nimport Card from '../../../../components/bootstrap/Card';\r\nimport { getItemStyle } from '../helper/style';\r\nimport { TCard, TCards, TColumnsData } from '../type/types';\r\nimport ColumnCard from './ColumnCard';\r\n\r\ninterface IColumnCardWrapper {\r\n\tcolumnKey: string;\r\n\tcolumnsData: TColumnsData;\r\n\tcardsData: TCards;\r\n\tsetCardsData(...args: unknown[]): unknown;\r\n}\r\nconst ColumnCardWrapper: FC<IColumnCardWrapper> = ({\r\n\tcolumnKey,\r\n\tcolumnsData,\r\n\tcardsData,\r\n\tsetCardsData,\r\n}) => {\r\n\tconst cardsInTheColumn: TCard[] = cardsData[columnKey];\r\n\r\n\treturn (\r\n\t\t<>\r\n\t\t\t{cardsInTheColumn.map((card, index) => (\r\n\t\t\t\t<Draggable key={card.id} draggableId={card.id} index={index}>\r\n\t\t\t\t\t{(\r\n\t\t\t\t\t\tprovidedDraggable: DraggableProvided,\r\n\t\t\t\t\t\tsnapshotDraggable: DraggableStateSnapshot,\r\n\t\t\t\t\t) => (\r\n\t\t\t\t\t\t<Card\r\n\t\t\t\t\t\t\tshadow='none'\r\n\t\t\t\t\t\t\tborderSize={1}\r\n\t\t\t\t\t\t\tclassName={classNames('rounded-2', {\r\n\t\t\t\t\t\t\t\t'border-info': snapshotDraggable.isDragging,\r\n\t\t\t\t\t\t\t})}\r\n\t\t\t\t\t\t\tref={providedDraggable.innerRef}\r\n\t\t\t\t\t\t\t// eslint-disable-next-line react/jsx-props-no-spreading\r\n\t\t\t\t\t\t\t{...providedDraggable.draggableProps}\r\n\t\t\t\t\t\t\t// eslint-disable-next-line react/jsx-props-no-spreading\r\n\t\t\t\t\t\t\t{...providedDraggable.dragHandleProps}\r\n\t\t\t\t\t\t\tstyle={getItemStyle(\r\n\t\t\t\t\t\t\t\tsnapshotDraggable.isDragging,\r\n\t\t\t\t\t\t\t\tprovidedDraggable.draggableProps.style,\r\n\t\t\t\t\t\t\t)}>\r\n\t\t\t\t\t\t\t<ColumnCard\r\n\t\t\t\t\t\t\t\tcolumnKey={columnKey}\r\n\t\t\t\t\t\t\t\tcolumnsData={columnsData}\r\n\t\t\t\t\t\t\t\tcard={card}\r\n\t\t\t\t\t\t\t\tcardsData={cardsData}\r\n\t\t\t\t\t\t\t\tsetCardsData={setCardsData}\r\n\t\t\t\t\t\t\t\tindex={index}\r\n\t\t\t\t\t\t\t/>\r\n\t\t\t\t\t\t</Card>\r\n\t\t\t\t\t)}\r\n\t\t\t\t</Draggable>\r\n\t\t\t))}\r\n\t\t</>\r\n\t);\r\n};\r\n\r\nexport default ColumnCardWrapper;\r\n","import { CSSProperties } from 'react';\r\nimport { DraggableStyle } from '@hello-pangea/dnd';\r\n\r\nexport const getItemStyle = (\r\n\tisDragging: boolean,\r\n\tdraggableStyle: DraggableStyle | undefined,\r\n): CSSProperties => ({\r\n\t// @ts-ignore\r\n\t'--bs-border-style': isDragging ? 'dashed' : 'inherit',\r\n\tuserSelect: 'none',\r\n\r\n\t// styles we need to apply on draggables\r\n\t...draggableStyle,\r\n});\r\n\r\nexport const getListStyle = (isDraggingOver: boolean): CSSProperties => ({\r\n\tbackground: isDraggingOver ? 'rgba(0,0,0,0.1)' : undefined,\r\n});\r\n","import React, { FC, useState } from 'react';\r\nimport { useFormik } from 'formik';\r\nimport classNames from 'classnames';\r\nimport { Droppable, DroppableProvided, DroppableStateSnapshot } from '@hello-pangea/dnd';\r\nimport useDarkMode from '../../../../hooks/useDarkMode';\r\nimport Card, {\r\n\tCardActions,\r\n\tCardBody,\r\n\tCardFooter,\r\n\tCardFooterLeft,\r\n\tCardHeader,\r\n\tCardLabel,\r\n\tCardTitle,\r\n} from '../../../../components/bootstrap/Card';\r\nimport Badge from '../../../../components/bootstrap/Badge';\r\nimport Dropdown, {\r\n\tDropdownItem,\r\n\tDropdownMenu,\r\n\tDropdownToggle,\r\n} from '../../../../components/bootstrap/Dropdown';\r\nimport Button from '../../../../components/bootstrap/Button';\r\nimport { getListStyle } from '../helper/style';\r\nimport Modal, {\r\n\tModalBody,\r\n\tModalFooter,\r\n\tModalHeader,\r\n\tModalTitle,\r\n} from '../../../../components/bootstrap/Modal';\r\nimport FormGroup from '../../../../components/bootstrap/forms/FormGroup';\r\nimport Input from '../../../../components/bootstrap/forms/Input';\r\nimport Textarea from '../../../../components/bootstrap/forms/Textarea';\r\nimport Select from '../../../../components/bootstrap/forms/Select';\r\nimport Option from '../../../../components/bootstrap/Option';\r\nimport USERS from '../../../../common/data/userDummyData';\r\nimport TAGS from '../../../../common/data/boardTagsData';\r\nimport { TCards, TColumnData, TColumnsData } from '../type/types';\r\nimport ColumnCardWrapper from './ColumnCardWrapper';\r\n\r\ninterface IColumns {\r\n\tcardsData: TCards;\r\n\tcolumnsData: TColumnsData;\r\n\tsetCardsData(...args: unknown[]): unknown;\r\n}\r\nconst Columns: FC<IColumns> = ({ cardsData, columnsData, setCardsData }) => {\r\n\tconst { darkModeStatus } = useDarkMode();\r\n\r\n\tconst [editModalStatus, setEditModalStatus] = useState<boolean>(false);\r\n\r\n\tconst formik = useFormik({\r\n\t\tinitialValues: {\r\n\t\t\tcardName: '',\r\n\t\t\tgroupId: '',\r\n\t\t\tdescription: '',\r\n\t\t\tassignee: '',\r\n\t\t\ttask: [],\r\n\t\t\ttags: [],\r\n\t\t},\r\n\t\t// eslint-disable-next-line @typescript-eslint/no-unused-vars\r\n\t\tonSubmit: (values) => {\r\n\t\t\tsetEditModalStatus(false);\r\n\t\t},\r\n\t});\r\n\treturn (\r\n\t\t<>\r\n\t\t\t{Object.keys(columnsData).map((columnKey) => {\r\n\t\t\t\tconst columnData: TColumnData = columnsData[columnKey];\r\n\t\t\t\treturn (\r\n\t\t\t\t\t<div key={columnKey} className='col-auto'>\r\n\t\t\t\t\t\t<Card className={classNames(`board-group shadow-3d-${columnData.color}`)}>\r\n\t\t\t\t\t\t\t<CardHeader>\r\n\t\t\t\t\t\t\t\t<CardLabel icon={columnData.icon} iconColor={columnData.color}>\r\n\t\t\t\t\t\t\t\t\t<CardTitle tag='div' className='h5'>\r\n\t\t\t\t\t\t\t\t\t\t<>{columnData.title} </>\r\n\t\t\t\t\t\t\t\t\t\t<Badge color={columnData.color} isLight>\r\n\t\t\t\t\t\t\t\t\t\t\t{cardsData[columnKey].length}\r\n\t\t\t\t\t\t\t\t\t\t</Badge>\r\n\t\t\t\t\t\t\t\t\t</CardTitle>\r\n\t\t\t\t\t\t\t\t</CardLabel>\r\n\t\t\t\t\t\t\t\t<CardActions>\r\n\t\t\t\t\t\t\t\t\t<Dropdown>\r\n\t\t\t\t\t\t\t\t\t\t<DropdownToggle hasIcon={false}>\r\n\t\t\t\t\t\t\t\t\t\t\t<Button\r\n\t\t\t\t\t\t\t\t\t\t\t\ticon='MoreVert'\r\n\t\t\t\t\t\t\t\t\t\t\t\tcolor={darkModeStatus ? 'dark' : undefined}\r\n\t\t\t\t\t\t\t\t\t\t\t\taria-label='More actions'\r\n\t\t\t\t\t\t\t\t\t\t\t/>\r\n\t\t\t\t\t\t\t\t\t\t</DropdownToggle>\r\n\t\t\t\t\t\t\t\t\t\t<DropdownMenu isAlignmentEnd>\r\n\t\t\t\t\t\t\t\t\t\t\t<DropdownItem>\r\n\t\t\t\t\t\t\t\t\t\t\t\t<Button icon='Edit'>Rename column</Button>\r\n\t\t\t\t\t\t\t\t\t\t\t</DropdownItem>\r\n\t\t\t\t\t\t\t\t\t\t\t<DropdownItem>\r\n\t\t\t\t\t\t\t\t\t\t\t\t<Button icon='Speed'>Set column limit</Button>\r\n\t\t\t\t\t\t\t\t\t\t\t</DropdownItem>\r\n\t\t\t\t\t\t\t\t\t\t\t<DropdownItem>\r\n\t\t\t\t\t\t\t\t\t\t\t\t<Button icon='AddBox'>Add new column</Button>\r\n\t\t\t\t\t\t\t\t\t\t\t</DropdownItem>\r\n\t\t\t\t\t\t\t\t\t\t\t<DropdownItem isDivider />\r\n\t\t\t\t\t\t\t\t\t\t\t<DropdownItem>\r\n\t\t\t\t\t\t\t\t\t\t\t\t<Button icon='Delete'>Delete column</Button>\r\n\t\t\t\t\t\t\t\t\t\t\t</DropdownItem>\r\n\t\t\t\t\t\t\t\t\t\t</DropdownMenu>\r\n\t\t\t\t\t\t\t\t\t</Dropdown>\r\n\t\t\t\t\t\t\t\t</CardActions>\r\n\t\t\t\t\t\t\t</CardHeader>\r\n\t\t\t\t\t\t\t<Droppable droppableId={columnKey}>\r\n\t\t\t\t\t\t\t\t{(\r\n\t\t\t\t\t\t\t\t\tprovidedDroppable: DroppableProvided,\r\n\t\t\t\t\t\t\t\t\tsnapshotDroppable: DroppableStateSnapshot,\r\n\t\t\t\t\t\t\t\t) => (\r\n\t\t\t\t\t\t\t\t\t<CardBody\r\n\t\t\t\t\t\t\t\t\t\t// eslint-disable-next-line react/jsx-props-no-spreading\r\n\t\t\t\t\t\t\t\t\t\t{...providedDroppable.droppableProps}\r\n\t\t\t\t\t\t\t\t\t\tref={providedDroppable.innerRef}\r\n\t\t\t\t\t\t\t\t\t\tstyle={getListStyle(snapshotDroppable.isDraggingOver)}>\r\n\t\t\t\t\t\t\t\t\t\t<ColumnCardWrapper\r\n\t\t\t\t\t\t\t\t\t\t\tcolumnKey={columnKey}\r\n\t\t\t\t\t\t\t\t\t\t\tcolumnsData={columnsData}\r\n\t\t\t\t\t\t\t\t\t\t\tcardsData={cardsData}\r\n\t\t\t\t\t\t\t\t\t\t\tsetCardsData={setCardsData}\r\n\t\t\t\t\t\t\t\t\t\t/>\r\n\t\t\t\t\t\t\t\t\t\t{providedDroppable.placeholder}\r\n\t\t\t\t\t\t\t\t\t</CardBody>\r\n\t\t\t\t\t\t\t\t)}\r\n\t\t\t\t\t\t\t</Droppable>\r\n\t\t\t\t\t\t\t<CardFooter>\r\n\t\t\t\t\t\t\t\t<CardFooterLeft>\r\n\t\t\t\t\t\t\t\t\t<Button\r\n\t\t\t\t\t\t\t\t\t\tcolor={columnData.color}\r\n\t\t\t\t\t\t\t\t\t\tisLight\r\n\t\t\t\t\t\t\t\t\t\ticon='AddTask'\r\n\t\t\t\t\t\t\t\t\t\tonClick={() => setEditModalStatus(true)}>\r\n\t\t\t\t\t\t\t\t\t\tCreate\r\n\t\t\t\t\t\t\t\t\t</Button>\r\n\t\t\t\t\t\t\t\t</CardFooterLeft>\r\n\t\t\t\t\t\t\t</CardFooter>\r\n\t\t\t\t\t\t</Card>\r\n\t\t\t\t\t</div>\r\n\t\t\t\t);\r\n\t\t\t})}\r\n\t\t\t<Modal setIsOpen={setEditModalStatus} isOpen={editModalStatus} size='lg' isScrollable>\r\n\t\t\t\t<ModalHeader className='px-4' setIsOpen={setEditModalStatus}>\r\n\t\t\t\t\t<ModalTitle id='project-edit'>New Card</ModalTitle>\r\n\t\t\t\t</ModalHeader>\r\n\t\t\t\t<ModalBody className='px-4'>\r\n\t\t\t\t\t<div className='row'>\r\n\t\t\t\t\t\t<div className='col-md-8'>\r\n\t\t\t\t\t\t\t<Card shadow='sm'>\r\n\t\t\t\t\t\t\t\t<CardHeader>\r\n\t\t\t\t\t\t\t\t\t<CardLabel icon='Info' iconColor='success'>\r\n\t\t\t\t\t\t\t\t\t\t<CardTitle>Task Information</CardTitle>\r\n\t\t\t\t\t\t\t\t\t</CardLabel>\r\n\t\t\t\t\t\t\t\t</CardHeader>\r\n\t\t\t\t\t\t\t\t<CardBody>\r\n\t\t\t\t\t\t\t\t\t<div className='row g-4'>\r\n\t\t\t\t\t\t\t\t\t\t<FormGroup\r\n\t\t\t\t\t\t\t\t\t\t\tclassName='col-12'\r\n\t\t\t\t\t\t\t\t\t\t\tid='cardName'\r\n\t\t\t\t\t\t\t\t\t\t\tlabel='Task Name'>\r\n\t\t\t\t\t\t\t\t\t\t\t<Input\r\n\t\t\t\t\t\t\t\t\t\t\t\tonChange={formik.handleChange}\r\n\t\t\t\t\t\t\t\t\t\t\t\tvalue={formik.values.cardName}\r\n\t\t\t\t\t\t\t\t\t\t\t/>\r\n\t\t\t\t\t\t\t\t\t\t</FormGroup>\r\n\t\t\t\t\t\t\t\t\t\t<FormGroup\r\n\t\t\t\t\t\t\t\t\t\t\tclassName='col-12'\r\n\t\t\t\t\t\t\t\t\t\t\tid='description'\r\n\t\t\t\t\t\t\t\t\t\t\tlabel='Description'>\r\n\t\t\t\t\t\t\t\t\t\t\t<Textarea\r\n\t\t\t\t\t\t\t\t\t\t\t\tonChange={formik.handleChange}\r\n\t\t\t\t\t\t\t\t\t\t\t\tvalue={formik.values.description}\r\n\t\t\t\t\t\t\t\t\t\t\t/>\r\n\t\t\t\t\t\t\t\t\t\t</FormGroup>\r\n\t\t\t\t\t\t\t\t\t</div>\r\n\t\t\t\t\t\t\t\t</CardBody>\r\n\t\t\t\t\t\t\t</Card>\r\n\t\t\t\t\t\t</div>\r\n\t\t\t\t\t\t<div className='col-md-4'>\r\n\t\t\t\t\t\t\t<div className='row g-4 sticky-top'>\r\n\t\t\t\t\t\t\t\t<FormGroup className='col-12' id='groupId' label='Status'>\r\n\t\t\t\t\t\t\t\t\t<Select\r\n\t\t\t\t\t\t\t\t\t\tariaLabel='Board select'\r\n\t\t\t\t\t\t\t\t\t\tplaceholder='Select group'\r\n\t\t\t\t\t\t\t\t\t\tonChange={formik.handleChange}\r\n\t\t\t\t\t\t\t\t\t\tvalue={formik.values.groupId}>\r\n\t\t\t\t\t\t\t\t\t\t{Object.keys(columnsData).map((columnItemKey) => (\r\n\t\t\t\t\t\t\t\t\t\t\t<Option\r\n\t\t\t\t\t\t\t\t\t\t\t\tkey={columnsData[columnItemKey].id}\r\n\t\t\t\t\t\t\t\t\t\t\t\tvalue={columnsData[columnItemKey].id}>\r\n\t\t\t\t\t\t\t\t\t\t\t\t{columnsData[columnItemKey].title}\r\n\t\t\t\t\t\t\t\t\t\t\t</Option>\r\n\t\t\t\t\t\t\t\t\t\t))}\r\n\t\t\t\t\t\t\t\t\t</Select>\r\n\t\t\t\t\t\t\t\t</FormGroup>\r\n\t\t\t\t\t\t\t\t<FormGroup className='col-12' id='assignee' label='Assignee'>\r\n\t\t\t\t\t\t\t\t\t<Select\r\n\t\t\t\t\t\t\t\t\t\tariaLabel='Board select'\r\n\t\t\t\t\t\t\t\t\t\tplaceholder='Select group'\r\n\t\t\t\t\t\t\t\t\t\tonChange={formik.handleChange}\r\n\t\t\t\t\t\t\t\t\t\tvalue={formik.values.assignee}>\r\n\t\t\t\t\t\t\t\t\t\t{Object.keys(USERS).map((u) => (\r\n\t\t\t\t\t\t\t\t\t\t\t// @ts-ignore\r\n\t\t\t\t\t\t\t\t\t\t\t<Option key={USERS[u].id} value={USERS[u].username}>\r\n\t\t\t\t\t\t\t\t\t\t\t\t{\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t// @ts-ignore\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t`${USERS[u].name} ${USERS[u].surname}`\r\n\t\t\t\t\t\t\t\t\t\t\t\t}\r\n\t\t\t\t\t\t\t\t\t\t\t</Option>\r\n\t\t\t\t\t\t\t\t\t\t))}\r\n\t\t\t\t\t\t\t\t\t</Select>\r\n\t\t\t\t\t\t\t\t</FormGroup>\r\n\t\t\t\t\t\t\t\t<FormGroup className='col-12' id='tags' label='Tags'>\r\n\t\t\t\t\t\t\t\t\t<Select\r\n\t\t\t\t\t\t\t\t\t\tmultiple\r\n\t\t\t\t\t\t\t\t\t\tariaLabel='Board select'\r\n\t\t\t\t\t\t\t\t\t\tplaceholder='Select group'\r\n\t\t\t\t\t\t\t\t\t\tonChange={formik.handleChange}\r\n\t\t\t\t\t\t\t\t\t\tvalue={formik.values.tags}>\r\n\t\t\t\t\t\t\t\t\t\t{Object.keys(TAGS).map((t) => (\r\n\t\t\t\t\t\t\t\t\t\t\t// @ts-ignore\r\n\t\t\t\t\t\t\t\t\t\t\t<Option key={TAGS[t].id} value={TAGS[t].id}>\r\n\t\t\t\t\t\t\t\t\t\t\t\t{\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t// @ts-ignore\r\n\t\t\t\t\t\t\t\t\t\t\t\t\tTAGS[t].title\r\n\t\t\t\t\t\t\t\t\t\t\t\t}\r\n\t\t\t\t\t\t\t\t\t\t\t</Option>\r\n\t\t\t\t\t\t\t\t\t\t))}\r\n\t\t\t\t\t\t\t\t\t</Select>\r\n\t\t\t\t\t\t\t\t</FormGroup>\r\n\t\t\t\t\t\t\t</div>\r\n\t\t\t\t\t\t</div>\r\n\t\t\t\t\t</div>\r\n\t\t\t\t</ModalBody>\r\n\t\t\t\t<ModalFooter className='px-4 pb-4'>\r\n\t\t\t\t\t<Button\r\n\t\t\t\t\t\tcolor='primary'\r\n\t\t\t\t\t\tclassName='w-100'\r\n\t\t\t\t\t\ttype='submit'\r\n\t\t\t\t\t\tonClick={formik.handleSubmit}>\r\n\t\t\t\t\t\tSave\r\n\t\t\t\t\t</Button>\r\n\t\t\t\t</ModalFooter>\r\n\t\t\t</Modal>\r\n\t\t</>\r\n\t);\r\n};\r\n\r\nexport default Columns;\r\n","import React, { useState } from 'react';\r\nimport { useNavigate } from 'react-router-dom';\r\nimport { DragDropContext, DropResult } from '@hello-pangea/dnd';\r\nimport PageWrapper from '../../../layout/PageWrapper/PageWrapper';\r\nimport { demoPagesMenu } from '../../../menu';\r\nimport SubHeader, {\r\n\tSubHeaderLeft,\r\n\tSubHeaderRight,\r\n\tSubheaderSeparator,\r\n} from '../../../layout/SubHeader/SubHeader';\r\nimport Page from '../../../layout/Page/Page';\r\nimport Badge from '../../../components/bootstrap/Badge';\r\nimport COLORS from '../../../common/data/enumColors';\r\nimport USERS from '../../../common/data/userDummyData';\r\n\r\nimport Slide2 from '../../../assets/img/wanna/slide/scene-2.png';\r\nimport Slide4 from '../../../assets/img/wanna/slide/scene-4.png';\r\nimport Slide6 from '../../../assets/img/wanna/slide/scene-6.png';\r\nimport TAGS from '../../../common/data/boardTagsData';\r\nimport CommonAvatarTeam from '../../../common/other/CommonAvatarTeam';\r\nimport Button from '../../../components/bootstrap/Button';\r\nimport useDarkMode from '../../../hooks/useDarkMode';\r\nimport { TCards, TColumnsData } from './type/types';\r\nimport { move, reorder } from './helper/helper';\r\nimport Board from './component/Board';\r\nimport Columns from './component/Columns';\r\n\r\nconst ProjectManagementsProject = () => {\r\n\tconst { darkModeStatus } = useDarkMode();\r\n\tconst navigate = useNavigate();\r\n\tconst columnsData: TColumnsData = {\r\n\t\tcolumn1: {\r\n\t\t\tid: 'column1',\r\n\t\t\ttitle: 'Backlog',\r\n\t\t\tcolor: darkModeStatus ? COLORS.LIGHT.name : COLORS.DARK.name,\r\n\t\t\ticon: 'RateReview',\r\n\t\t},\r\n\t\tcolumn2: { id: 'column2', title: 'To Do', color: COLORS.INFO.name, icon: 'DoneOutline' },\r\n\t\tcolumn3: {\r\n\t\t\tid: 'column3',\r\n\t\t\ttitle: 'Pending',\r\n\t\t\tcolor: COLORS.INFO.name,\r\n\t\t\ticon: 'PendingActions',\r\n\t\t},\r\n\t\tcolumn4: { id: 'column4', title: 'Run', color: COLORS.INFO.name, icon: 'DirectionsRun' },\r\n\t\tcolumn5: { id: 'column5', title: 'Done', color: COLORS.SUCCESS.name, icon: 'Verified' },\r\n\t};\r\n\r\n\tconst [state, setState] = useState<TCards>({\r\n\t\tcolumn1: [\r\n\t\t\t{\r\n\t\t\t\tid: 'Card1',\r\n\t\t\t\ttitle: 'Mail App',\r\n\t\t\t\tsubtitle: 'Facit Themes',\r\n\t\t\t\tdescription: 'Mail application and screens will be added',\r\n\t\t\t\tlabel: '7 day left',\r\n\t\t\t\tuser: USERS.JOHN,\r\n\t\t\t\timg: Slide2,\r\n\t\t\t\ttags: [TAGS.critical, TAGS.design, TAGS.code],\r\n\t\t\t\ttasks: [\r\n\t\t\t\t\t{ id: 1, text: 'Page UI & UX design', status: true },\r\n\t\t\t\t\t{ id: 2, text: 'HTML & SCSS coding', status: true },\r\n\t\t\t\t\t{ id: 3, text: 'React Components to do', status: false },\r\n\t\t\t\t],\r\n\t\t\t\tattachments: [\r\n\t\t\t\t\t{ id: 1, path: 'somefile.txt', file: 'TXT' },\r\n\t\t\t\t\t{ id: 2, path: 'somefile.txt', file: 'WORD' },\r\n\t\t\t\t\t{ id: 3, path: 'somefile.txt', file: 'PSD' },\r\n\t\t\t\t],\r\n\t\t\t},\r\n\t\t\t{\r\n\t\t\t\tid: 'Card2',\r\n\t\t\t\ttitle: 'Invoice',\r\n\t\t\t\tsubtitle: 'Facit Themes',\r\n\t\t\t\tdescription: 'Invoice preview and new creation screens will be added',\r\n\t\t\t\tuser: USERS.ELLA,\r\n\t\t\t\tlabel: '5 day left',\r\n\t\t\t\ttags: [TAGS.revise, TAGS.design],\r\n\t\t\t\ttasks: [\r\n\t\t\t\t\t{ id: 1, text: 'Lorem ipsum dolor', status: true },\r\n\t\t\t\t\t{ id: 2, text: 'Sit amet.', status: false },\r\n\t\t\t\t],\r\n\t\t\t},\r\n\t\t],\r\n\t\tcolumn2: [\r\n\t\t\t{\r\n\t\t\t\tid: 'Card3',\r\n\t\t\t\ttitle: 'Landing Page Update',\r\n\t\t\t\tsubtitle: 'Omtanke Team',\r\n\t\t\t\tdescription: 'Will be redesigned',\r\n\t\t\t\tlabel: '5 day left',\r\n\t\t\t\tuser: USERS.GRACE,\r\n\t\t\t\ttags: [TAGS.design, TAGS.code],\r\n\t\t\t\ttasks: [\r\n\t\t\t\t\t{ id: 1, text: 'Draft drawings will be made', status: true },\r\n\t\t\t\t\t{ id: 2, text: 'Page will be updated', status: false },\r\n\t\t\t\t\t{ id: 3, text: 'Will be sent for review.', status: false },\r\n\t\t\t\t],\r\n\t\t\t\tattachments: [{ id: 2, path: 'somefile.txt', file: 'WORD' }],\r\n\t\t\t},\r\n\t\t\t{\r\n\t\t\t\tid: 'Card4',\r\n\t\t\t\ttitle: 'Write Blog',\r\n\t\t\t\tsubtitle: 'Facit Themes',\r\n\t\t\t\tdescription: 'Explain why it should be chosen',\r\n\t\t\t\tlabel: '7 day left',\r\n\t\t\t\tuser: USERS.JOHN,\r\n\t\t\t\timg: Slide4,\r\n\t\t\t\ttags: [TAGS.design],\r\n\t\t\t\ttasks: [{ id: 1, text: 'Lorem ipsum dolor', status: true }],\r\n\t\t\t\tattachments: [{ id: 1, path: 'somefile.txt', file: 'TXT' }],\r\n\t\t\t},\r\n\t\t],\r\n\t\tcolumn3: [],\r\n\t\tcolumn4: [\r\n\t\t\t{\r\n\t\t\t\tid: 'Card5',\r\n\t\t\t\ttitle: 'Bug Fix',\r\n\t\t\t\tsubtitle: 'Facit Themes',\r\n\t\t\t\tdescription: 'Minor bugs will be fixed',\r\n\t\t\t\tlabel: '5 day left',\r\n\t\t\t\tuser: USERS.GRACE,\r\n\t\t\t\ttags: [TAGS.review, TAGS.design, TAGS.code],\r\n\t\t\t\ttasks: [\r\n\t\t\t\t\t{ id: 1, text: 'Lorem ipsum dolor', status: true },\r\n\t\t\t\t\t{ id: 2, text: 'Sit amet.', status: false },\r\n\t\t\t\t\t{ id: 3, text: 'Aliquam quis varius turpis.', status: false },\r\n\t\t\t\t],\r\n\t\t\t\tattachments: [\r\n\t\t\t\t\t{ id: 1, path: 'somefile.txt', file: 'TXT' },\r\n\t\t\t\t\t{ id: 2, path: 'somefile.txt', file: 'WORD' },\r\n\t\t\t\t\t{ id: 3, path: 'somefile.txt', file: 'PSD' },\r\n\t\t\t\t],\r\n\t\t\t},\r\n\t\t],\r\n\t\tcolumn5: [\r\n\t\t\t{\r\n\t\t\t\tid: 'Card6',\r\n\t\t\t\ttitle: 'Project App',\r\n\t\t\t\tsubtitle: 'Facit Themes',\r\n\t\t\t\tdescription: 'Project tracking screen will be added',\r\n\t\t\t\tlabel: '1 day ago',\r\n\t\t\t\tuser: USERS.JOHN,\r\n\t\t\t\timg: Slide6,\r\n\t\t\t\ttags: [TAGS.critical, TAGS.design],\r\n\t\t\t\ttasks: [\r\n\t\t\t\t\t{ id: 1, text: 'Lorem ipsum dolor', status: true },\r\n\t\t\t\t\t{ id: 2, text: 'Sit amet.', status: false },\r\n\t\t\t\t\t{ id: 3, text: 'Aliquam quis varius turpis.', status: false },\r\n\t\t\t\t],\r\n\t\t\t\tattachments: [\r\n\t\t\t\t\t{ id: 1, path: 'somefile.txt', file: 'TXT' },\r\n\t\t\t\t\t{ id: 2, path: 'somefile.txt', file: 'WORD' },\r\n\t\t\t\t\t{ id: 3, path: 'somefile.txt', file: 'PSD' },\r\n\t\t\t\t],\r\n\t\t\t},\r\n\t\t],\r\n\t});\r\n\r\n\tconst onDragEnd = (result: DropResult) => {\r\n\t\tconst { source, destination } = result;\r\n\r\n\t\t// dropped outside the list\r\n\t\tif (!destination) {\r\n\t\t\treturn;\r\n\t\t}\r\n\r\n\t\tif (source.droppableId === destination.droppableId) {\r\n\t\t\tconst ITEMS = reorder(state[source.droppableId], source.index, destination.index);\r\n\r\n\t\t\tconst sourceList = source.droppableId;\r\n\t\t\tsetState({ ...state, [sourceList]: ITEMS });\r\n\t\t} else {\r\n\t\t\tconst RESULT = move(\r\n\t\t\t\tstate[source.droppableId],\r\n\t\t\t\tstate[destination.droppableId],\r\n\t\t\t\tsource,\r\n\t\t\t\tdestination,\r\n\t\t\t);\r\n\r\n\t\t\tsetState({\r\n\t\t\t\t...state,\r\n\t\t\t\t...RESULT,\r\n\t\t\t});\r\n\t\t}\r\n\t};\r\n\r\n\treturn (\r\n\t\t<PageWrapper title={demoPagesMenu.projectManagement.subMenu.item.text}>\r\n\t\t\t<SubHeader>\r\n\t\t\t\t<SubHeaderLeft>\r\n\t\t\t\t\t<Button color='info' isLink icon='ArrowBack' onClick={() => navigate(-1)}>\r\n\t\t\t\t\t\tBack to List\r\n\t\t\t\t\t</Button>\r\n\t\t\t\t\t<SubheaderSeparator />\r\n\t\t\t\t\t<span>\r\n\t\t\t\t\t\tThere are{' '}\r\n\t\t\t\t\t\t<Badge color='info' isLight>\r\n\t\t\t\t\t\t\t2 teams\r\n\t\t\t\t\t\t</Badge>{' '}\r\n\t\t\t\t\t\tyou are in and{' '}\r\n\t\t\t\t\t\t<Badge color='success' isLight>\r\n\t\t\t\t\t\t\t5 projects\r\n\t\t\t\t\t\t</Badge>\r\n\t\t\t\t\t\t.\r\n\t\t\t\t\t</span>\r\n\t\t\t\t</SubHeaderLeft>\r\n\t\t\t\t<SubHeaderRight>\r\n\t\t\t\t\t<CommonAvatarTeam>\r\n\t\t\t\t\t\t<strong>Facit</strong> Team\r\n\t\t\t\t\t</CommonAvatarTeam>\r\n\t\t\t\t</SubHeaderRight>\r\n\t\t\t</SubHeader>\r\n\t\t\t<Page container='fluid'>\r\n\t\t\t\t<DragDropContext onDragEnd={onDragEnd}>\r\n\t\t\t\t\t<Board>\r\n\t\t\t\t\t\t<Columns\r\n\t\t\t\t\t\t\tcolumnsData={columnsData}\r\n\t\t\t\t\t\t\tcardsData={state}\r\n\t\t\t\t\t\t\tsetCardsData={setState}\r\n\t\t\t\t\t\t/>\r\n\t\t\t\t\t</Board>\r\n\t\t\t\t</DragDropContext>\r\n\t\t\t</Page>\r\n\t\t</PageWrapper>\r\n\t);\r\n};\r\n\r\nexport default ProjectManagementsProject;\r\n"],"names":["CommonAvatarTeam","_ref","children","isAlignmentEnd","_jsxs","_Fragment","_jsx","className","AvatarGroup","Avatar","src","USERS","GRACE","srcSet","color","userName","name","surname","JANE","RYAN","ELLA","CHLOE","SAM","memo","shadow","rounded","isLight","props","darkModeStatus","useDarkMode","classNames","Option","value","disabled","ariaLabelledby","Options","_ref2","list","map","item","text","label","ChecksGroup","forwardRef","ref","id","isInline","isValid","isTouched","invalidFeedback","validFeedback","isTooltipFeedback","Children","child","cloneElement","isValidMessage","Validation","isTooltip","displayName","Checks","type","checked","isFormCheckInput","onBlur","onChange","onFocus","onInput","onInvalid","onSelect","ariaLabel","INNER","htmlFor","Select","required","placeholder","ariaDescribedby","multiple","title","size","defaultValue","hidden","TAGS","critical","COLORS","SUCCESS","design","WARNING","code","INFO","review","revise","SECONDARY","move","source","destination","droppableSource","droppableDestination","sourceClone","Array","from","destClone","removed","splice","index","result","droppableId","_card$attachments","_card$tasks","columnKey","columnsData","card","cardsData","setCardsData","editModalStatus","setEditModalStatus","useState","formik","useFormik","initialValues","cardName","groupId","description","assignee","user","username","task","tasks","filter","f","status","m","toString","tags","onSubmit","values","RESULT","CardHeader","CardLabel","CardTitle","tag","onClick","subtitle","CardSubTitle","CardActions","CardBody","attachments","length","Icon","icon","img","alt","CardFooter","CardFooterLeft","Badge","Modal","setIsOpen","isOpen","isScrollable","ModalHeader","ModalTitle","ModalBody","Card","iconColor","FormGroup","Input","handleChange","Textarea","Button","isOutline","a","file","t","includes","Chat","CHATS","CHLOE_VS_JOHN","msg","ChatGroup","messages","isReply","InputGroup","Object","keys","columnItemKey","u","ModalFooter","handleSubmit","cardsInTheColumn","Draggable","draggableId","providedDraggable","snapshotDraggable","borderSize","isDragging","innerRef","draggableProps","dragHandleProps","style","draggableStyle","userSelect","ColumnCard","getItemStyle","columnData","Dropdown","DropdownToggle","hasIcon","undefined","DropdownMenu","DropdownItem","isDivider","Droppable","providedDroppable","snapshotDroppable","droppableProps","isDraggingOver","background","ColumnCardWrapper","ProjectManagementsProject","navigate","useNavigate","column1","LIGHT","DARK","column2","column3","column4","column5","state","setState","JOHN","Slide2","path","Slide4","Slide6","PageWrapper","demoPagesMenu","projectManagement","subMenu","SubHeader","SubHeaderLeft","isLink","SubheaderSeparator","SubHeaderRight","Page","container","DragDropContext","onDragEnd","ITEMS","reorder","startIndex","endIndex","sourceList","Board","Columns"],"sourceRoot":""}