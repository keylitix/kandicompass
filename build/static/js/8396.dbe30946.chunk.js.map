{"version":3,"file":"static/js/8396.dbe30946.chunk.js","mappings":"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","sources":["components/PaginationButtons.tsx","components/bootstrap/Option.tsx","components/bootstrap/Pagination.tsx","components/bootstrap/forms/Select.tsx","hooks/useSortableData.ts","pages/Kindy-project/other/onError.tsx","pages/Kindy-project/other/onLoading.tsx","pages/kindy-components/QrTemplateModal.tsx"],"sourcesContent":["import React, { FC } from 'react';\r\nimport { CardFooter, CardFooterLeft, CardFooterRight } from './bootstrap/Card';\r\nimport Pagination, { PaginationItem } from './bootstrap/Pagination';\r\nimport Select from './bootstrap/forms/Select';\r\nimport Option from './bootstrap/Option';\r\n\r\nexport const PER_COUNT = {\r\n\t3: 3,\r\n\t5: 5,\r\n\t10: 10,\r\n\t25: 25,\r\n\t50: 50,\r\n};\r\n\r\nexport const dataPagination = (data: any[], currentPage: number, perPage: number) =>\r\n\tdata.filter(\r\n\t\t(i, index) => index + 1 > (currentPage - 1) * perPage && index + 1 <= currentPage * perPage,\r\n\t);\r\n\r\ninterface IPaginationButtonsProps {\r\n\tsetCurrentPage(...args: unknown[]): unknown;\r\n\tcurrentPage: number;\r\n\tperPage: number;\r\n\tsetPerPage(...args: unknown[]): unknown;\r\n\tdata: unknown[];\r\n\tlabel?: string;\r\n}\r\nconst PaginationButtons: FC<IPaginationButtonsProps> = ({\r\n\tsetCurrentPage,\r\n\tcurrentPage,\r\n\tperPage,\r\n\tsetPerPage,\r\n\tdata,\r\n\tlabel = 'items',\r\n}) => {\r\n\tconst totalItems = data.length;\r\n\tconst totalPage = Math.ceil(totalItems / perPage);\r\n\r\n\tconst pagination = () => {\r\n\t\tlet items = [];\r\n\r\n\t\tlet i = currentPage - 1;\r\n\t\twhile (i >= currentPage - 1 && i > 0) {\r\n\t\t\titems.push(\r\n\t\t\t\t<PaginationItem key={i} onClick={() => setCurrentPage(currentPage - 1)}>\r\n\t\t\t\t\t{i}\r\n\t\t\t\t</PaginationItem>,\r\n\t\t\t);\r\n\r\n\t\t\ti -= 1;\r\n\t\t}\r\n\r\n\t\titems = items.reverse();\r\n\r\n\t\titems.push(\r\n\t\t\t<PaginationItem key={currentPage} isActive onClick={() => setCurrentPage(currentPage)}>\r\n\t\t\t\t{currentPage}\r\n\t\t\t</PaginationItem>,\r\n\t\t);\r\n\r\n\t\ti = currentPage + 1;\r\n\t\twhile (i <= currentPage + 1 && i <= totalPage) {\r\n\t\t\titems.push(\r\n\t\t\t\t<PaginationItem key={i} onClick={() => setCurrentPage(currentPage + 1)}>\r\n\t\t\t\t\t{i}\r\n\t\t\t\t</PaginationItem>,\r\n\t\t\t);\r\n\r\n\t\t\ti += 1;\r\n\t\t}\r\n\r\n\t\treturn items;\r\n\t};\r\n\r\n\tconst getInfo = () => {\r\n\t\tconst start = perPage * (currentPage - 1) + 1;\r\n\r\n\t\tconst end = perPage * currentPage;\r\n\r\n\t\treturn (\r\n\t\t\t<span className='pagination__desc'>\r\n\t\t\t\tShowing {start} to {end > totalItems ? totalItems : end} of {totalItems} {label}\r\n\t\t\t</span>\r\n\t\t);\r\n\t};\r\n\r\n\treturn (\r\n\t\t<CardFooter>\r\n\t\t\t<CardFooterLeft>\r\n\t\t\t\t<span className='text-muted'>{getInfo()}</span>\r\n\t\t\t</CardFooterLeft>\r\n\r\n\t\t\t<CardFooterRight className='d-flex'>\r\n\t\t\t\t{totalPage > 1 && (\r\n\t\t\t\t\t// @ts-ignore\r\n\t\t\t\t\t<Pagination ariaLabel={label}>\r\n\t\t\t\t\t\t<PaginationItem\r\n\t\t\t\t\t\t\tisFirst\r\n\t\t\t\t\t\t\tisDisabled={!(currentPage - 1 > 0)}\r\n\t\t\t\t\t\t\tonClick={() => setCurrentPage(1)}\r\n\t\t\t\t\t\t/>\r\n\t\t\t\t\t\t<PaginationItem\r\n\t\t\t\t\t\t\tisPrev\r\n\t\t\t\t\t\t\tisDisabled={!(currentPage - 1 > 0)}\r\n\t\t\t\t\t\t\tonClick={() => setCurrentPage(currentPage - 1)}\r\n\t\t\t\t\t\t/>\r\n\t\t\t\t\t\t{currentPage - 1 > 1 && (\r\n\t\t\t\t\t\t\t<PaginationItem onClick={() => setCurrentPage(currentPage - 2)}>\r\n\t\t\t\t\t\t\t\t...\r\n\t\t\t\t\t\t\t</PaginationItem>\r\n\t\t\t\t\t\t)}\r\n\t\t\t\t\t\t{pagination()}\r\n\t\t\t\t\t\t{currentPage + 1 < totalPage && (\r\n\t\t\t\t\t\t\t<PaginationItem onClick={() => setCurrentPage(currentPage + 2)}>\r\n\t\t\t\t\t\t\t\t...\r\n\t\t\t\t\t\t\t</PaginationItem>\r\n\t\t\t\t\t\t)}\r\n\t\t\t\t\t\t<PaginationItem\r\n\t\t\t\t\t\t\tisNext\r\n\t\t\t\t\t\t\tisDisabled={!(currentPage + 1 <= totalPage)}\r\n\t\t\t\t\t\t\tonClick={() => setCurrentPage(currentPage + 1)}\r\n\t\t\t\t\t\t/>\r\n\t\t\t\t\t\t<PaginationItem\r\n\t\t\t\t\t\t\tisLast\r\n\t\t\t\t\t\t\tisDisabled={!(currentPage + 1 <= totalPage)}\r\n\t\t\t\t\t\t\tonClick={() => setCurrentPage(totalPage)}\r\n\t\t\t\t\t\t/>\r\n\t\t\t\t\t</Pagination>\r\n\t\t\t\t)}\r\n\r\n\t\t\t\t<Select\r\n\t\t\t\t\tsize='sm'\r\n\t\t\t\t\tariaLabel='Per'\r\n\t\t\t\t\tonChange={(e: { target: { value: string } }) => {\r\n\t\t\t\t\t\tsetPerPage(parseInt(e.target.value, 10));\r\n\t\t\t\t\t\tsetCurrentPage(1);\r\n\t\t\t\t\t}}\r\n\t\t\t\t\tvalue={perPage.toString()}>\r\n\t\t\t\t\t{Object.keys(PER_COUNT).map((i) => (\r\n\t\t\t\t\t\t<Option key={i} value={i}>\r\n\t\t\t\t\t\t\t{i}\r\n\t\t\t\t\t\t</Option>\r\n\t\t\t\t\t))}\r\n\t\t\t\t</Select>\r\n\t\t\t</CardFooterRight>\r\n\t\t</CardFooter>\r\n\t);\r\n};\r\n\r\nexport default PaginationButtons;\r\n","import React, { FC, HTMLAttributes } from 'react';\r\n\r\ninterface IOptionProps extends HTMLAttributes<HTMLOptionElement> {\r\n\tchildren: string;\r\n\tvalue?: string | number;\r\n\tdisabled?: boolean;\r\n\tariaLabelledby?: string | null;\r\n}\r\nconst Option: FC<IOptionProps> = ({ children, value, disabled, ariaLabelledby, ...props }) => {\r\n\treturn (\r\n\t\t<option\r\n\t\t\tvalue={value}\r\n\t\t\tdisabled={disabled}\r\n\t\t\taria-labelledby={ariaLabelledby || children}\r\n\t\t\t{...props}>\r\n\t\t\t{children}\r\n\t\t</option>\r\n\t);\r\n};\r\n\r\nexport interface IOptionsProps {\r\n\tlist: {\r\n\t\tvalue?: string | number;\r\n\t\ttext?: string | number;\r\n\t\tlabel?: string | number;\r\n\t}[];\r\n}\r\n// @ts-ignore\r\nexport const Options: FC<IOptionsProps> = ({ list }) => {\r\n\treturn list?.map((item) => (\r\n\t\t// eslint-disable-next-line react/jsx-props-no-spreading\r\n\t\t<Option key={item.value} value={item.value} {...item}>\r\n\t\t\t{(item.text as string) || (item.label as string)}\r\n\t\t</Option>\r\n\t));\r\n};\r\n\r\nexport default Option;\r\n","import React, { forwardRef, HTMLAttributes, ReactElement, ReactNode } from 'react';\r\nimport classNames from 'classnames';\r\nimport Icon from '../icon/Icon';\r\n\r\ninterface IPaginationItemProps extends HTMLAttributes<HTMLLIElement> {\r\n\tclassName?: string;\r\n\tisDisabled?: boolean;\r\n\tisActive?: boolean;\r\n\tisPrev?: boolean;\r\n\tisFirst?: boolean;\r\n\tisNext?: boolean;\r\n\tisLast?: boolean;\r\n\tchildren?: ReactNode;\r\n\tonClick?(...args: unknown[]): unknown | undefined;\r\n}\r\nexport const PaginationItem = forwardRef<HTMLLIElement, IPaginationItemProps>(\r\n\t(\r\n\t\t{\r\n\t\t\tclassName,\r\n\t\t\tisDisabled,\r\n\t\t\tisActive,\r\n\t\t\tisPrev,\r\n\t\t\tisFirst,\r\n\t\t\tisNext,\r\n\t\t\tisLast,\r\n\t\t\tchildren,\r\n\t\t\tonClick,\r\n\t\t\t...props\r\n\t\t},\r\n\t\tref,\r\n\t) => {\r\n\t\treturn (\r\n\t\t\t<li\r\n\t\t\t\tref={ref}\r\n\t\t\t\tclassName={classNames(\r\n\t\t\t\t\t'page-item',\r\n\t\t\t\t\t{\r\n\t\t\t\t\t\tdisabled: isDisabled,\r\n\t\t\t\t\t\tactive: isActive,\r\n\t\t\t\t\t},\r\n\t\t\t\t\tclassName,\r\n\t\t\t\t)}\r\n\t\t\t\t{...props}>\r\n\t\t\t\t<span\r\n\t\t\t\t\trole='button'\r\n\t\t\t\t\tonClick={onClick}\r\n\t\t\t\t\tonKeyDown={onClick}\r\n\t\t\t\t\tclassName='page-link'\r\n\t\t\t\t\ttabIndex={isDisabled ? -1 : undefined}\r\n\t\t\t\t\taria-disabled={isDisabled ? 'true' : undefined}\r\n\t\t\t\t\taria-label={\r\n\t\t\t\t\t\t(isPrev && 'First Page') || (isNext && 'Last Page') || `${children} page`\r\n\t\t\t\t\t}>\r\n\t\t\t\t\t{isPrev && <Icon icon='ChevronLeft' />}\r\n\t\t\t\t\t{isFirst && <Icon icon='FirstPage' />}\r\n\t\t\t\t\t{isNext && <Icon icon='ChevronRight' />}\r\n\t\t\t\t\t{isLast && <Icon icon='LastPage' />}\r\n\t\t\t\t\t{children}\r\n\t\t\t\t</span>\r\n\t\t\t</li>\r\n\t\t);\r\n\t},\r\n);\r\nPaginationItem.displayName = 'PaginationItem';\r\n\r\ninterface IPaginationProps extends HTMLAttributes<HTMLElement> {\r\n\tariaLabel: string;\r\n\tchildren:\r\n\t\t| ReactElement<IPaginationItemProps>\r\n\t\t| ReactElement<IPaginationItemProps>[]\r\n\t\t| ReactNode\r\n\t\t| ReactNode[];\r\n\tclassName?: string | undefined;\r\n\tsize?: 'sm' | 'lg' | null;\r\n}\r\nconst Pagination = forwardRef<HTMLDivElement, IPaginationProps>(\r\n\t({ ariaLabel, className, children, size, ...props }, ref) => {\r\n\t\treturn (\r\n\t\t\t<nav ref={ref} aria-label={ariaLabel} className={className} {...props}>\r\n\t\t\t\t<ul className={classNames('pagination', { [`pagination-${size}`]: size }, 'm-0')}>\r\n\t\t\t\t\t{children}\r\n\t\t\t\t</ul>\r\n\t\t\t</nav>\r\n\t\t);\r\n\t},\r\n);\r\nPagination.displayName = 'Pagination';\r\n\r\nexport default Pagination;\r\n","import React, { forwardRef, HTMLAttributes, ReactNode } from 'react';\r\nimport classNames from 'classnames';\r\nimport Option, { IOptionsProps, Options } from '../Option';\r\nimport Validation from './Validation';\r\n\r\ninterface ISelectProps extends Partial<IOptionsProps>, HTMLAttributes<HTMLSelectElement> {\r\n\tid?: string;\r\n\tclassName?: string;\r\n\tname?: string;\r\n\tchildren?: ReactNode;\r\n\tariaLabel: string;\r\n\tplaceholder?: string;\r\n\tsize?: 'lg' | 'sm';\r\n\tmultiple?: boolean;\r\n\tdisabled?: boolean;\r\n\trequired?: boolean;\r\n\tariaDescribedby?: string;\r\n\tariaLabelledby?: string;\r\n\ttitle?: string;\r\n\tvalue?: string | string[];\r\n\tdefaultValue?: string | string[];\r\n\tisTouched?: boolean;\r\n\tisValid?: boolean;\r\n\tinvalidFeedback?: string;\r\n\tvalidFeedback?: string;\r\n\tisValidMessage?: boolean;\r\n\tisTooltipFeedback?: boolean;\r\n\tonBlur?(...args: unknown[]): unknown;\r\n\tonChange?(...args: unknown[]): unknown;\r\n\tonFocus?(...args: unknown[]): unknown;\r\n\tonInput?(...args: unknown[]): unknown;\r\n\tonInvalid?(...args: unknown[]): unknown;\r\n\tonSelect?(...args: unknown[]): unknown;\r\n}\r\nconst Select = forwardRef<HTMLSelectElement, ISelectProps>(\r\n\t(\r\n\t\t{\r\n\t\t\tid,\r\n\t\t\tname,\r\n\t\t\tclassName,\r\n\t\t\tchildren,\r\n\t\t\trequired,\r\n\t\t\tplaceholder,\r\n\t\t\tariaDescribedby,\r\n\t\t\tariaLabelledby,\r\n\t\t\tariaLabel,\r\n\t\t\tlist,\r\n\t\t\tmultiple,\r\n\t\t\ttitle,\r\n\t\t\tsize,\r\n\t\t\tdisabled,\r\n\t\t\tvalue,\r\n\t\t\tdefaultValue,\r\n\t\t\tisValid,\r\n\t\t\tisTouched,\r\n\t\t\tinvalidFeedback,\r\n\t\t\tvalidFeedback,\r\n\t\t\tisValidMessage = true,\r\n\t\t\tisTooltipFeedback,\r\n\t\t\tonBlur,\r\n\t\t\tonChange,\r\n\t\t\tonFocus,\r\n\t\t\tonInput,\r\n\t\t\tonInvalid,\r\n\t\t\tonSelect,\r\n\t\t\t...props\r\n\t\t},\r\n\r\n\t\tref,\r\n\t) => {\r\n\t\treturn (\r\n\t\t\t<>\r\n\t\t\t\t<select\r\n\t\t\t\t\tref={ref}\r\n\t\t\t\t\tid={id}\r\n\t\t\t\t\tclassName={classNames(\r\n\t\t\t\t\t\t'form-select',\r\n\t\t\t\t\t\t{\r\n\t\t\t\t\t\t\t[`form-select-${size}`]: size,\r\n\t\t\t\t\t\t\t'text-muted': value === '' && placeholder,\r\n\t\t\t\t\t\t\t'is-invalid': !isValid && isTouched && invalidFeedback,\r\n\t\t\t\t\t\t\t'is-valid': !isValid && isTouched && !invalidFeedback,\r\n\t\t\t\t\t\t},\r\n\t\t\t\t\t\tclassName,\r\n\t\t\t\t\t)}\r\n\t\t\t\t\tname={name}\r\n\t\t\t\t\taria-label={ariaLabel}\r\n\t\t\t\t\taria-describedby={ariaDescribedby}\r\n\t\t\t\t\taria-labelledby={ariaLabelledby}\r\n\t\t\t\t\tmultiple={multiple}\r\n\t\t\t\t\tdisabled={disabled}\r\n\t\t\t\t\ttitle={title}\r\n\t\t\t\t\tvalue={value}\r\n\t\t\t\t\tdefaultValue={defaultValue}\r\n\t\t\t\t\trequired={required}\r\n\t\t\t\t\tonBlur={onBlur}\r\n\t\t\t\t\tonChange={onChange}\r\n\t\t\t\t\tonFocus={onFocus}\r\n\t\t\t\t\tonInput={onInput}\r\n\t\t\t\t\tonInvalid={onInvalid}\r\n\t\t\t\t\tonSelect={onSelect}\r\n\t\t\t\t\t{...props}>\r\n\t\t\t\t\t{placeholder && (\r\n\t\t\t\t\t\t<Option value='' hidden>\r\n\t\t\t\t\t\t\t{placeholder}\r\n\t\t\t\t\t\t</Option>\r\n\t\t\t\t\t)}\r\n\t\t\t\t\t{children || (list && <Options list={list} />)}\r\n\t\t\t\t</select>\r\n\t\t\t\t{isValidMessage && (\r\n\t\t\t\t\t<Validation\r\n\t\t\t\t\t\tisTouched={isTouched}\r\n\t\t\t\t\t\tinvalidFeedback={invalidFeedback}\r\n\t\t\t\t\t\tvalidFeedback={validFeedback}\r\n\t\t\t\t\t\tisTooltip={isTooltipFeedback}\r\n\t\t\t\t\t/>\r\n\t\t\t\t)}\r\n\t\t\t</>\r\n\t\t);\r\n\t},\r\n);\r\nSelect.displayName = 'Select';\r\n\r\nexport default Select;\r\n","import { useMemo, useState } from 'react';\r\n\r\nconst useSortableData = (items: any[], config = null) => {\r\n\tconst [sortConfig, setSortConfig] = useState(config);\r\n\r\n\tconst sortedItems = useMemo(() => {\r\n\t\tconst sortableItems = [...items];\r\n\t\tif (sortConfig !== null) {\r\n\t\t\tsortableItems.sort((a, b) => {\r\n\t\t\t\t// @ts-ignore\r\n\t\t\t\tif (a[sortConfig.key] < b[sortConfig.key]) {\r\n\t\t\t\t\t// @ts-ignore\r\n\t\t\t\t\treturn sortConfig.direction === 'ascending' ? -1 : 1;\r\n\t\t\t\t}\r\n\t\t\t\t// @ts-ignore\r\n\t\t\t\tif (a[sortConfig.key] > b[sortConfig.key]) {\r\n\t\t\t\t\t// @ts-ignore\r\n\t\t\t\t\treturn sortConfig.direction === 'ascending' ? 1 : -1;\r\n\t\t\t\t}\r\n\t\t\t\treturn 0;\r\n\t\t\t});\r\n\t\t}\r\n\t\treturn sortableItems;\r\n\t}, [items, sortConfig]);\r\n\r\n\tconst requestSort = (key: any) => {\r\n\t\tlet direction = 'ascending';\r\n\t\t// @ts-ignore\r\n\t\tif (sortConfig && sortConfig.key === key && sortConfig.direction === 'ascending') {\r\n\t\t\tdirection = 'descending';\r\n\t\t}\r\n\t\t// @ts-ignore\r\n\t\tsetSortConfig({ key, direction });\r\n\t};\r\n\r\n\tconst getClassNamesFor = (key: any) => {\r\n\t\tif (!sortConfig) {\r\n\t\t\treturn 'd-none';\r\n\t\t}\r\n\r\n\t\t// @ts-ignore\r\n\t\treturn sortConfig.key === key ? sortConfig.direction : 'd-none';\r\n\t};\r\n\r\n\treturn { items: sortedItems, requestSort, getClassNamesFor, sortConfig };\r\n};\r\n\r\nexport default useSortableData;\r\n","import React from 'react';\r\nimport PageWrapper from '../../../layout/PageWrapper/PageWrapper';\r\nimport Page from '../../../layout/Page/Page';\r\nimport Humans from '../../../assets/img/scene4.png';\r\nimport HumansWebp from '../../../assets/img/scene4.webp';\r\nimport Button from '../../../components/bootstrap/Button';\r\nimport { demoPagesMenu } from '../../../menu';\r\n\r\nconst ErrorWrapper = () => {\r\n    return (\r\n        <PageWrapper title={demoPagesMenu.pageError.text}>\r\n            <Page>\r\n                <div className='row d-flex align-items-center h-100'>\r\n                    <div className='col-12 d-flex flex-column justify-content-center align-items-center'>\r\n                        <div\r\n                            className='text-primary fw-bold'\r\n                            style={{ fontSize: 'calc(3rem + 3vw)' }}>\r\n                            Error\r\n                        </div>\r\n                        <div\r\n                            className='text-dark fw-bold'\r\n                            style={{ fontSize: 'calc(1.5rem + 1.5vw)' }}>\r\n                            Something went wrong\r\n                        </div>\r\n                    </div>\r\n                    <div className='col-12 d-flex align-items-baseline justify-content-center'>\r\n                        <img\r\n                            srcSet={HumansWebp}\r\n                            src={Humans}\r\n                            alt='Humans'\r\n                            style={{ height: '50vh' }}\r\n                        />\r\n                    </div>\r\n                    <div className='col-12 d-flex flex-column justify-content-center align-items-center'>\r\n                        <Button\r\n                            className='px-5 py-3'\r\n                            color='primary'\r\n                            isLight\r\n                            icon='HolidayVillage'\r\n                            tag='a'\r\n                            href='/'>\r\n                            Homepage\r\n                        </Button>\r\n                    </div>\r\n                </div>\r\n            </Page>\r\n        </PageWrapper>\r\n    );\r\n};\r\n\r\nexport default ErrorWrapper;\r\n","import React from 'react';\r\nimport PageWrapper from '../../../layout/PageWrapper/PageWrapper';\r\nimport Page from '../../../layout/Page/Page';\r\nimport Spinner from '../../../components/bootstrap/Spinner';\r\n\r\nconst LoadingWrapper = () => {\r\n    return (\r\n        <PageWrapper title={\"Loading...\"}>\r\n            <Page className=\"d-flex justify-content-center align-items-center w-100 h-100\">\r\n                <div className='row d-flex align-items-center h-100'>\r\n                    <div className='col-12 d-flex flex-column justify-content-center align-items-center mt-5'>\r\n                        <div\r\n                            className='text-primary fw-bold'>\r\n                            <Spinner size={30}  />\r\n                        </div>\r\n                        <div\r\n                            className='text-dark fw-bold'\r\n                            style={{ fontSize: 'calc(1rem + 1.5vw)' }}>\r\n                            Please wait a moment\r\n                        </div>\r\n                    </div>\r\n                </div>\r\n            </Page>\r\n        </PageWrapper>\r\n    );\r\n};\r\n\r\nexport default LoadingWrapper;\r\n","// import React, { FC, useRef, useState } from 'react';\r\n// import { useReactToPrint } from 'react-to-print';\r\n// import jsPDF from 'jspdf';\r\n// import html2pdf from 'html2pdf.js';\r\n// import html2canvas from 'html2canvas';\r\n// import Modal, {\r\n//     ModalBody,\r\n//     ModalFooter,\r\n//     ModalHeader,\r\n//     ModalTitle,\r\n// } from '../../components/bootstrap/Modal';\r\n// import FormGroup from '../../components/bootstrap/forms/FormGroup';\r\n// import Input from '../../components/bootstrap/forms/Input';\r\n// import Select from '../../components/bootstrap/forms/Select';\r\n// import Button from '../../components/bootstrap/Button';\r\n\r\n// interface QrTemplateModalProps {\r\n//     isOpen: boolean;\r\n//     setIsOpen: (open: boolean) => void;\r\n//     beadName: string;\r\n//     qrUrl: string;\r\n//     qrImageUrl?: string;\r\n// }\r\n// const getPageSizeInMM = (size: string): [number, number] => {\r\n//     switch (size) {\r\n//         case 'A1': return [594, 841];\r\n//         case 'A2': return [420, 594];\r\n//         case 'A3': return [297, 420];\r\n//         case 'A4': return [210, 297];\r\n//         case 'Letter': return [215.9, 279.4];\r\n//         default: return [210, 297];\r\n//     }\r\n// };\r\n\r\n// const QrTemplateModal: FC<QrTemplateModalProps> = ({\r\n//     isOpen,\r\n//     setIsOpen,\r\n//     beadName,\r\n//     qrUrl,\r\n//     qrImageUrl,\r\n// }) => {\r\n//     const [quantity, setQuantity] = useState(1);\r\n//     const [sheetSize, setSheetSize] = useState<'A1' | 'A2' | 'A3' | 'A4' | 'Letter'>('A4');\r\n//     const [pageWidth, pageHeight] = getPageSizeInMM(sheetSize);\r\n\r\n\r\n//     const printRef = useRef<HTMLDivElement>(null);\r\n\r\n//     const handlePrint = useReactToPrint({\r\n//         contentRef: printRef,\r\n//         documentTitle: '',\r\n//         pageStyle: `\r\n//     @page {\r\n//       size: ${sheetSize};\r\n//       margin: 0;\r\n//     }\r\n//     html, body {\r\n//       margin: 0 !important;\r\n//       padding: 0 !important;\r\n//       height: 100%;\r\n//       width: 100%;\r\n//       -webkit-print-color-adjust: exact !important;\r\n//       print-color-adjust: exact !important;\r\n//       background: white;\r\n//     }\r\n//     div {\r\n//       break-after: page;\r\n//     }\r\n//   `,\r\n//     });\r\n\r\n\r\n//     const handleDownloadPdf = () => {\r\n//         if (!printRef.current) return;\r\n//         const opt = {\r\n//             margin: 0,\r\n//             filename: `${beadName}_QR_Codes.pdf`,\r\n//             image: { type: 'jpeg', quality: 0.98 },\r\n//             html2canvas: { scale: 2, useCORS: true },\r\n//             jsPDF: { unit: 'mm', format: [pageWidth, pageHeight], orientation: 'portrait' },\r\n//         };\r\n\r\n//         html2pdf().set(opt).from(printRef.current).save();\r\n//     };\r\n\r\n\r\n//     if (!isOpen) return null;\r\n\r\n//     return (\r\n//         <>\r\n//             <Modal isOpen={isOpen} setIsOpen={setIsOpen} size=\"md\" titleId=\"qr-template-modal\">\r\n//                 <ModalHeader setIsOpen={setIsOpen}>\r\n//                     <ModalTitle id=\"qr-template-modal\">Print QR Codes</ModalTitle>\r\n//                 </ModalHeader>\r\n\r\n//                 <ModalBody>\r\n//                     <div className=\"row g-3\">\r\n//                         <FormGroup label=\"Sheet Size\" className=\"col-md-6\">\r\n//                             <Select\r\n//                                 value={sheetSize}\r\n//                                 onChange={(e: any) => setSheetSize(e.target.value as any)}\r\n//                                 ariaLabel=\"Sheet Size\"\r\n//                             >\r\n//                                 <option value=\"A1\">A1</option>\r\n//                                 <option value=\"A2\">A2</option>\r\n//                                 <option value=\"A3\">A3</option>\r\n//                                 <option value=\"A4\">A4</option>\r\n//                                 <option value=\"Letter\">Letter</option>\r\n//                             </Select>\r\n\r\n//                         </FormGroup>\r\n\r\n//                         <FormGroup label=\"Quantity\" className=\"col-md-6\">\r\n//                             <Input\r\n//                                 type=\"number\"\r\n//                                 min={1}\r\n//                                 value={quantity}\r\n//                                 onChange={(e: any) => setQuantity(Number(e.target.value))}\r\n//                             />\r\n//                         </FormGroup>\r\n//                     </div>\r\n\r\n//                     {/* Preview a single QR */}\r\n//                     <div className=\"d-flex justify-content-center mt-4\">\r\n//                         <div className=\"text-center\">\r\n//                             <img\r\n//                                 src={qrImageUrl || qrUrl}\r\n//                                 alt={`QR Code for ${beadName}`}\r\n//                                 style={{ width: 200, height: 200 }}\r\n//                             />\r\n//                             <div className=\"mt-2 h4\">{beadName}</div>\r\n//                         </div>\r\n//                     </div>\r\n\r\n\r\n//                 </ModalBody>\r\n\r\n//                 <ModalFooter>\r\n//                     <Button icon='Print' color=\"info\" isLight onClick={handlePrint}>\r\n//                         Print\r\n//                     </Button>\r\n//                     <Button icon='PictureAsPdf' color=\"danger\" isLight onClick={handleDownloadPdf}>\r\n//                         PDF\r\n//                     </Button>\r\n//                 </ModalFooter>\r\n//             </Modal>\r\n\r\n//             <div style={{ display: 'none' }}>\r\n//                 <div ref={printRef}>\r\n//                     {[...Array(quantity)].map((_, index) => (\r\n//                         <div\r\n//                             key={index}\r\n//                             className='qr-pdf-page'\r\n//                             style={{\r\n//                                 height: `${pageHeight}mm`,\r\n//                                 width: `${pageWidth}mm`,\r\n//                                 display: 'flex',\r\n//                                 flexDirection: 'column',\r\n//                                 justifyContent: 'center',\r\n//                                 alignItems: 'center',\r\n//                             }}\r\n//                         >\r\n//                             <img\r\n//                                 src={qrImageUrl || qrUrl}\r\n//                                 alt={`QR Code Page ${index + 1}`}\r\n//                                 style={{ width: '80%', height: '80%', objectFit: 'contain', marginTop: -200 }}\r\n//                             />\r\n\r\n//                             <div\r\n//                                 style={{\r\n//                                     // marginTop: '-100px',\r\n//                                     fontSize: '24px',\r\n//                                     fontWeight: 'bold',\r\n//                                 }}\r\n//                             >\r\n//                                 {beadName}\r\n//                             </div>\r\n//                         </div>\r\n//                     ))}\r\n//                 </div>\r\n//             </div>\r\n//         </>\r\n//     );\r\n// };\r\n\r\n// export default QrTemplateModal;\r\n\r\n\r\n\r\n\r\nimport React, { FC, useRef, useState } from 'react';\r\nimport { useReactToPrint } from 'react-to-print';\r\nimport Modal, {\r\n  ModalBody,\r\n  ModalFooter,\r\n  ModalHeader,\r\n  ModalTitle,\r\n} from '../../components/bootstrap/Modal';\r\nimport FormGroup from '../../components/bootstrap/forms/FormGroup';\r\nimport Input from '../../components/bootstrap/forms/Input';\r\nimport Select from '../../components/bootstrap/forms/Select';\r\nimport Button from '../../components/bootstrap/Button';\r\n\r\ninterface QrTemplateModalProps {\r\n  isOpen: boolean;\r\n  setIsOpen: (open: boolean) => void;\r\n  beadName: string;\r\n  qrUrl: string;\r\n  qrImageUrl?: string;\r\n}\r\n\r\nconst getPageSizeInMM = (size: string): [number, number] => {\r\n  switch (size) {\r\n    case 'A1': return [594, 841];\r\n    case 'A2': return [420, 594];\r\n    case 'A3': return [297, 420];\r\n    case 'A4': return [210, 297];\r\n    case 'Letter': return [215.9, 279.4];\r\n    default: return [210, 297];\r\n  }\r\n};\r\n\r\nconst QrTemplateModal: FC<QrTemplateModalProps> = ({\r\n  isOpen,\r\n  setIsOpen,\r\n  beadName,\r\n  qrUrl,\r\n  qrImageUrl,\r\n}) => {\r\n  const [quantity, setQuantity] = useState(1);\r\n  const [sheetSize, setSheetSize] = useState<'A1' | 'A2' | 'A3' | 'A4' | 'Letter'>('A4');\r\n  const [pageWidth, pageHeight] = getPageSizeInMM(sheetSize);\r\n  const printRef = useRef<HTMLDivElement>(null);\r\n\r\n  const handlePrint = useReactToPrint({\r\n    contentRef: printRef,\r\n    documentTitle: '',\r\n    pageStyle: `\r\n      @page {\r\n        size: ${sheetSize};\r\n        margin: 0;\r\n      }\r\n      html, body {\r\n        margin: 0 !important;\r\n        padding: 0 !important;\r\n        height: 100%;\r\n        width: 100%;\r\n        -webkit-print-color-adjust: exact !important;\r\n        print-color-adjust: exact !important;\r\n        background: white;\r\n      }\r\n      div {\r\n        break-after: page;\r\n      }\r\n    `,\r\n  });\r\n\r\n  const handleDownloadImage = async (name: string) => {\r\n    try {\r\n      const imageUrl = qrImageUrl || qrUrl;\r\n      const response = await fetch(imageUrl, { mode: 'cors' });\r\n      if (!response.ok) throw new Error('Network response was not ok');\r\n\r\n      const blob = await response.blob();\r\n      const url = URL.createObjectURL(blob);\r\n      const link = document.createElement('a');\r\n      link.href = url;\r\n      link.download = `${name}-qr-code.png`;\r\n      document.body.appendChild(link);\r\n      link.click();\r\n      document.body.removeChild(link);\r\n      URL.revokeObjectURL(url);\r\n    } catch (error) {\r\n      console.error('Failed to download QR code:', error);\r\n      alert('Failed to download QR code. Please try again.');\r\n    }\r\n  };\r\n\r\n  if (!isOpen) return null;\r\n\r\n  return (\r\n    <>\r\n      <Modal isOpen={isOpen} setIsOpen={setIsOpen} size=\"md\" titleId=\"qr-template-modal\">\r\n        <ModalHeader setIsOpen={setIsOpen}>\r\n          <ModalTitle id=\"qr-template-modal\">Print QR Codes</ModalTitle>\r\n        </ModalHeader>\r\n\r\n        <ModalBody>\r\n          <div className=\"row g-3\">\r\n            <FormGroup label=\"Sheet Size\" className=\"col-md-6\">\r\n              <Select\r\n                value={sheetSize}\r\n                onChange={(e: any) => setSheetSize(e.target.value as any)}\r\n                ariaLabel=\"Sheet Size\"\r\n              >\r\n                <option value=\"A1\">A1</option>\r\n                <option value=\"A2\">A2</option>\r\n                <option value=\"A3\">A3</option>\r\n                <option value=\"A4\">A4</option>\r\n                <option value=\"Letter\">Letter</option>\r\n              </Select>\r\n            </FormGroup>\r\n\r\n            <FormGroup label=\"Quantity\" className=\"col-md-6\">\r\n              <Input\r\n                type=\"number\"\r\n                min={1}\r\n                value={quantity}\r\n                onChange={(e: any) => setQuantity(Number(e.target.value))}\r\n              />\r\n            </FormGroup>\r\n          </div>\r\n\r\n          {/* Preview a single QR */}\r\n          <div className=\"d-flex justify-content-center mt-4\">\r\n            <div className=\"text-center\">\r\n              <img\r\n                src={qrImageUrl || qrUrl}\r\n                alt={`QR Code for ${beadName}`}\r\n                style={{ width: 200, height: 200 }}\r\n              />\r\n              <div className=\"mt-2 h4\">{beadName}</div>\r\n            </div>\r\n          </div>\r\n        </ModalBody>\r\n\r\n        <ModalFooter>\r\n          <Button icon=\"Print\" color=\"info\" isLight onClick={handlePrint}>\r\n            Print\r\n          </Button>\r\n          <Button\r\n            icon=\"PictureAsPdf\"\r\n            color=\"danger\"\r\n            isLight\r\n            onClick={() => handleDownloadImage(beadName)}\r\n          >\r\n            Download\r\n          </Button>\r\n        </ModalFooter>\r\n      </Modal>\r\n\r\n      <div style={{ display: 'none' }}>\r\n        <div ref={printRef}>\r\n          {[...Array(quantity)].map((_, index) => (\r\n            <div\r\n              key={index}\r\n              className=\"qr-pdf-page\"\r\n              style={{\r\n                height: `${pageHeight}mm`,\r\n                width: `${pageWidth}mm`,\r\n                display: 'flex',\r\n                flexDirection: 'column',\r\n                justifyContent: 'center',\r\n                alignItems: 'center',\r\n              }}\r\n            >\r\n              <img\r\n                src={qrImageUrl || qrUrl}\r\n                alt={`QR Code Page ${index + 1}`}\r\n                style={{\r\n                  width: '80%',\r\n                  height: '80%',\r\n                  objectFit: 'contain',\r\n                  marginTop: -200,\r\n                }}\r\n              />\r\n              <div style={{ fontSize: '24px', fontWeight: 'bold' }}>{beadName}</div>\r\n            </div>\r\n          ))}\r\n        </div>\r\n      </div>\r\n    </>\r\n  );\r\n};\r\n\r\nexport default QrTemplateModal;\r\n"],"names":["PER_COUNT","dataPagination","data","currentPage","perPage","filter","i","index","_ref","setCurrentPage","setPerPage","label","totalItems","length","totalPage","Math","ceil","_jsxs","CardFooter","children","_jsx","CardFooterLeft","className","getInfo","start","end","CardFooterRight","Pagination","ariaLabel","PaginationItem","isFirst","isDisabled","onClick","isPrev","pagination","items","push","reverse","isActive","isNext","isLast","Select","size","onChange","e","parseInt","target","value","toString","Object","keys","map","Option","disabled","ariaLabelledby","props","Options","_ref2","list","item","text","forwardRef","ref","classNames","active","role","onKeyDown","tabIndex","undefined","Icon","icon","displayName","id","name","required","placeholder","ariaDescribedby","multiple","title","defaultValue","isValid","isTouched","invalidFeedback","validFeedback","isValidMessage","isTooltipFeedback","onBlur","onFocus","onInput","onInvalid","onSelect","_Fragment","hidden","Validation","isTooltip","config","arguments","sortConfig","setSortConfig","useState","useMemo","sortableItems","sort","a","b","key","direction","requestSort","getClassNamesFor","ErrorWrapper","PageWrapper","demoPagesMenu","pageError","Page","style","fontSize","srcSet","HumansWebp","src","Humans","alt","height","Button","color","isLight","tag","href","LoadingWrapper","Spinner","isOpen","setIsOpen","beadName","qrUrl","qrImageUrl","quantity","setQuantity","sheetSize","setSheetSize","pageWidth","pageHeight","getPageSizeInMM","printRef","useRef","handlePrint","useReactToPrint","contentRef","documentTitle","pageStyle","Modal","titleId","ModalHeader","ModalTitle","ModalBody","FormGroup","Input","type","min","Number","width","ModalFooter","async","imageUrl","response","fetch","mode","ok","Error","blob","url","URL","createObjectURL","link","document","createElement","download","body","appendChild","click","removeChild","revokeObjectURL","error","console","alert","handleDownloadImage","display","Array","_","flexDirection","justifyContent","alignItems","objectFit","marginTop","fontWeight"],"sourceRoot":""}