{"version":3,"file":"static/js/6622.c7d7ca86.chunk.js","mappings":"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","sources":["components/bootstrap/Badge.tsx","components/bootstrap/Progress.tsx","components/extras/Chart.tsx","pages/_common/CRMDashboard/LongestTraveledBeads.tsx","pages/_common/CRMDashboard/MostPopularLocations.tsx","pages/Kindy-project/AnlayticReport/AnlayticReport.tsx","pages/_common/CRMDashboard/CommonSalePerformance.tsx","pages/_common/CRMDashboard/CommonTopSales.tsx"],"sourcesContent":["import React, { FC, ReactNode } from 'react';\r\nimport classNames from 'classnames';\r\nimport useDarkMode from '../../hooks/useDarkMode';\r\nimport { TColor } from '../../type/color-type';\r\n\r\ninterface IBadgeProps extends Record<string, any> {\r\n\tchildren: ReactNode;\r\n\tclassName?: string;\r\n\tcolor?: TColor;\r\n\trounded?:\r\n\t\t| null\r\n\t\t| 'default'\r\n\t\t| 0\r\n\t\t| 1\r\n\t\t| 2\r\n\t\t| 3\r\n\t\t| 'bottom'\r\n\t\t| 'top'\r\n\t\t| 'circle'\r\n\t\t| 'end'\r\n\t\t| 'start'\r\n\t\t| 'pill';\r\n\tshadow?: null | 'none' | 'sm' | 'default' | 'lg';\r\n\tisLight?: boolean;\r\n}\r\nconst Badge: FC<IBadgeProps> = ({\r\n\tchildren,\r\n\tclassName,\r\n\tcolor = 'primary',\r\n\tshadow,\r\n\trounded,\r\n\tisLight,\r\n\t...props\r\n}) => {\r\n\tconst { darkModeStatus } = useDarkMode();\r\n\treturn (\r\n\t\t<span\r\n\t\t\tclassName={classNames(\r\n\t\t\t\t'badge',\r\n\t\t\t\t{\r\n\t\t\t\t\t[`bg-${color}`]: !isLight,\r\n\t\t\t\t\t[`bg-l${darkModeStatus ? 'o25' : '10'}-${color}`]: isLight,\r\n\t\t\t\t\t[`text-${color}`]: isLight,\r\n\t\t\t\t\t[`shadow${shadow !== 'default' ? `-${shadow}` : ''}`]: !!shadow,\r\n\t\t\t\t\t[`rounded${rounded !== 'default' ? `-${rounded}` : ''}`]: rounded,\r\n\t\t\t\t\t'rounded-0':\r\n\t\t\t\t\t\trounded === 'bottom' ||\r\n\t\t\t\t\t\trounded === 'top' ||\r\n\t\t\t\t\t\trounded === 'end' ||\r\n\t\t\t\t\t\trounded === 'start' ||\r\n\t\t\t\t\t\trounded === 0,\r\n\t\t\t\t},\r\n\t\t\t\tclassName,\r\n\t\t\t)}\r\n\t\t\t{...props}>\r\n\t\t\t{children}\r\n\t\t</span>\r\n\t);\r\n};\r\n\r\nexport default Badge;\r\n","import React, { Children, cloneElement, forwardRef, HTMLAttributes, ReactElement } from 'react';\r\nimport classNames from 'classnames';\r\nimport { createUseStyles } from 'react-jss';\r\nimport { TColor } from '../../type/color-type';\r\n\r\nconst useStyles = createUseStyles({\r\n\t// stylelint-disable-next-line selector-type-no-unknown\r\n\tdynamicHeight: (props) => ({\r\n\t\t// @ts-ignore\r\n\t\theight: props.height,\r\n\t}),\r\n});\r\n\r\ninterface IProgressProps extends HTMLAttributes<HTMLDivElement> {\r\n\tvalue?: number;\r\n\tmin?: number;\r\n\tmax?: number;\r\n\theight?: number | string | null;\r\n\tisStriped?: boolean;\r\n\tisAnimated?: boolean;\r\n\tisAutoColor?: boolean;\r\n\tcolor?: TColor | 'link' | 'brand' | 'brand-two' | 'storybook';\r\n\tchildren?: ReactElement<IProgressProps> | ReactElement<IProgressProps>[];\r\n\tclassName?: string;\r\n\tisOnlyBar?: boolean;\r\n}\r\nconst Progress = forwardRef<HTMLDivElement, IProgressProps>(\r\n\t(\r\n\t\t{\r\n\t\t\tvalue = 0,\r\n\t\t\tmin = 0,\r\n\t\t\tmax = 100,\r\n\t\t\theight,\r\n\t\t\tisStriped,\r\n\t\t\tisAnimated,\r\n\t\t\tisAutoColor,\r\n\t\t\tcolor,\r\n\t\t\tchildren,\r\n\t\t\tclassName,\r\n\t\t\tisOnlyBar,\r\n\t\t\t...props\r\n\t\t},\r\n\t\tref,\r\n\t) => {\r\n\t\t// @ts-ignore\r\n\t\tconst VALUE = (100 * (value - min)) / (max - min);\r\n\t\t// @ts-ignore\r\n\t\tconst classes = useStyles({ height });\r\n\r\n\t\tconst ONLY_BAR = (\r\n\t\t\t<div\r\n\t\t\t\tstyle={{\r\n\t\t\t\t\twidth: `${VALUE}%`,\r\n\t\t\t\t}}\r\n\t\t\t\tclassName={classNames(\r\n\t\t\t\t\t'progress-bar',\r\n\t\t\t\t\t{\r\n\t\t\t\t\t\t'bg-danger': VALUE < 25 && isAutoColor,\r\n\t\t\t\t\t\t'bg-warning': VALUE >= 25 && VALUE < 50 && isAutoColor,\r\n\t\t\t\t\t\t'bg-info': VALUE >= 50 && VALUE < 75 && isAutoColor,\r\n\t\t\t\t\t\t'bg-success': VALUE >= 75 && isAutoColor,\r\n\t\t\t\t\t},\r\n\t\t\t\t\t{\r\n\t\t\t\t\t\t[`bg-${color}`]: color && !isAutoColor,\r\n\t\t\t\t\t\t'progress-bar-striped': isStriped || isAnimated,\r\n\t\t\t\t\t\t'progress-bar-animated': isAnimated,\r\n\t\t\t\t\t},\r\n\t\t\t\t)}\r\n\t\t\t\trole='progressbar'\r\n\t\t\t\taria-label={`${value}%`}\r\n\t\t\t\taria-valuenow={value}\r\n\t\t\t\taria-valuemin={min}\r\n\t\t\t\taria-valuemax={max}\r\n\t\t\t/>\r\n\t\t);\r\n\r\n\t\tif (isOnlyBar) {\r\n\t\t\treturn ONLY_BAR;\r\n\t\t}\r\n\t\treturn (\r\n\t\t\t<div\r\n\t\t\t\tref={ref}\r\n\t\t\t\tclassName={classNames('progress', { [classes.dynamicHeight]: !!height }, className)}\r\n\t\t\t\tstyle={{\r\n\t\t\t\t\t// @ts-ignore\r\n\r\n\t\t\t\t\t...props.style,\r\n\t\t\t\t}}\r\n\t\t\t\t{...props}>\r\n\t\t\t\t{children\r\n\t\t\t\t\t? Children.map(children, (child) =>\r\n\t\t\t\t\t\t\tcloneElement(child as ReactElement, { isOnlyBar: true }),\r\n\t\t\t\t\t\t)\r\n\t\t\t\t\t: ONLY_BAR}\r\n\t\t\t</div>\r\n\t\t);\r\n\t},\r\n);\r\nProgress.displayName = 'Progress';\r\n\r\nexport default Progress;\r\n","import React, { FC, HTMLAttributes, memo } from 'react';\r\nimport ReactApexChart from 'react-apexcharts';\r\nimport classNames from 'classnames';\r\nimport { ApexOptions } from 'apexcharts';\r\n\r\ninterface IChartProps extends HTMLAttributes<HTMLDivElement> {\r\n\tseries: ApexOptions['series'];\r\n\toptions: ApexOptions;\r\n\ttype?: ApexChart['type'];\r\n\twidth?: string | number;\r\n\theight?: string | number;\r\n\tclassName?: string;\r\n}\r\nconst Chart: FC<IChartProps> = ({\r\n\tseries,\r\n\toptions,\r\n\ttype = 'line',\r\n\twidth = '100%',\r\n\theight = 'auto',\r\n\tclassName,\r\n\t...props\r\n}) => {\r\n\treturn (\r\n\t\t<div className={classNames('apex-chart', className)} {...props}>\r\n\t\t\t<ReactApexChart\r\n\t\t\t\toptions={{\r\n\t\t\t\t\tcolors: [\r\n\t\t\t\t\t\tprocess.env.REACT_APP_PRIMARY_COLOR,\r\n\t\t\t\t\t\tprocess.env.REACT_APP_SECONDARY_COLOR,\r\n\t\t\t\t\t\tprocess.env.REACT_APP_SUCCESS_COLOR,\r\n\t\t\t\t\t\tprocess.env.REACT_APP_INFO_COLOR,\r\n\t\t\t\t\t\tprocess.env.REACT_APP_WARNING_COLOR,\r\n\t\t\t\t\t\tprocess.env.REACT_APP_DANGER_COLOR,\r\n\t\t\t\t\t],\r\n\t\t\t\t\tplotOptions: {\r\n\t\t\t\t\t\tcandlestick: {\r\n\t\t\t\t\t\t\tcolors: {\r\n\t\t\t\t\t\t\t\tupward: process.env.REACT_APP_SUCCESS_COLOR,\r\n\t\t\t\t\t\t\t\tdownward: process.env.REACT_APP_DANGER_COLOR,\r\n\t\t\t\t\t\t\t},\r\n\t\t\t\t\t\t},\r\n\t\t\t\t\t\tboxPlot: {\r\n\t\t\t\t\t\t\tcolors: {\r\n\t\t\t\t\t\t\t\tupper: process.env.REACT_APP_SUCCESS_COLOR,\r\n\t\t\t\t\t\t\t\tlower: process.env.REACT_APP_DANGER_COLOR,\r\n\t\t\t\t\t\t\t},\r\n\t\t\t\t\t\t},\r\n\t\t\t\t\t},\r\n\t\t\t\t\t...options,\r\n\t\t\t\t}}\r\n\t\t\t\tseries={series}\r\n\t\t\t\t// @ts-ignore\r\n\t\t\t\ttype={type}\r\n\t\t\t\twidth={width}\r\n\t\t\t\theight={height}\r\n\t\t\t/>\r\n\t\t</div>\r\n\t);\r\n};\r\n\r\n/**\r\n * For use useState\r\n */\r\nexport interface IChartOptions extends Record<string, any> {\r\n\tseries: ApexOptions['series'];\r\n\toptions: ApexOptions;\r\n}\r\n\r\nexport default memo(Chart);\r\n","import React, { FC } from 'react';\r\nimport classNames from 'classnames';\r\nimport Card, {\r\n  CardActions,\r\n  CardBody,\r\n  CardHeader,\r\n  CardLabel,\r\n  CardTitle,\r\n} from '../../../components/bootstrap/Card';\r\nimport Button from '../../../components/bootstrap/Button';\r\nimport { getFirstLetter, priceFormat } from '../../../helpers/helpers';\r\nimport useDarkMode from '../../../hooks/useDarkMode';\r\nimport { demoPagesMenu } from '../../../menu';\r\n\r\ninterface ITraveledBeadItemProps {\r\n  beadName: string;\r\n  origin: string;\r\n  distance: number; // in kilometers\r\n  destinations: string[];\r\n  avatar?: string;\r\n}\r\n\r\nconst TraveledBeadItem: FC<ITraveledBeadItemProps> = ({ \r\n  beadName, \r\n  origin, \r\n  distance, \r\n  destinations, \r\n  avatar \r\n}) => {\r\n  const { darkModeStatus } = useDarkMode();\r\n\r\n  return (\r\n    <div className='col-12'>\r\n      <div className='row'>\r\n        <div className='col d-flex align-items-center'>\r\n          <div className='flex-shrink-0'>\r\n            <div className='ratio ratio-1x1 me-3' style={{ width: 48 }}>\r\n              {avatar ? (\r\n                <img\r\n                  src={avatar}\r\n                  alt={beadName}\r\n                  className='rounded-2 object-cover w-full h-full'\r\n                />\r\n              ) : (\r\n                <div\r\n                  className={classNames(\r\n                    'rounded-2',\r\n                    'd-flex align-items-center justify-content-center',\r\n                    {\r\n                      'bg-l10-dark': !darkModeStatus,\r\n                      'bg-l90-dark': darkModeStatus,\r\n                    },\r\n                  )}>\r\n                  <span className='fw-bold'>{getFirstLetter(beadName)}</span>\r\n                </div>\r\n              )}\r\n            </div>\r\n          </div>\r\n          <div className='flex-grow-1'>\r\n            <div className='fs-6'>{beadName}</div>\r\n            <div className='text-muted'>\r\n              <small>From: {origin}</small>\r\n            </div>\r\n            <div className='text-muted'>\r\n              <small>To: {destinations.join(' → ')}</small>\r\n            </div>\r\n          </div>\r\n        </div>\r\n        <div className='col-auto text-end'>\r\n          <div>\r\n            <strong>{distance.toLocaleString()} km</strong>\r\n          </div>\r\n          <div className='text-muted'>\r\n            <small>{destinations.length} stops</small>\r\n          </div>\r\n        </div>\r\n      </div>\r\n    </div>\r\n  );\r\n};\r\n\r\nconst LongestTraveledBeads = () => {\r\n  const traveledBeads = [\r\n    {\r\n      id: '1',\r\n      beadName: 'Blue Sapphire',\r\n      origin: 'Colombia',\r\n      distance: 12500,\r\n      destinations: ['India', 'Thailand', 'Japan', 'USA'],\r\n      avatar: '/path/to/sapphire-image.jpg'\r\n    },\r\n    {\r\n      id: '2',\r\n      beadName: 'Red Coral',\r\n      origin: 'Mediterranean',\r\n      distance: 9800,\r\n      destinations: ['Italy', 'Egypt', 'China'],\r\n      avatar: '/path/to/coral-image.jpg'\r\n    },\r\n    {\r\n      id: '3',\r\n      beadName: 'Tiger Eye',\r\n      origin: 'South Africa',\r\n      distance: 8700,\r\n      destinations: ['UK', 'Canada'],\r\n      avatar: '/path/to/tigereye-image.jpg'\r\n    },\r\n    {\r\n      id: '4',\r\n      beadName: 'Moonstone',\r\n      origin: 'Sri Lanka',\r\n      distance: 7600,\r\n      destinations: ['France', 'Germany', 'Russia'],\r\n      avatar: '/path/to/moonstone-image.jpg'\r\n    },\r\n    {\r\n      id: '5',\r\n      beadName: 'Lapis Lazuli',\r\n      origin: 'Afghanistan',\r\n      distance: 6800,\r\n      destinations: ['Turkey', 'Greece'],\r\n      avatar: '/path/to/lapis-image.jpg'\r\n    },\r\n  ];\r\n\r\n  return (\r\n    <Card \r\n    stretch \r\n    style={{ \r\n      minHeight: '500px',\r\n      height: '100%'\r\n    }}\r\n    >\r\n      <CardHeader>\r\n        <CardLabel>\r\n          <CardTitle tag='div' className='h5'>\r\n            Longest-Traveled Beads\r\n          </CardTitle>\r\n        </CardLabel>\r\n       \r\n      </CardHeader>\r\n      <CardBody isScrollable>\r\n        <div className='row g-3'>\r\n          {traveledBeads.map((bead) => (\r\n            <TraveledBeadItem\r\n              key={bead.id}\r\n              beadName={bead.beadName}\r\n              origin={bead.origin}\r\n              distance={bead.distance}\r\n              destinations={bead.destinations}\r\n             \r\n            />\r\n          ))}\r\n        </div>\r\n      </CardBody>\r\n    </Card>\r\n  );\r\n};\r\n\r\nexport default LongestTraveledBeads;","import React, { FC } from 'react';\r\nimport Card, {\r\n  CardHeader,\r\n  CardBody,\r\n  CardTitle,\r\n} from '../../../components/bootstrap/Card';\r\nimport Badge from '../../../components/bootstrap/Badge';\r\nimport Icon from '../../../components/icon/Icon';\r\nimport Progress from '../../../components/bootstrap/Progress';\r\n\r\ninterface IPopularLocationItemProps {\r\n  location: string;\r\n  country: string;\r\n  beadCount: number;\r\n  percentage: number;\r\n  flagEmoji?: string;\r\n}\r\n\r\nconst PopularLocationItem: FC<IPopularLocationItemProps> = ({\r\n  location,\r\n  country,\r\n  beadCount,\r\n  percentage,\r\n  flagEmoji\r\n}) => {\r\n  return (\r\n    <div className=\"col-12 mb-3\">\r\n      <div className=\"d-flex align-items-center\">\r\n        <div className=\"flex-shrink-0 me-3\">\r\n          <Badge color=\"info\" className=\"fs-5 p-3\">\r\n            {flagEmoji || '🌎'}\r\n          </Badge>\r\n        </div>\r\n        <div className=\"flex-grow-1\">\r\n          <div className=\"d-flex justify-content-between\">\r\n            <div>\r\n              <span className=\"fw-bold fs-6\">{location}</span>\r\n              <span className=\"text-muted ms-2\">{country}</span>\r\n            </div>\r\n            <div className=\"fw-bold\">{beadCount.toLocaleString()}</div>\r\n          </div>\r\n          <Progress \r\n            height={10}\r\n            value={percentage}\r\n            color={percentage > 75 ? 'success' : percentage > 50 ? 'info' : 'warning'}\r\n            className=\"mt-2\"\r\n          />\r\n          <div className=\"d-flex justify-content-between small text-muted mt-1\">\r\n            <span>Market share</span>\r\n            <span>{percentage}%</span>\r\n          </div>\r\n        </div>\r\n      </div>\r\n    </div>\r\n  );\r\n};\r\n\r\nconst MostPopularLocations = () => {\r\n  // Custom static data with percentage values\r\n  const popularLocations = [\r\n    {\r\n      id: '1',\r\n      location: 'Jaipur',\r\n      country: 'India',\r\n      beadCount: 12500,\r\n      percentage: 85,\r\n      flagEmoji: '🇮🇳',\r\n      description: 'Gemstone capital'\r\n    },\r\n    {\r\n      id: '2',\r\n      location: 'Bangkok',\r\n      country: 'Thailand',\r\n      beadCount: 9800,\r\n      percentage: 72,\r\n      flagEmoji: '🇹🇭',\r\n      description: 'Synthetic bead hub'\r\n    },\r\n    {\r\n      id: '3',\r\n      location: 'Nairobi',\r\n      country: 'Kenya',\r\n      beadCount: 8700,\r\n      percentage: 65,\r\n      flagEmoji: '🇰🇪',\r\n      description: 'African trade center'\r\n    },\r\n    {\r\n      id: '4',\r\n      location: 'Istanbul',\r\n      country: 'Turkey',\r\n      beadCount: 7600,\r\n      percentage: 58,\r\n      flagEmoji: '🇹🇷',\r\n      description: 'Glass bead specialist'\r\n    },\r\n    {\r\n      id: '5',\r\n      location: 'Lima',\r\n      country: 'Peru',\r\n      beadCount: 6800,\r\n      percentage: 45,\r\n      flagEmoji: '🇵🇪',\r\n      description: 'Traditional craftsmanship'\r\n    },\r\n  ];\r\n\r\n  return (\r\n    <Card \r\n      stretch\r\n      className=\"shadow-sm\"\r\n      style={{\r\n        minHeight: '500px',\r\n        border: 'none',\r\n        borderRadius: '12px'\r\n      }}\r\n    >\r\n      <CardHeader \r\n        className=\"bg-transparent\"\r\n        style={{\r\n          borderBottom: '1px solid rgba(0,0,0,0.1)',\r\n          padding: '1.25rem 1.5rem'\r\n        }}\r\n      >\r\n        <div className=\"d-flex justify-content-between align-items-center\">\r\n          <CardTitle tag=\"h5\" className=\"m-0 fw-bold\">\r\n            <Icon icon=\"Public\" className=\"me-2\" />\r\n            Bead Origins\r\n          </CardTitle>\r\n          <Badge color=\"primary\" className=\"px-3 py-2\">\r\n            Global\r\n          </Badge>\r\n        </div>\r\n      </CardHeader>\r\n      <CardBody \r\n        style={{\r\n          padding: '1.5rem',\r\n          background: 'rgba(248, 249, 250, 0.5)'\r\n        }}\r\n      >\r\n        <div className=\"row\">\r\n          {popularLocations.map((location) => (\r\n            <PopularLocationItem\r\n              key={location.id}\r\n              location={location.location}\r\n              country={location.country}\r\n              beadCount={location.beadCount}\r\n              percentage={location.percentage}\r\n              flagEmoji={location.flagEmoji}\r\n            />\r\n          ))}\r\n        </div>\r\n      </CardBody>\r\n      <div \r\n        className=\"card-footer bg-transparent text-end\"\r\n        style={{\r\n          borderTop: '1px solid rgba(0,0,0,0.1)',\r\n          padding: '1rem 1.5rem'\r\n        }}\r\n      >\r\n        <small className=\"text-muted\">\r\n          Updated: {new Date().toLocaleDateString()}\r\n        </small>\r\n      </div>\r\n    </Card>\r\n  );\r\n};\r\n\r\nexport default MostPopularLocations;","import React, { useEffect, useState } from 'react';\r\nimport { DateRangePicker } from 'react-date-range';\r\nimport dayjs from 'dayjs';\r\nimport { useTour } from '@reactour/tour';\r\nimport PageWrapper from '../../../layout/PageWrapper/PageWrapper';\r\nimport SubHeader, { SubHeaderLeft, SubHeaderRight } from '../../../layout/SubHeader/SubHeader';\r\nimport Page from '../../../layout/Page/Page';\r\nimport { demoPagesMenu } from '../../../menu';\r\nimport Button from '../../../components/bootstrap/Button';\r\nimport Popovers from '../../../components/bootstrap/Popovers';\r\nimport Icon from '../../../components/icon/Icon';\r\nimport CommonSalePerformance from '../../_common/CRMDashboard/CommonSalePerformance';\r\nimport CommonTopSales from '../../_common/CRMDashboard/CommonTopSales';\r\nimport CommonLatestTransActions from '../../_common/CRMDashboard/CommonLatestTransActions';\r\nimport CommonIncome from '../../_common/CRMDashboard/CommonIncome';\r\nimport LongestTraveledBeads from '../../_common/CRMDashboard/LongestTraveledBeads';\r\nimport MostPopularLocations from '../../_common/CRMDashboard/MostPopularLocations'\r\n\r\nconst AnlayticReport = () => {\r\n    /**\r\n     * For Tour\r\n     */\r\n    const { currentStep, setCurrentStep } = useTour();\r\n    useEffect(() => {\r\n        if (currentStep === 3) setCurrentStep(4);\r\n        // eslint-disable-next-line react-hooks/exhaustive-deps\r\n    }, [currentStep]);\r\n\r\n    const [state, setState] = useState({\r\n        selection: {\r\n            startDate: dayjs().startOf('week').add(-1, 'week').toDate(),\r\n            endDate: dayjs().endOf('week').toDate(),\r\n            key: 'selection',\r\n        },\r\n        selection2: {\r\n            startDate: dayjs().startOf('week').add(-1, 'week').add(2, 'day').toDate(),\r\n            endDate: dayjs().endOf('week').add(-4, 'day').toDate(),\r\n            key: 'selection2',\r\n        },\r\n        selection3: {\r\n            startDate: dayjs().startOf('week').add(3, 'week').add(2, 'day').toDate(),\r\n            endDate: dayjs().startOf('week').add(3, 'week').add(2, 'day').toDate(),\r\n            key: 'selection3',\r\n        },\r\n    });\r\n\r\n    const datePicker = (\r\n        <DateRangePicker\r\n            onChange={(item) => setState({ ...state, ...item })}\r\n            // showSelectionPreview\r\n            moveRangeOnFirstSelection={false}\r\n            retainEndDateOnFirstSelection={false}\r\n            months={2}\r\n            ranges={[state.selection, state.selection2, state.selection3]}\r\n            direction='horizontal'\r\n            rangeColors={[\r\n                String(process.env.REACT_APP_PRIMARY_COLOR),\r\n                String(process.env.REACT_APP_SECONDARY_COLOR),\r\n                String(process.env.REACT_APP_SUCCESS_COLOR),\r\n            ]}\r\n        />\r\n    );\r\n\r\n    return (\r\n        <PageWrapper title={demoPagesMenu.crm.subMenu.dashboard.text}>\r\n            <SubHeader>\r\n                <SubHeaderLeft>\r\n                    <Icon icon='Info' className='me-2' size='2x' />\r\n                    <span className='text-muted'>Check out latest updates.</span>\r\n                </SubHeaderLeft>\r\n                <SubHeaderRight>\r\n                    <Popovers\r\n                        placement='bottom-end'\r\n                        className='mw-100 overflow-hidden'\r\n                        data-tour='date-range-menu'\r\n                        bodyClassName='p-0'\r\n                        trigger='click'\r\n                        desc={datePicker}>\r\n                        <Button color='dark' isLight data-tour='date-range'>\r\n                            {`${dayjs(state.selection.startDate).format('MMM Do YY')} - ${dayjs(\r\n                                state.selection3.endDate,\r\n                            ).format('MMM Do YY')}`}\r\n                        </Button>\r\n                    </Popovers>\r\n                </SubHeaderRight>\r\n            </SubHeader>\r\n            <Page>\r\n                <div className='row'>\r\n                    <div className='col-lg-8'>\r\n                        <CommonSalePerformance />\r\n                    </div>\r\n                    <div className='col-lg-4'>\r\n                        <CommonTopSales />\r\n                    </div>\r\n                    <div className='col-lg-6'>\r\n                        {/* <CommonLatestTransActions /> */}\r\n                        {/* <CommonTopSales /> */}\r\n                        <LongestTraveledBeads/>\r\n                    </div>\r\n                    <div className='col-lg-6'>\r\n                        {/* <CommonIncome /> */}\r\n                        <MostPopularLocations />\r\n                    </div>\r\n                </div>\r\n            </Page>\r\n        </PageWrapper>\r\n    );\r\n};\r\n\r\nexport default AnlayticReport;\r\n","import React, { useState } from 'react';\r\nimport dayjs from 'dayjs';\r\nimport Card, {\r\n\tCardActions,\r\n\tCardBody,\r\n\tCardHeader,\r\n\tCardLabel,\r\n\tCardTitle,\r\n} from '../../../components/bootstrap/Card';\r\nimport Button from '../../../components/bootstrap/Button';\r\nimport Chart, { IChartOptions } from '../../../components/extras/Chart';\r\n\r\ninterface ISalePerTab {\r\n\t[key: string]: 'Day' | 'Week' | 'Month';\r\n}\r\nconst CommonSalePerformance = () => {\r\n\tconst chartOptions = {\r\n\t\tchart: {\r\n\t\t\theight: 400,\r\n\t\t\ttype: 'area',\r\n\t\t\ttoolbar: {\r\n\t\t\t\tshow: false,\r\n\t\t\t},\r\n\t\t},\r\n\t\tcolors: [process.env.REACT_APP_SUCCESS_COLOR, process.env.REACT_APP_INFO_COLOR],\r\n\t\tdataLabels: {\r\n\t\t\tenabled: false,\r\n\t\t},\r\n\t\tstroke: {\r\n\t\t\tcurve: 'smooth',\r\n\t\t},\r\n\t\ttooltip: {\r\n\t\t\tx: {\r\n\t\t\t\tformat: 'dd/MM/yy HH:mm',\r\n\t\t\t},\r\n\t\t\ttheme: 'dark',\r\n\t\t},\r\n\t\tfill: {\r\n\t\t\ttype: 'gradient',\r\n\t\t\tgradient: {\r\n\t\t\t\tshadeIntensity: 1,\r\n\t\t\t\topacityFrom: 0.5,\r\n\t\t\t\topacityTo: 0,\r\n\t\t\t\tstops: [0, 100],\r\n\t\t\t},\r\n\t\t},\r\n\t};\r\n\r\n\tfunction getDate(day: number) {\r\n\t\tconst arr = [];\r\n\t\tfor (let i = 0; i < day; i += 1) {\r\n\t\t\tarr.push(\r\n\t\t\t\tdayjs()\r\n\t\t\t\t\t.add(-1 * i, 'day')\r\n\t\t\t\t\t.format('ll'),\r\n\t\t\t);\r\n\t\t}\r\n\t\treturn arr.reverse();\r\n\t}\r\n\tfunction getHours(day: number) {\r\n\t\tconst arr = [];\r\n\t\tfor (let i = 0; i < day; i += 1) {\r\n\t\t\tarr.push(i);\r\n\t\t}\r\n\t\treturn arr;\r\n\t}\r\n\r\n\tconst DUMMY_DATA: { [key: string]: IChartOptions } = {\r\n\t\tDAY: {\r\n\t\t\tseries: [\r\n\t\t\t\t{\r\n\t\t\t\t\tname: 'Last Day',\r\n\t\t\t\t\tdata: [\r\n\t\t\t\t\t\t4, 5, 2, 4, 3, 5, 5, 8, 14, 35, 43, 12, 4, 5, 2, 4, 3, 5, 5, 8, 12, 45, 56,\r\n\t\t\t\t\t\t9,\r\n\t\t\t\t\t],\r\n\t\t\t\t},\r\n\t\t\t\t{\r\n\t\t\t\t\tname: 'This Day',\r\n\t\t\t\t\tdata: [\r\n\t\t\t\t\t\t4, 2, 2, 7, 3, 6, 5, 4, 12, 23, 35, 10, 4, 5, 2, 9, 3, 5, 14, 8, 14, 35, 43,\r\n\t\t\t\t\t\t12,\r\n\t\t\t\t\t],\r\n\t\t\t\t},\r\n\t\t\t],\r\n\t\t\t// @ts-ignore\r\n\t\t\toptions: {\r\n\t\t\t\t...chartOptions,\r\n\t\t\t\txaxis: {\r\n\t\t\t\t\tcategories: getHours(24),\r\n\t\t\t\t},\r\n\t\t\t},\r\n\t\t},\r\n\t\tWEEK: {\r\n\t\t\tseries: [\r\n\t\t\t\t{\r\n\t\t\t\t\tname: 'Last Week',\r\n\t\t\t\t\tdata: [31, 40, 28, 51, 42, 109, 100],\r\n\t\t\t\t},\r\n\t\t\t\t{\r\n\t\t\t\t\tname: 'This Week',\r\n\t\t\t\t\tdata: [11, 32, 45, 32, 34, 52, 41],\r\n\t\t\t\t},\r\n\t\t\t],\r\n\t\t\t// @ts-ignore\r\n\t\t\toptions: {\r\n\t\t\t\t...chartOptions,\r\n\t\t\t\txaxis: {\r\n\t\t\t\t\tcategories: getDate(7),\r\n\t\t\t\t},\r\n\t\t\t},\r\n\t\t},\r\n\t\tMONTH: {\r\n\t\t\tseries: [\r\n\t\t\t\t{\r\n\t\t\t\t\tname: 'Last Month',\r\n\t\t\t\t\tdata: [\r\n\t\t\t\t\t\t31, 40, 28, 51, 42, 109, 100, 70, 30, 56, 21, 43, 12, 45, 67, 32, 46, 21,\r\n\t\t\t\t\t\t56, 87, 64, 42, 56, 108, 76, 41, 54,\r\n\t\t\t\t\t],\r\n\t\t\t\t},\r\n\t\t\t\t{\r\n\t\t\t\t\tname: 'This Month',\r\n\t\t\t\t\tdata: [\r\n\t\t\t\t\t\t11, 32, 45, 32, 34, 52, 41, 24, 32, 45, 32, 43, 52, 41, 28, 32, 45, 67, 34,\r\n\t\t\t\t\t\t52, 41, 11, 32, 89, 32, 34, 52, 41,\r\n\t\t\t\t\t],\r\n\t\t\t\t},\r\n\t\t\t],\r\n\t\t\t// @ts-ignore\r\n\t\t\toptions: {\r\n\t\t\t\t...chartOptions,\r\n\t\t\t\txaxis: {\r\n\t\t\t\t\tcategories: getDate(28),\r\n\t\t\t\t},\r\n\t\t\t},\r\n\t\t},\r\n\t};\r\n\tconst [state, setState] = useState<IChartOptions>({\r\n\t\tseries: DUMMY_DATA.WEEK.series,\r\n\t\toptions: DUMMY_DATA.WEEK.options,\r\n\t});\r\n\r\n\tconst SALE_PER_TAB: { [key: string]: ISalePerTab['key'] } = {\r\n\t\tDAY: 'Day',\r\n\t\tWEEK: 'Week',\r\n\t\tMONTH: 'Month',\r\n\t};\r\n\tconst [activeSalePerTab, setActiveSalePerTab] = useState<ISalePerTab['key']>(\r\n\t\tSALE_PER_TAB.MONTH,\r\n\t);\r\n\r\n\treturn (\r\n\t\t<Card stretch>\r\n\t\t\t<CardHeader>\r\n\t\t\t\t<CardLabel>\r\n\t\t\t\t\t<CardTitle tag='div' className='h5'>\r\n\t\t\t\t\t\tSale Performance\r\n\t\t\t\t\t</CardTitle>\r\n\t\t\t\t</CardLabel>\r\n\t\t\t\t<CardActions>\r\n\t\t\t\t\t<Button\r\n\t\t\t\t\t\tcolor='info'\r\n\t\t\t\t\t\tonClick={() => {\r\n\t\t\t\t\t\t\tsetActiveSalePerTab(SALE_PER_TAB.DAY);\r\n\t\t\t\t\t\t\tsetState({\r\n\t\t\t\t\t\t\t\tseries: DUMMY_DATA.DAY.series,\r\n\t\t\t\t\t\t\t\toptions: DUMMY_DATA.DAY.options,\r\n\t\t\t\t\t\t\t});\r\n\t\t\t\t\t\t}}\r\n\t\t\t\t\t\tisLink={activeSalePerTab !== SALE_PER_TAB.DAY}\r\n\t\t\t\t\t\tisLight={activeSalePerTab === SALE_PER_TAB.DAY}>\r\n\t\t\t\t\t\tDay\r\n\t\t\t\t\t</Button>\r\n\t\t\t\t\t<Button\r\n\t\t\t\t\t\tcolor='info'\r\n\t\t\t\t\t\tonClick={() => {\r\n\t\t\t\t\t\t\tsetActiveSalePerTab(SALE_PER_TAB.WEEK);\r\n\t\t\t\t\t\t\tsetState({\r\n\t\t\t\t\t\t\t\tseries: DUMMY_DATA.WEEK.series,\r\n\t\t\t\t\t\t\t\toptions: DUMMY_DATA.WEEK.options,\r\n\t\t\t\t\t\t\t});\r\n\t\t\t\t\t\t}}\r\n\t\t\t\t\t\tisLink={activeSalePerTab !== SALE_PER_TAB.WEEK}\r\n\t\t\t\t\t\tisLight={activeSalePerTab === SALE_PER_TAB.WEEK}>\r\n\t\t\t\t\t\tWeek\r\n\t\t\t\t\t</Button>\r\n\t\t\t\t\t<Button\r\n\t\t\t\t\t\tcolor='info'\r\n\t\t\t\t\t\tonClick={() => {\r\n\t\t\t\t\t\t\tsetActiveSalePerTab(SALE_PER_TAB.MONTH);\r\n\t\t\t\t\t\t\tsetState({\r\n\t\t\t\t\t\t\t\tseries: DUMMY_DATA.MONTH.series,\r\n\t\t\t\t\t\t\t\toptions: DUMMY_DATA.MONTH.options,\r\n\t\t\t\t\t\t\t});\r\n\t\t\t\t\t\t}}\r\n\t\t\t\t\t\tisLink={activeSalePerTab !== SALE_PER_TAB.MONTH}\r\n\t\t\t\t\t\tisLight={activeSalePerTab === SALE_PER_TAB.MONTH}>\r\n\t\t\t\t\t\tMonth\r\n\t\t\t\t\t</Button>\r\n\t\t\t\t</CardActions>\r\n\t\t\t</CardHeader>\r\n\t\t\t<CardBody>\r\n\t\t\t\t<Chart\r\n\t\t\t\t\tseries={state.series}\r\n\t\t\t\t\toptions={state.options}\r\n\t\t\t\t\ttype={state.options.chart?.type}\r\n\t\t\t\t\theight={state.options.chart?.height}\r\n\t\t\t\t/>\r\n\t\t\t</CardBody>\r\n\t\t</Card>\r\n\t);\r\n};\r\n\r\nexport default CommonSalePerformance;\r\n","import React, { FC } from 'react';\r\nimport classNames from 'classnames';\r\nimport Card, {\r\n  CardActions,\r\n  CardBody,\r\n  CardHeader,\r\n  CardLabel,\r\n  CardTitle,\r\n} from '../../../components/bootstrap/Card';\r\nimport Button from '../../../components/bootstrap/Button';\r\nimport { getFirstLetter, priceFormat } from '../../../helpers/helpers';\r\nimport useDarkMode from '../../../hooks/useDarkMode';\r\nimport { demoPagesMenu } from '../../../menu';\r\nimport { useGetBeadsQuery } from '../../../redux/api/beadApi';\r\n\r\ninterface IBeadItemProps {\r\n \r\n  beadName: string;\r\n  beadType: string;\r\n  pricePerUnit: number;\r\n  quantity: number;\r\n  avatar?: string;\r\n}\r\n\r\nconst BeadItem: FC<IBeadItemProps> = ({ beadName, beadType, pricePerUnit, quantity, avatar }) => {\r\n  const { darkModeStatus } = useDarkMode();\r\n\r\n  return (\r\n    <div className='col-12'>\r\n      <div className='row'>\r\n        <div className='col d-flex align-items-center'>\r\n          <div className='flex-shrink-0'>\r\n            <div className='ratio ratio-1x1 me-3' style={{ width: 48 }}>\r\n              {avatar ? (\r\n                <img\r\n                  src={`https://kandi-backend.cradle.services/${avatar}`}\r\n                  alt={beadName}\r\n                  className='rounded-2 object-cover w-full h-full'\r\n                />\r\n              ) : (\r\n                <div\r\n                  className={classNames(\r\n                    'rounded-2',\r\n                    'd-flex align-items-center justify-content-center',\r\n                    {\r\n                      'bg-l10-dark': !darkModeStatus,\r\n                      'bg-l90-dark': darkModeStatus,\r\n                    },\r\n                  )}>\r\n                  <span className='fw-bold'>{getFirstLetter(beadName)}</span>\r\n                </div>\r\n              )}\r\n            </div>\r\n          </div>\r\n          <div className='flex-grow-1'>\r\n            <div className='fs-6'>{beadName}</div>\r\n            <div className='text-muted'>\r\n              <small>{beadType}</small>\r\n            </div>\r\n          </div>\r\n        </div>\r\n        <div className='col-auto text-end'>\r\n          <div>\r\n            <strong>{priceFormat(pricePerUnit)}</strong>\r\n          </div>\r\n          <div className='text-muted'>\r\n            <small>Qty: {quantity}</small>\r\n          </div>\r\n        </div>\r\n      </div>\r\n    </div>\r\n  );\r\n};\r\n\r\nconst CommonTopSales = () => {\r\n  // Fetch bead data using the API\r\n  const { data: beadsResponse, isLoading, isError } = useGetBeadsQuery({\r\n    page_number: 1,\r\n    page_size: 10\r\n  });\r\n\r\n  // Safely get the beads array or default to empty array\r\n  const beads = beadsResponse?.data || [];\r\n\r\n  if (isLoading) return <div>Loading beads...</div>;\r\n  if (isError) return <div>Error loading beads</div>;\r\n\r\n  return (\r\n    <Card stretch>\r\n      <CardHeader>\r\n        <CardLabel>\r\n          <CardTitle tag='div' className='h5'>\r\n            Top Beads\r\n          </CardTitle>\r\n        </CardLabel>\r\n        \r\n      </CardHeader>\r\n      <CardBody isScrollable>\r\n        <div className='row g-3'>\r\n          {beads.map((bead : any) => (\r\n            <BeadItem\r\n              key={bead._id}\r\n             \r\n              beadName={bead.beadName}\r\n              beadType={bead.beadType}\r\n              pricePerUnit={bead.pricePerUnit}\r\n              quantity={bead.quantity}\r\n             \r\n            />\r\n          ))}\r\n        </div>\r\n      </CardBody>\r\n    </Card>\r\n  );\r\n};\r\n\r\nexport default CommonTopSales;"],"names":["_ref","children","className","color","shadow","rounded","isLight","props","darkModeStatus","useDarkMode","_jsx","classNames","useStyles","createUseStyles","dynamicHeight","height","Progress","forwardRef","ref","value","min","max","isStriped","isAnimated","isAutoColor","isOnlyBar","VALUE","classes","ONLY_BAR","style","width","role","Children","map","child","cloneElement","displayName","Chart","series","options","type","ReactApexChart","colors","process","plotOptions","candlestick","upward","downward","boxPlot","upper","lower","memo","TraveledBeadItem","beadName","origin","distance","destinations","avatar","_jsxs","src","alt","getFirstLetter","join","toLocaleString","length","LongestTraveledBeads","Card","stretch","minHeight","CardHeader","CardLabel","CardTitle","tag","CardBody","isScrollable","id","bead","PopularLocationItem","location","country","beadCount","percentage","flagEmoji","Badge","MostPopularLocations","border","borderRadius","borderBottom","padding","Icon","icon","background","description","borderTop","Date","toLocaleDateString","AnlayticReport","currentStep","setCurrentStep","useTour","useEffect","state","setState","useState","selection","startDate","dayjs","startOf","add","toDate","endDate","endOf","key","selection2","selection3","datePicker","DateRangePicker","onChange","item","moveRangeOnFirstSelection","retainEndDateOnFirstSelection","months","ranges","direction","rangeColors","String","PageWrapper","title","demoPagesMenu","crm","subMenu","dashboard","text","SubHeader","SubHeaderLeft","size","SubHeaderRight","Popovers","placement","bodyClassName","trigger","desc","Button","format","Page","CommonSalePerformance","CommonTopSales","_state$options$chart","_state$options$chart2","chartOptions","chart","toolbar","show","dataLabels","enabled","stroke","curve","tooltip","x","theme","fill","gradient","shadeIntensity","opacityFrom","opacityTo","stops","getDate","day","arr","i","push","reverse","DUMMY_DATA","DAY","name","data","xaxis","categories","getHours","WEEK","MONTH","SALE_PER_TAB","activeSalePerTab","setActiveSalePerTab","CardActions","onClick","isLink","BeadItem","beadType","pricePerUnit","quantity","priceFormat","beadsResponse","isLoading","isError","useGetBeadsQuery","page_number","page_size","beads","_id"],"sourceRoot":""}