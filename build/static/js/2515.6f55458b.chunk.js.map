{"version":3,"file":"static/js/2515.6f55458b.chunk.js","mappings":"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","sources":["common/other/CommonStoryBtn.tsx","components/bootstrap/Breadcrumb.tsx","components/extras/Chart.tsx","pages/documentation/charts/chart-boxWhisker/BoxWhiskerBasic.tsx","pages/documentation/charts/chart-boxWhisker/BoxWhiskerBoxPlotScatter.tsx","pages/documentation/charts/ChartBoxWhiskerPage.tsx"],"sourcesContent":["import React, { FC } from 'react';\r\nimport Button, { IButtonProps } from '../../components/bootstrap/Button';\r\n\r\ninterface ICommonStoryBtnProps extends IButtonProps {\r\n\tto: string;\r\n}\r\nconst CommonStoryBtn: FC<ICommonStoryBtnProps> = ({ to, ...props }) => {\r\n\treturn (\r\n\t\t<Button\r\n\t\t\tcolor='storybook'\r\n\t\t\ticon='CustomStorybook'\r\n\t\t\ttag='a'\r\n\t\t\ttarget='_blank'\r\n\t\t\tisLight\r\n\t\t\thref={`${process.env.REACT_APP_STORYBOOK_URL}${to}`}\r\n\t\t\t// eslint-disable-next-line react/jsx-props-no-spreading\r\n\t\t\t{...props}>\r\n\t\t\tStorybook\r\n\t\t</Button>\r\n\t);\r\n};\r\n\r\nexport default CommonStoryBtn;\r\n","import React, {\r\n\tChildren,\r\n\tcloneElement,\r\n\tFC,\r\n\tJSXElementConstructor,\r\n\tReactElement,\r\n\tReactNode,\r\n} from 'react';\r\nimport classNames from 'classnames';\r\nimport { NavLink } from 'react-router-dom';\r\nimport TagWrapper from '../TagWrapper';\r\nimport Icon from '../icon/Icon';\r\n\r\ninterface IBreadcrumbItemProps extends Record<string, any> {\r\n\tchildren: ReactNode;\r\n\tariaLabel?: string;\r\n\tclassName?: string;\r\n\ttag?: string;\r\n\tto: string;\r\n\tisActive?: boolean;\r\n\tdivider?: ReactElement<any, string | JSXElementConstructor<any>> | string;\r\n}\r\nexport const BreadcrumbItem: FC<IBreadcrumbItemProps> = ({\r\n\tchildren,\r\n\tariaLabel,\r\n\tclassName,\r\n\ttag = 'li',\r\n\tto,\r\n\tisActive,\r\n\tdivider,\r\n}) => {\r\n\treturn (\r\n\t\t<TagWrapper\r\n\t\t\ttag={tag}\r\n\t\t\tclassName={classNames('breadcrumb-item', { active: isActive }, className)}\r\n\t\t\taria-current={isActive ? 'page' : null}\r\n\t\t\taria-label={ariaLabel || children}>\r\n\t\t\t{divider &&\r\n\t\t\t\ttypeof divider !== 'string' &&\r\n\t\t\t\tcloneElement(divider, {\r\n\t\t\t\t\tclassName: classNames('breadcrumb-icon', divider.props.className),\r\n\t\t\t\t})}\r\n\t\t\t{isActive ? (\r\n\t\t\t\tchildren\r\n\t\t\t) : (\r\n\t\t\t\t<NavLink to={to} aria-label={ariaLabel}>\r\n\t\t\t\t\t{children}\r\n\t\t\t\t</NavLink>\r\n\t\t\t)}\r\n\t\t</TagWrapper>\r\n\t);\r\n};\r\n\r\ninterface IBreadcrumbProps extends Record<string, any> {\r\n\tchildren?: ReactElement<IBreadcrumbItemProps> | ReactElement<IBreadcrumbItemProps>[];\r\n\tlist?: {\r\n\t\ttitle: string;\r\n\t\tto: string;\r\n\t\ttag?: 'div' | 'li';\r\n\t}[];\r\n\ttag?: 'nav' | 'div' | 'section';\r\n\tlistTag?: 'div' | 'ol' | 'ul';\r\n\titemTag?: 'div' | 'li';\r\n\tariaLabel?: string | null;\r\n\tautoActive?: boolean;\r\n\tisToHome?: ReactNode;\r\n\tdivider?: ReactElement<any, string | JSXElementConstructor<any>> | string;\r\n}\r\nconst Breadcrumb: FC<IBreadcrumbProps> = ({\r\n\tchildren,\r\n\tlist,\r\n\ttag = 'nav',\r\n\tlistTag = 'ol',\r\n\titemTag = 'li',\r\n\tariaLabel = 'breadcrumb',\r\n\tautoActive = true,\r\n\tisToHome = <Icon icon='HolidayVillage' />,\r\n\tdivider = <Icon icon='ChevronRight' />,\r\n}) => {\r\n\tconst DIVIDER = divider !== 'string' && divider;\r\n\treturn (\r\n\t\t<TagWrapper\r\n\t\t\ttag={tag}\r\n\t\t\taria-label={ariaLabel}\r\n\t\t\tstyle={\r\n\t\t\t\tdivider\r\n\t\t\t\t\t? {\r\n\t\t\t\t\t\t\t'--bs-breadcrumb-divider':\r\n\t\t\t\t\t\t\t\ttypeof divider === 'string' ? `'${divider}'` : 'none',\r\n\t\t\t\t\t\t}\r\n\t\t\t\t\t: null\r\n\t\t\t}>\r\n\t\t\t<TagWrapper tag={listTag} className='breadcrumb'>\r\n\t\t\t\t{isToHome && (\r\n\t\t\t\t\t<BreadcrumbItem to='/' ariaLabel='Home'>\r\n\t\t\t\t\t\t{isToHome}\r\n\t\t\t\t\t</BreadcrumbItem>\r\n\t\t\t\t)}\r\n\t\t\t\t{list\r\n\t\t\t\t\t? list.map((item, index) => (\r\n\t\t\t\t\t\t\t<BreadcrumbItem\r\n\t\t\t\t\t\t\t\tkey={item.title}\r\n\t\t\t\t\t\t\t\ttag={item.tag || itemTag}\r\n\t\t\t\t\t\t\t\tto={item.to}\r\n\t\t\t\t\t\t\t\tisActive={autoActive && list.length === index + 1}\r\n\t\t\t\t\t\t\t\tdivider={DIVIDER as ReactElement}>\r\n\t\t\t\t\t\t\t\t{item.title}\r\n\t\t\t\t\t\t\t</BreadcrumbItem>\r\n\t\t\t\t\t\t))\r\n\t\t\t\t\t: Children.map(children, (child, index) =>\r\n\t\t\t\t\t\t\t// @ts-ignore\r\n\t\t\t\t\t\t\tcloneElement(child, {\r\n\t\t\t\t\t\t\t\t// @ts-ignore\r\n\t\t\t\t\t\t\t\ttag: child.props.tag || itemTag,\r\n\t\t\t\t\t\t\t\t// @ts-ignore\r\n\t\t\t\t\t\t\t\tisActive: autoActive && children.length === index + 1,\r\n\t\t\t\t\t\t\t\t// @ts-ignore\r\n\t\t\t\t\t\t\t\tdivider: child.props.divider || DIVIDER,\r\n\t\t\t\t\t\t\t}),\r\n\t\t\t\t\t\t)}\r\n\t\t\t</TagWrapper>\r\n\t\t</TagWrapper>\r\n\t);\r\n};\r\n\r\nexport default Breadcrumb;\r\n","import React, { FC, HTMLAttributes, memo } from 'react';\r\nimport ReactApexChart from 'react-apexcharts';\r\nimport classNames from 'classnames';\r\nimport { ApexOptions } from 'apexcharts';\r\n\r\ninterface IChartProps extends HTMLAttributes<HTMLDivElement> {\r\n\tseries: ApexOptions['series'];\r\n\toptions: ApexOptions;\r\n\ttype?: ApexChart['type'];\r\n\twidth?: string | number;\r\n\theight?: string | number;\r\n\tclassName?: string;\r\n}\r\nconst Chart: FC<IChartProps> = ({\r\n\tseries,\r\n\toptions,\r\n\ttype = 'line',\r\n\twidth = '100%',\r\n\theight = 'auto',\r\n\tclassName,\r\n\t...props\r\n}) => {\r\n\treturn (\r\n\t\t<div className={classNames('apex-chart', className)} {...props}>\r\n\t\t\t<ReactApexChart\r\n\t\t\t\toptions={{\r\n\t\t\t\t\tcolors: [\r\n\t\t\t\t\t\tprocess.env.REACT_APP_PRIMARY_COLOR,\r\n\t\t\t\t\t\tprocess.env.REACT_APP_SECONDARY_COLOR,\r\n\t\t\t\t\t\tprocess.env.REACT_APP_SUCCESS_COLOR,\r\n\t\t\t\t\t\tprocess.env.REACT_APP_INFO_COLOR,\r\n\t\t\t\t\t\tprocess.env.REACT_APP_WARNING_COLOR,\r\n\t\t\t\t\t\tprocess.env.REACT_APP_DANGER_COLOR,\r\n\t\t\t\t\t],\r\n\t\t\t\t\tplotOptions: {\r\n\t\t\t\t\t\tcandlestick: {\r\n\t\t\t\t\t\t\tcolors: {\r\n\t\t\t\t\t\t\t\tupward: process.env.REACT_APP_SUCCESS_COLOR,\r\n\t\t\t\t\t\t\t\tdownward: process.env.REACT_APP_DANGER_COLOR,\r\n\t\t\t\t\t\t\t},\r\n\t\t\t\t\t\t},\r\n\t\t\t\t\t\tboxPlot: {\r\n\t\t\t\t\t\t\tcolors: {\r\n\t\t\t\t\t\t\t\tupper: process.env.REACT_APP_SUCCESS_COLOR,\r\n\t\t\t\t\t\t\t\tlower: process.env.REACT_APP_DANGER_COLOR,\r\n\t\t\t\t\t\t\t},\r\n\t\t\t\t\t\t},\r\n\t\t\t\t\t},\r\n\t\t\t\t\t...options,\r\n\t\t\t\t}}\r\n\t\t\t\tseries={series}\r\n\t\t\t\t// @ts-ignore\r\n\t\t\t\ttype={type}\r\n\t\t\t\twidth={width}\r\n\t\t\t\theight={height}\r\n\t\t\t/>\r\n\t\t</div>\r\n\t);\r\n};\r\n\r\n/**\r\n * For use useState\r\n */\r\nexport interface IChartOptions extends Record<string, any> {\r\n\tseries: ApexOptions['series'];\r\n\toptions: ApexOptions;\r\n}\r\n\r\nexport default memo(Chart);\r\n","import React, { useState } from 'react';\r\nimport Card, {\r\n\tCardActions,\r\n\tCardBody,\r\n\tCardHeader,\r\n\tCardLabel,\r\n\tCardSubTitle,\r\n\tCardTitle,\r\n} from '../../../../components/bootstrap/Card';\r\nimport Chart, { IChartOptions } from '../../../../components/extras/Chart';\r\nimport CommonStoryBtn from '../../../../common/other/CommonStoryBtn';\r\n\r\nconst BoxWhiskerBasic = () => {\r\n\tconst [state] = useState<IChartOptions>({\r\n\t\tseries: [\r\n\t\t\t{\r\n\t\t\t\ttype: 'boxPlot',\r\n\t\t\t\tdata: [\r\n\t\t\t\t\t{\r\n\t\t\t\t\t\tx: 'Jan 2015',\r\n\t\t\t\t\t\ty: [54, 66, 69, 75, 88],\r\n\t\t\t\t\t},\r\n\t\t\t\t\t{\r\n\t\t\t\t\t\tx: 'Jan 2016',\r\n\t\t\t\t\t\ty: [43, 65, 69, 76, 81],\r\n\t\t\t\t\t},\r\n\t\t\t\t\t{\r\n\t\t\t\t\t\tx: 'Jan 2017',\r\n\t\t\t\t\t\ty: [31, 39, 45, 51, 59],\r\n\t\t\t\t\t},\r\n\t\t\t\t\t{\r\n\t\t\t\t\t\tx: 'Jan 2018',\r\n\t\t\t\t\t\ty: [39, 46, 55, 65, 71],\r\n\t\t\t\t\t},\r\n\t\t\t\t\t{\r\n\t\t\t\t\t\tx: 'Jan 2019',\r\n\t\t\t\t\t\ty: [29, 31, 35, 39, 44],\r\n\t\t\t\t\t},\r\n\t\t\t\t\t{\r\n\t\t\t\t\t\tx: 'Jan 2020',\r\n\t\t\t\t\t\ty: [41, 49, 58, 61, 67],\r\n\t\t\t\t\t},\r\n\t\t\t\t\t{\r\n\t\t\t\t\t\tx: 'Jan 2021',\r\n\t\t\t\t\t\ty: [54, 59, 66, 71, 88],\r\n\t\t\t\t\t},\r\n\t\t\t\t],\r\n\t\t\t},\r\n\t\t],\r\n\t\toptions: {\r\n\t\t\tchart: {\r\n\t\t\t\ttype: 'boxPlot',\r\n\t\t\t\theight: 350,\r\n\t\t\t},\r\n\t\t\ttitle: {\r\n\t\t\t\ttext: 'Basic BoxPlot Chart',\r\n\t\t\t\talign: 'left',\r\n\t\t\t},\r\n\t\t\tplotOptions: {\r\n\t\t\t\tboxPlot: {\r\n\t\t\t\t\tcolors: {\r\n\t\t\t\t\t\tupper: '#5C4742',\r\n\t\t\t\t\t\tlower: '#A5978B',\r\n\t\t\t\t\t},\r\n\t\t\t\t},\r\n\t\t\t},\r\n\t\t},\r\n\t});\r\n\treturn (\r\n\t\t<div className='col-lg-6'>\r\n\t\t\t<Card stretch>\r\n\t\t\t\t<CardHeader>\r\n\t\t\t\t\t<CardLabel icon='SportsMma'>\r\n\t\t\t\t\t\t<CardTitle>\r\n\t\t\t\t\t\t\ttype <small>boxPlot</small>\r\n\t\t\t\t\t\t</CardTitle>\r\n\t\t\t\t\t\t<CardSubTitle>Chart</CardSubTitle>\r\n\t\t\t\t\t</CardLabel>\r\n\t\t\t\t\t<CardActions>\r\n\t\t\t\t\t\t<CommonStoryBtn to='/story/extra-chart-box-whisker--box-whisker-basic' />\r\n\t\t\t\t\t</CardActions>\r\n\t\t\t\t</CardHeader>\r\n\t\t\t\t<CardBody>\r\n\t\t\t\t\t<Chart\r\n\t\t\t\t\t\tseries={state.series}\r\n\t\t\t\t\t\toptions={state.options}\r\n\t\t\t\t\t\ttype='boxPlot'\r\n\t\t\t\t\t\theight={350}\r\n\t\t\t\t\t/>\r\n\t\t\t\t</CardBody>\r\n\t\t\t</Card>\r\n\t\t</div>\r\n\t);\r\n};\r\n\r\nexport default BoxWhiskerBasic;\r\n","import React, { useState } from 'react';\r\nimport Card, {\r\n\tCardBody,\r\n\tCardHeader,\r\n\tCardLabel,\r\n\tCardSubTitle,\r\n\tCardTitle,\r\n} from '../../../../components/bootstrap/Card';\r\nimport Chart, { IChartOptions } from '../../../../components/extras/Chart';\r\n\r\nconst BoxWhiskerBoxPlotScatter = () => {\r\n\tconst [state] = useState<IChartOptions>({\r\n\t\tseries: [\r\n\t\t\t{\r\n\t\t\t\tname: 'box',\r\n\t\t\t\ttype: 'boxPlot',\r\n\t\t\t\tdata: [\r\n\t\t\t\t\t{\r\n\t\t\t\t\t\tx: new Date('2017-01-01').getTime(),\r\n\t\t\t\t\t\ty: [54, 66, 69, 75, 88],\r\n\t\t\t\t\t},\r\n\t\t\t\t\t{\r\n\t\t\t\t\t\tx: new Date('2018-01-01').getTime(),\r\n\t\t\t\t\t\ty: [43, 65, 69, 76, 81],\r\n\t\t\t\t\t},\r\n\t\t\t\t\t{\r\n\t\t\t\t\t\tx: new Date('2019-01-01').getTime(),\r\n\t\t\t\t\t\ty: [31, 39, 45, 51, 59],\r\n\t\t\t\t\t},\r\n\t\t\t\t\t{\r\n\t\t\t\t\t\tx: new Date('2020-01-01').getTime(),\r\n\t\t\t\t\t\ty: [39, 46, 55, 65, 71],\r\n\t\t\t\t\t},\r\n\t\t\t\t\t{\r\n\t\t\t\t\t\tx: new Date('2021-01-01').getTime(),\r\n\t\t\t\t\t\ty: [29, 31, 35, 39, 44],\r\n\t\t\t\t\t},\r\n\t\t\t\t],\r\n\t\t\t},\r\n\t\t\t{\r\n\t\t\t\tname: 'outliers',\r\n\t\t\t\ttype: 'scatter',\r\n\t\t\t\tdata: [\r\n\t\t\t\t\t{\r\n\t\t\t\t\t\tx: new Date('2017-01-01').getTime(),\r\n\t\t\t\t\t\ty: 32,\r\n\t\t\t\t\t},\r\n\t\t\t\t\t{\r\n\t\t\t\t\t\tx: new Date('2018-01-01').getTime(),\r\n\t\t\t\t\t\ty: 25,\r\n\t\t\t\t\t},\r\n\t\t\t\t\t{\r\n\t\t\t\t\t\tx: new Date('2019-01-01').getTime(),\r\n\t\t\t\t\t\ty: 64,\r\n\t\t\t\t\t},\r\n\t\t\t\t\t{\r\n\t\t\t\t\t\tx: new Date('2020-01-01').getTime(),\r\n\t\t\t\t\t\ty: 27,\r\n\t\t\t\t\t},\r\n\t\t\t\t\t{\r\n\t\t\t\t\t\tx: new Date('2020-01-01').getTime(),\r\n\t\t\t\t\t\ty: 78,\r\n\t\t\t\t\t},\r\n\t\t\t\t\t{\r\n\t\t\t\t\t\tx: new Date('2021-01-01').getTime(),\r\n\t\t\t\t\t\ty: 15,\r\n\t\t\t\t\t},\r\n\t\t\t\t],\r\n\t\t\t},\r\n\t\t],\r\n\t\toptions: {\r\n\t\t\tchart: {\r\n\t\t\t\ttype: 'boxPlot',\r\n\t\t\t\theight: 350,\r\n\t\t\t},\r\n\t\t\tcolors: ['#008FFB', '#FEB019'],\r\n\t\t\ttitle: {\r\n\t\t\t\ttext: 'BoxPlot - Scatter Chart',\r\n\t\t\t\talign: 'left',\r\n\t\t\t},\r\n\t\t\txaxis: {\r\n\t\t\t\ttype: 'datetime',\r\n\t\t\t\ttooltip: {\r\n\t\t\t\t\tformatter(val) {\r\n\t\t\t\t\t\treturn new Date(val).getFullYear().toString();\r\n\t\t\t\t\t},\r\n\t\t\t\t},\r\n\t\t\t},\r\n\t\t\ttooltip: {\r\n\t\t\t\tshared: false,\r\n\t\t\t\tintersect: true,\r\n\t\t\t},\r\n\t\t},\r\n\t});\r\n\treturn (\r\n\t\t<div className='col-lg-6'>\r\n\t\t\t<Card stretch>\r\n\t\t\t\t<CardHeader>\r\n\t\t\t\t\t<CardLabel icon='SportsMma'>\r\n\t\t\t\t\t\t<CardTitle>\r\n\t\t\t\t\t\t\ttype <small>boxPlot</small>\r\n\t\t\t\t\t\t</CardTitle>\r\n\t\t\t\t\t\t<CardSubTitle>Chart</CardSubTitle>\r\n\t\t\t\t\t</CardLabel>\r\n\t\t\t\t</CardHeader>\r\n\t\t\t\t<CardBody>\r\n\t\t\t\t\t<Chart\r\n\t\t\t\t\t\tseries={state.series}\r\n\t\t\t\t\t\toptions={state.options}\r\n\t\t\t\t\t\ttype='boxPlot'\r\n\t\t\t\t\t\theight={350}\r\n\t\t\t\t\t/>\r\n\t\t\t\t</CardBody>\r\n\t\t\t</Card>\r\n\t\t</div>\r\n\t);\r\n};\r\n\r\nexport default BoxWhiskerBoxPlotScatter;\r\n","import React from 'react';\r\nimport SubHeader, { SubHeaderLeft, SubHeaderRight } from '../../../layout/SubHeader/SubHeader';\r\nimport Breadcrumb from '../../../components/bootstrap/Breadcrumb';\r\nimport Page from '../../../layout/Page/Page';\r\nimport PageWrapper from '../../../layout/PageWrapper/PageWrapper';\r\nimport BoxWhiskerBasic from './chart-boxWhisker/BoxWhiskerBasic';\r\nimport BoxWhiskerBoxPlotScatter from './chart-boxWhisker/BoxWhiskerBoxPlotScatter';\r\nimport CommonStoryBtn from '../../../common/other/CommonStoryBtn';\r\nimport { componentPagesMenu } from '../../../menu';\r\n\r\nconst ChartBoxWhiskerPage = () => {\r\n\treturn (\r\n\t\t<PageWrapper title={componentPagesMenu.charts.subMenu.chartsBoxWhisker.text}>\r\n\t\t\t<SubHeader>\r\n\t\t\t\t<SubHeaderLeft>\r\n\t\t\t\t\t<Breadcrumb\r\n\t\t\t\t\t\tlist={[\r\n\t\t\t\t\t\t\t{ title: 'Charts', to: '/charts' },\r\n\t\t\t\t\t\t\t{ title: 'Box Whisker', to: '/charts/box-whisker' },\r\n\t\t\t\t\t\t]}\r\n\t\t\t\t\t/>\r\n\t\t\t\t</SubHeaderLeft>\r\n\t\t\t\t<SubHeaderRight>\r\n\t\t\t\t\t<CommonStoryBtn to='/story/extra-chart-box-whisker--box-whisker-basic' />\r\n\t\t\t\t</SubHeaderRight>\r\n\t\t\t</SubHeader>\r\n\t\t\t<Page>\r\n\t\t\t\t<div className='row'>\r\n\t\t\t\t\t<BoxWhiskerBasic />\r\n\t\t\t\t\t<BoxWhiskerBoxPlotScatter />\r\n\t\t\t\t</div>\r\n\t\t\t</Page>\r\n\t\t</PageWrapper>\r\n\t);\r\n};\r\n\r\nexport default ChartBoxWhiskerPage;\r\n"],"names":["_ref","to","props","_jsx","Button","color","icon","tag","target","isLight","href","children","BreadcrumbItem","ariaLabel","className","isActive","divider","_jsxs","TagWrapper","classNames","active","cloneElement","NavLink","_ref2","list","listTag","itemTag","autoActive","isToHome","Icon","DIVIDER","style","map","item","index","length","title","Children","child","Chart","series","options","type","width","height","ReactApexChart","colors","process","plotOptions","candlestick","upward","downward","boxPlot","upper","lower","memo","BoxWhiskerBasic","state","useState","data","x","y","chart","text","align","Card","stretch","CardHeader","CardLabel","CardTitle","CardSubTitle","CardActions","CommonStoryBtn","CardBody","BoxWhiskerBoxPlotScatter","name","Date","getTime","xaxis","tooltip","formatter","val","getFullYear","toString","shared","intersect","ChartBoxWhiskerPage","PageWrapper","componentPagesMenu","charts","subMenu","chartsBoxWhisker","SubHeader","SubHeaderLeft","Breadcrumb","SubHeaderRight","Page"],"sourceRoot":""}