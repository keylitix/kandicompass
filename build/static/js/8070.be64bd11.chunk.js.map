{"version":3,"file":"static/js/8070.be64bd11.chunk.js","mappings":"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","sources":["components/PaginationButtons.tsx","components/bootstrap/Breadcrumb.tsx","components/bootstrap/Option.tsx","components/bootstrap/Pagination.tsx","components/bootstrap/forms/Checks.tsx","components/bootstrap/forms/Select.tsx","hooks/useSelectTable.tsx","hooks/useSortableData.ts","pages/documentation/components/TablePage.tsx"],"sourcesContent":["import React, { FC } from 'react';\r\nimport { CardFooter, CardFooterLeft, CardFooterRight } from './bootstrap/Card';\r\nimport Pagination, { PaginationItem } from './bootstrap/Pagination';\r\nimport Select from './bootstrap/forms/Select';\r\nimport Option from './bootstrap/Option';\r\n\r\nexport const PER_COUNT = {\r\n\t3: 3,\r\n\t5: 5,\r\n\t10: 10,\r\n\t25: 25,\r\n\t50: 50,\r\n};\r\n\r\nexport const dataPagination = (data: any[], currentPage: number, perPage: number) =>\r\n\tdata.filter(\r\n\t\t(i, index) => index + 1 > (currentPage - 1) * perPage && index + 1 <= currentPage * perPage,\r\n\t);\r\n\r\ninterface IPaginationButtonsProps {\r\n\tsetCurrentPage(...args: unknown[]): unknown;\r\n\tcurrentPage: number;\r\n\tperPage: number;\r\n\tsetPerPage(...args: unknown[]): unknown;\r\n\tdata: unknown[];\r\n\tlabel?: string;\r\n}\r\nconst PaginationButtons: FC<IPaginationButtonsProps> = ({\r\n\tsetCurrentPage,\r\n\tcurrentPage,\r\n\tperPage,\r\n\tsetPerPage,\r\n\tdata,\r\n\tlabel = 'items',\r\n}) => {\r\n\tconst totalItems = data.length;\r\n\tconst totalPage = Math.ceil(totalItems / perPage);\r\n\r\n\tconst pagination = () => {\r\n\t\tlet items = [];\r\n\r\n\t\tlet i = currentPage - 1;\r\n\t\twhile (i >= currentPage - 1 && i > 0) {\r\n\t\t\titems.push(\r\n\t\t\t\t<PaginationItem key={i} onClick={() => setCurrentPage(currentPage - 1)}>\r\n\t\t\t\t\t{i}\r\n\t\t\t\t</PaginationItem>,\r\n\t\t\t);\r\n\r\n\t\t\ti -= 1;\r\n\t\t}\r\n\r\n\t\titems = items.reverse();\r\n\r\n\t\titems.push(\r\n\t\t\t<PaginationItem key={currentPage} isActive onClick={() => setCurrentPage(currentPage)}>\r\n\t\t\t\t{currentPage}\r\n\t\t\t</PaginationItem>,\r\n\t\t);\r\n\r\n\t\ti = currentPage + 1;\r\n\t\twhile (i <= currentPage + 1 && i <= totalPage) {\r\n\t\t\titems.push(\r\n\t\t\t\t<PaginationItem key={i} onClick={() => setCurrentPage(currentPage + 1)}>\r\n\t\t\t\t\t{i}\r\n\t\t\t\t</PaginationItem>,\r\n\t\t\t);\r\n\r\n\t\t\ti += 1;\r\n\t\t}\r\n\r\n\t\treturn items;\r\n\t};\r\n\r\n\tconst getInfo = () => {\r\n\t\tconst start = perPage * (currentPage - 1) + 1;\r\n\r\n\t\tconst end = perPage * currentPage;\r\n\r\n\t\treturn (\r\n\t\t\t<span className='pagination__desc'>\r\n\t\t\t\tShowing {start} to {end > totalItems ? totalItems : end} of {totalItems} {label}\r\n\t\t\t</span>\r\n\t\t);\r\n\t};\r\n\r\n\treturn (\r\n\t\t<CardFooter>\r\n\t\t\t<CardFooterLeft>\r\n\t\t\t\t<span className='text-muted'>{getInfo()}</span>\r\n\t\t\t</CardFooterLeft>\r\n\r\n\t\t\t<CardFooterRight className='d-flex'>\r\n\t\t\t\t{totalPage > 1 && (\r\n\t\t\t\t\t// @ts-ignore\r\n\t\t\t\t\t<Pagination ariaLabel={label}>\r\n\t\t\t\t\t\t<PaginationItem\r\n\t\t\t\t\t\t\tisFirst\r\n\t\t\t\t\t\t\tisDisabled={!(currentPage - 1 > 0)}\r\n\t\t\t\t\t\t\tonClick={() => setCurrentPage(1)}\r\n\t\t\t\t\t\t/>\r\n\t\t\t\t\t\t<PaginationItem\r\n\t\t\t\t\t\t\tisPrev\r\n\t\t\t\t\t\t\tisDisabled={!(currentPage - 1 > 0)}\r\n\t\t\t\t\t\t\tonClick={() => setCurrentPage(currentPage - 1)}\r\n\t\t\t\t\t\t/>\r\n\t\t\t\t\t\t{currentPage - 1 > 1 && (\r\n\t\t\t\t\t\t\t<PaginationItem onClick={() => setCurrentPage(currentPage - 2)}>\r\n\t\t\t\t\t\t\t\t...\r\n\t\t\t\t\t\t\t</PaginationItem>\r\n\t\t\t\t\t\t)}\r\n\t\t\t\t\t\t{pagination()}\r\n\t\t\t\t\t\t{currentPage + 1 < totalPage && (\r\n\t\t\t\t\t\t\t<PaginationItem onClick={() => setCurrentPage(currentPage + 2)}>\r\n\t\t\t\t\t\t\t\t...\r\n\t\t\t\t\t\t\t</PaginationItem>\r\n\t\t\t\t\t\t)}\r\n\t\t\t\t\t\t<PaginationItem\r\n\t\t\t\t\t\t\tisNext\r\n\t\t\t\t\t\t\tisDisabled={!(currentPage + 1 <= totalPage)}\r\n\t\t\t\t\t\t\tonClick={() => setCurrentPage(currentPage + 1)}\r\n\t\t\t\t\t\t/>\r\n\t\t\t\t\t\t<PaginationItem\r\n\t\t\t\t\t\t\tisLast\r\n\t\t\t\t\t\t\tisDisabled={!(currentPage + 1 <= totalPage)}\r\n\t\t\t\t\t\t\tonClick={() => setCurrentPage(totalPage)}\r\n\t\t\t\t\t\t/>\r\n\t\t\t\t\t</Pagination>\r\n\t\t\t\t)}\r\n\r\n\t\t\t\t<Select\r\n\t\t\t\t\tsize='sm'\r\n\t\t\t\t\tariaLabel='Per'\r\n\t\t\t\t\tonChange={(e: { target: { value: string } }) => {\r\n\t\t\t\t\t\tsetPerPage(parseInt(e.target.value, 10));\r\n\t\t\t\t\t\tsetCurrentPage(1);\r\n\t\t\t\t\t}}\r\n\t\t\t\t\tvalue={perPage.toString()}>\r\n\t\t\t\t\t{Object.keys(PER_COUNT).map((i) => (\r\n\t\t\t\t\t\t<Option key={i} value={i}>\r\n\t\t\t\t\t\t\t{i}\r\n\t\t\t\t\t\t</Option>\r\n\t\t\t\t\t))}\r\n\t\t\t\t</Select>\r\n\t\t\t</CardFooterRight>\r\n\t\t</CardFooter>\r\n\t);\r\n};\r\n\r\nexport default PaginationButtons;\r\n","import React, {\r\n\tChildren,\r\n\tcloneElement,\r\n\tFC,\r\n\tJSXElementConstructor,\r\n\tReactElement,\r\n\tReactNode,\r\n} from 'react';\r\nimport classNames from 'classnames';\r\nimport { NavLink } from 'react-router-dom';\r\nimport TagWrapper from '../TagWrapper';\r\nimport Icon from '../icon/Icon';\r\n\r\ninterface IBreadcrumbItemProps extends Record<string, any> {\r\n\tchildren: ReactNode;\r\n\tariaLabel?: string;\r\n\tclassName?: string;\r\n\ttag?: string;\r\n\tto: string;\r\n\tisActive?: boolean;\r\n\tdivider?: ReactElement<any, string | JSXElementConstructor<any>> | string;\r\n}\r\nexport const BreadcrumbItem: FC<IBreadcrumbItemProps> = ({\r\n\tchildren,\r\n\tariaLabel,\r\n\tclassName,\r\n\ttag = 'li',\r\n\tto,\r\n\tisActive,\r\n\tdivider,\r\n}) => {\r\n\treturn (\r\n\t\t<TagWrapper\r\n\t\t\ttag={tag}\r\n\t\t\tclassName={classNames('breadcrumb-item', { active: isActive }, className)}\r\n\t\t\taria-current={isActive ? 'page' : null}\r\n\t\t\taria-label={ariaLabel || children}>\r\n\t\t\t{divider &&\r\n\t\t\t\ttypeof divider !== 'string' &&\r\n\t\t\t\tcloneElement(divider, {\r\n\t\t\t\t\tclassName: classNames('breadcrumb-icon', divider.props.className),\r\n\t\t\t\t})}\r\n\t\t\t{isActive ? (\r\n\t\t\t\tchildren\r\n\t\t\t) : (\r\n\t\t\t\t<NavLink to={to} aria-label={ariaLabel}>\r\n\t\t\t\t\t{children}\r\n\t\t\t\t</NavLink>\r\n\t\t\t)}\r\n\t\t</TagWrapper>\r\n\t);\r\n};\r\n\r\ninterface IBreadcrumbProps extends Record<string, any> {\r\n\tchildren?: ReactElement<IBreadcrumbItemProps> | ReactElement<IBreadcrumbItemProps>[];\r\n\tlist?: {\r\n\t\ttitle: string;\r\n\t\tto: string;\r\n\t\ttag?: 'div' | 'li';\r\n\t}[];\r\n\ttag?: 'nav' | 'div' | 'section';\r\n\tlistTag?: 'div' | 'ol' | 'ul';\r\n\titemTag?: 'div' | 'li';\r\n\tariaLabel?: string | null;\r\n\tautoActive?: boolean;\r\n\tisToHome?: ReactNode;\r\n\tdivider?: ReactElement<any, string | JSXElementConstructor<any>> | string;\r\n}\r\nconst Breadcrumb: FC<IBreadcrumbProps> = ({\r\n\tchildren,\r\n\tlist,\r\n\ttag = 'nav',\r\n\tlistTag = 'ol',\r\n\titemTag = 'li',\r\n\tariaLabel = 'breadcrumb',\r\n\tautoActive = true,\r\n\tisToHome = <Icon icon='HolidayVillage' />,\r\n\tdivider = <Icon icon='ChevronRight' />,\r\n}) => {\r\n\tconst DIVIDER = divider !== 'string' && divider;\r\n\treturn (\r\n\t\t<TagWrapper\r\n\t\t\ttag={tag}\r\n\t\t\taria-label={ariaLabel}\r\n\t\t\tstyle={\r\n\t\t\t\tdivider\r\n\t\t\t\t\t? {\r\n\t\t\t\t\t\t\t'--bs-breadcrumb-divider':\r\n\t\t\t\t\t\t\t\ttypeof divider === 'string' ? `'${divider}'` : 'none',\r\n\t\t\t\t\t\t}\r\n\t\t\t\t\t: null\r\n\t\t\t}>\r\n\t\t\t<TagWrapper tag={listTag} className='breadcrumb'>\r\n\t\t\t\t{isToHome && (\r\n\t\t\t\t\t<BreadcrumbItem to='/' ariaLabel='Home'>\r\n\t\t\t\t\t\t{isToHome}\r\n\t\t\t\t\t</BreadcrumbItem>\r\n\t\t\t\t)}\r\n\t\t\t\t{list\r\n\t\t\t\t\t? list.map((item, index) => (\r\n\t\t\t\t\t\t\t<BreadcrumbItem\r\n\t\t\t\t\t\t\t\tkey={item.title}\r\n\t\t\t\t\t\t\t\ttag={item.tag || itemTag}\r\n\t\t\t\t\t\t\t\tto={item.to}\r\n\t\t\t\t\t\t\t\tisActive={autoActive && list.length === index + 1}\r\n\t\t\t\t\t\t\t\tdivider={DIVIDER as ReactElement}>\r\n\t\t\t\t\t\t\t\t{item.title}\r\n\t\t\t\t\t\t\t</BreadcrumbItem>\r\n\t\t\t\t\t\t))\r\n\t\t\t\t\t: Children.map(children, (child, index) =>\r\n\t\t\t\t\t\t\t// @ts-ignore\r\n\t\t\t\t\t\t\tcloneElement(child, {\r\n\t\t\t\t\t\t\t\t// @ts-ignore\r\n\t\t\t\t\t\t\t\ttag: child.props.tag || itemTag,\r\n\t\t\t\t\t\t\t\t// @ts-ignore\r\n\t\t\t\t\t\t\t\tisActive: autoActive && children.length === index + 1,\r\n\t\t\t\t\t\t\t\t// @ts-ignore\r\n\t\t\t\t\t\t\t\tdivider: child.props.divider || DIVIDER,\r\n\t\t\t\t\t\t\t}),\r\n\t\t\t\t\t\t)}\r\n\t\t\t</TagWrapper>\r\n\t\t</TagWrapper>\r\n\t);\r\n};\r\n\r\nexport default Breadcrumb;\r\n","import React, { FC, HTMLAttributes } from 'react';\r\n\r\ninterface IOptionProps extends HTMLAttributes<HTMLOptionElement> {\r\n\tchildren: string;\r\n\tvalue?: string | number;\r\n\tdisabled?: boolean;\r\n\tariaLabelledby?: string | null;\r\n}\r\nconst Option: FC<IOptionProps> = ({ children, value, disabled, ariaLabelledby, ...props }) => {\r\n\treturn (\r\n\t\t<option\r\n\t\t\tvalue={value}\r\n\t\t\tdisabled={disabled}\r\n\t\t\taria-labelledby={ariaLabelledby || children}\r\n\t\t\t{...props}>\r\n\t\t\t{children}\r\n\t\t</option>\r\n\t);\r\n};\r\n\r\nexport interface IOptionsProps {\r\n\tlist: {\r\n\t\tvalue?: string | number;\r\n\t\ttext?: string | number;\r\n\t\tlabel?: string | number;\r\n\t}[];\r\n}\r\n// @ts-ignore\r\nexport const Options: FC<IOptionsProps> = ({ list }) => {\r\n\treturn list?.map((item) => (\r\n\t\t// eslint-disable-next-line react/jsx-props-no-spreading\r\n\t\t<Option key={item.value} value={item.value} {...item}>\r\n\t\t\t{(item.text as string) || (item.label as string)}\r\n\t\t</Option>\r\n\t));\r\n};\r\n\r\nexport default Option;\r\n","import React, { forwardRef, HTMLAttributes, ReactElement, ReactNode } from 'react';\r\nimport classNames from 'classnames';\r\nimport Icon from '../icon/Icon';\r\n\r\ninterface IPaginationItemProps extends HTMLAttributes<HTMLLIElement> {\r\n\tclassName?: string;\r\n\tisDisabled?: boolean;\r\n\tisActive?: boolean;\r\n\tisPrev?: boolean;\r\n\tisFirst?: boolean;\r\n\tisNext?: boolean;\r\n\tisLast?: boolean;\r\n\tchildren?: ReactNode;\r\n\tonClick?(...args: unknown[]): unknown | undefined;\r\n}\r\nexport const PaginationItem = forwardRef<HTMLLIElement, IPaginationItemProps>(\r\n\t(\r\n\t\t{\r\n\t\t\tclassName,\r\n\t\t\tisDisabled,\r\n\t\t\tisActive,\r\n\t\t\tisPrev,\r\n\t\t\tisFirst,\r\n\t\t\tisNext,\r\n\t\t\tisLast,\r\n\t\t\tchildren,\r\n\t\t\tonClick,\r\n\t\t\t...props\r\n\t\t},\r\n\t\tref,\r\n\t) => {\r\n\t\treturn (\r\n\t\t\t<li\r\n\t\t\t\tref={ref}\r\n\t\t\t\tclassName={classNames(\r\n\t\t\t\t\t'page-item',\r\n\t\t\t\t\t{\r\n\t\t\t\t\t\tdisabled: isDisabled,\r\n\t\t\t\t\t\tactive: isActive,\r\n\t\t\t\t\t},\r\n\t\t\t\t\tclassName,\r\n\t\t\t\t)}\r\n\t\t\t\t{...props}>\r\n\t\t\t\t<span\r\n\t\t\t\t\trole='button'\r\n\t\t\t\t\tonClick={onClick}\r\n\t\t\t\t\tonKeyDown={onClick}\r\n\t\t\t\t\tclassName='page-link'\r\n\t\t\t\t\ttabIndex={isDisabled ? -1 : undefined}\r\n\t\t\t\t\taria-disabled={isDisabled ? 'true' : undefined}\r\n\t\t\t\t\taria-label={\r\n\t\t\t\t\t\t(isPrev && 'First Page') || (isNext && 'Last Page') || `${children} page`\r\n\t\t\t\t\t}>\r\n\t\t\t\t\t{isPrev && <Icon icon='ChevronLeft' />}\r\n\t\t\t\t\t{isFirst && <Icon icon='FirstPage' />}\r\n\t\t\t\t\t{isNext && <Icon icon='ChevronRight' />}\r\n\t\t\t\t\t{isLast && <Icon icon='LastPage' />}\r\n\t\t\t\t\t{children}\r\n\t\t\t\t</span>\r\n\t\t\t</li>\r\n\t\t);\r\n\t},\r\n);\r\nPaginationItem.displayName = 'PaginationItem';\r\n\r\ninterface IPaginationProps extends HTMLAttributes<HTMLElement> {\r\n\tariaLabel: string;\r\n\tchildren:\r\n\t\t| ReactElement<IPaginationItemProps>\r\n\t\t| ReactElement<IPaginationItemProps>[]\r\n\t\t| ReactNode\r\n\t\t| ReactNode[];\r\n\tclassName?: string | undefined;\r\n\tsize?: 'sm' | 'lg' | null;\r\n}\r\nconst Pagination = forwardRef<HTMLDivElement, IPaginationProps>(\r\n\t({ ariaLabel, className, children, size, ...props }, ref) => {\r\n\t\treturn (\r\n\t\t\t<nav ref={ref} aria-label={ariaLabel} className={className} {...props}>\r\n\t\t\t\t<ul className={classNames('pagination', { [`pagination-${size}`]: size }, 'm-0')}>\r\n\t\t\t\t\t{children}\r\n\t\t\t\t</ul>\r\n\t\t\t</nav>\r\n\t\t);\r\n\t},\r\n);\r\nPagination.displayName = 'Pagination';\r\n\r\nexport default Pagination;\r\n","import React, {\r\n\tChildren,\r\n\tcloneElement,\r\n\tforwardRef,\r\n\tHTMLAttributes,\r\n\tReactElement,\r\n\tReactNode,\r\n} from 'react';\r\nimport classNames from 'classnames';\r\nimport Validation from './Validation';\r\n\r\ninterface IChecksGroupProps extends HTMLAttributes<HTMLDivElement> {\r\n\tid?: string | undefined;\r\n\tclassName?: string;\r\n\tchildren: ReactElement<IChecksProps> | ReactElement<IChecksProps>[];\r\n\tisInline?: boolean;\r\n\tisTouched?: boolean;\r\n\tisValid?: boolean;\r\n\tinvalidFeedback?: string;\r\n\tvalidFeedback?: string;\r\n\tisTooltipFeedback?: boolean;\r\n}\r\nexport const ChecksGroup = forwardRef<HTMLDivElement, IChecksGroupProps>(\r\n\t(\r\n\t\t{\r\n\t\t\tid,\r\n\t\t\tclassName,\r\n\t\t\tchildren,\r\n\t\t\tisInline,\r\n\t\t\tisValid,\r\n\t\t\tisTouched,\r\n\t\t\tinvalidFeedback,\r\n\t\t\tvalidFeedback,\r\n\t\t\tisTooltipFeedback,\r\n\t\t\t...props\r\n\t\t},\r\n\t\tref,\r\n\t) => {\r\n\t\treturn (\r\n\t\t\t<>\r\n\t\t\t\t<div\r\n\t\t\t\t\tref={ref}\r\n\t\t\t\t\tid={id}\r\n\t\t\t\t\tclassName={classNames(\r\n\t\t\t\t\t\t{\r\n\t\t\t\t\t\t\t'is-invalid': !isValid && isTouched && invalidFeedback,\r\n\t\t\t\t\t\t\t'is-valid': !isValid && isTouched && !invalidFeedback,\r\n\t\t\t\t\t\t},\r\n\t\t\t\t\t\tclassName,\r\n\t\t\t\t\t)}\r\n\t\t\t\t\t{...props}>\r\n\t\t\t\t\t{Children.map(children, (child) =>\r\n\t\t\t\t\t\tcloneElement(child, {\r\n\t\t\t\t\t\t\tisInline: child.props.isInline || isInline,\r\n\t\t\t\t\t\t\tisValid,\r\n\t\t\t\t\t\t\tisTouched,\r\n\t\t\t\t\t\t\tinvalidFeedback,\r\n\t\t\t\t\t\t\tvalidFeedback,\r\n\t\t\t\t\t\t\tisTooltipFeedback,\r\n\t\t\t\t\t\t\tisValidMessage: false,\r\n\t\t\t\t\t\t}),\r\n\t\t\t\t\t)}\r\n\t\t\t\t</div>\r\n\t\t\t\t<Validation\r\n\t\t\t\t\tisTouched={isTouched}\r\n\t\t\t\t\tinvalidFeedback={invalidFeedback}\r\n\t\t\t\t\tvalidFeedback={validFeedback}\r\n\t\t\t\t\tisTooltip={isTooltipFeedback}\r\n\t\t\t\t/>\r\n\t\t\t</>\r\n\t\t);\r\n\t},\r\n);\r\nChecksGroup.displayName = 'ChecksGroup';\r\n\r\nexport interface IChecksProps extends HTMLAttributes<HTMLInputElement> {\r\n\tid?: string | undefined;\r\n\tclassName?: string;\r\n\tname?: string | null;\r\n\ttype?: 'checkbox' | 'radio' | 'switch';\r\n\tlabel?: ReactNode;\r\n\tvalue?: string | number;\r\n\tchecked?: boolean | string;\r\n\tdisabled?: boolean;\r\n\tisInline?: boolean;\r\n\tisFormCheckInput?: boolean;\r\n\tisTouched?: boolean;\r\n\tisValid?: boolean;\r\n\tinvalidFeedback?: string;\r\n\tvalidFeedback?: string;\r\n\tisValidMessage?: boolean;\r\n\tisTooltipFeedback?: boolean;\r\n\tonBlur?(...args: unknown[]): unknown;\r\n\tonChange?(...args: unknown[]): unknown;\r\n\tonFocus?(...args: unknown[]): unknown;\r\n\tonInput?(...args: unknown[]): unknown;\r\n\tonInvalid?(...args: unknown[]): unknown;\r\n\tonSelect?(...args: unknown[]): unknown;\r\n\tariaLabel?: string;\r\n}\r\nconst Checks = forwardRef<HTMLInputElement, IChecksProps>(\r\n\t(\r\n\t\t{\r\n\t\t\tid,\r\n\t\t\tclassName,\r\n\t\t\tname,\r\n\t\t\ttype = 'checkbox',\r\n\t\t\tlabel,\r\n\t\t\tvalue,\r\n\t\t\tchecked,\r\n\t\t\tdisabled,\r\n\t\t\tisInline,\r\n\t\t\tisFormCheckInput,\r\n\t\t\tisValid,\r\n\t\t\tisTouched,\r\n\t\t\tinvalidFeedback,\r\n\t\t\tvalidFeedback,\r\n\t\t\tisValidMessage = true,\r\n\t\t\tisTooltipFeedback,\r\n\t\t\tonBlur,\r\n\t\t\tonChange,\r\n\t\t\tonFocus,\r\n\t\t\tonInput,\r\n\t\t\tonInvalid,\r\n\t\t\tonSelect,\r\n\t\t\tariaLabel,\r\n\t\t\t...props\r\n\t\t},\r\n\t\tref,\r\n\t) => {\r\n\t\tconst INNER = (\r\n\t\t\t<input\r\n\t\t\t\tref={ref}\r\n\t\t\t\tclassName={classNames(\r\n\t\t\t\t\t'form-check-input',\r\n\t\t\t\t\t{\r\n\t\t\t\t\t\t'mt-0': isFormCheckInput,\r\n\t\t\t\t\t\t'is-invalid': !isValid && isTouched && invalidFeedback,\r\n\t\t\t\t\t\t'is-valid': !isValid && isTouched && !invalidFeedback,\r\n\t\t\t\t\t},\r\n\t\t\t\t\tclassName,\r\n\t\t\t\t)}\r\n\t\t\t\tname={name === null ? id : name}\r\n\t\t\t\ttype={type === 'radio' ? 'radio' : 'checkbox'}\r\n\t\t\t\tid={id}\r\n\t\t\t\tvalue={value}\r\n\t\t\t\tchecked={type === 'radio' ? checked === value : !!checked}\r\n\t\t\t\tdisabled={disabled}\r\n\t\t\t\tonBlur={onBlur}\r\n\t\t\t\tonChange={onChange}\r\n\t\t\t\tonFocus={onFocus}\r\n\t\t\t\tonInput={onInput}\r\n\t\t\t\tonInvalid={onInvalid}\r\n\t\t\t\tonSelect={onSelect}\r\n\t\t\t\taria-label={ariaLabel}\r\n\t\t\t\t{...props}\r\n\t\t\t/>\r\n\t\t);\r\n\r\n\t\tif (isFormCheckInput) {\r\n\t\t\treturn INNER;\r\n\t\t}\r\n\t\treturn (\r\n\t\t\t<div\r\n\t\t\t\tclassName={classNames('form-check', {\r\n\t\t\t\t\t'form-switch': type === 'switch',\r\n\t\t\t\t\t'form-check-inline': isInline,\r\n\t\t\t\t})}>\r\n\t\t\t\t{INNER}\r\n\t\t\t\t{label && (\r\n\t\t\t\t\t<label className='form-check-label' htmlFor={id}>\r\n\t\t\t\t\t\t{label}\r\n\t\t\t\t\t</label>\r\n\t\t\t\t)}\r\n\t\t\t\t{isValidMessage && (\r\n\t\t\t\t\t<Validation\r\n\t\t\t\t\t\tisTouched={isTouched}\r\n\t\t\t\t\t\tinvalidFeedback={invalidFeedback}\r\n\t\t\t\t\t\tvalidFeedback={validFeedback}\r\n\t\t\t\t\t\tisTooltip={isTooltipFeedback}\r\n\t\t\t\t\t/>\r\n\t\t\t\t)}\r\n\t\t\t</div>\r\n\t\t);\r\n\t},\r\n);\r\nChecks.displayName = 'Checks';\r\n\r\nexport default Checks;\r\n","import React, { forwardRef, HTMLAttributes, ReactNode } from 'react';\r\nimport classNames from 'classnames';\r\nimport Option, { IOptionsProps, Options } from '../Option';\r\nimport Validation from './Validation';\r\n\r\ninterface ISelectProps extends Partial<IOptionsProps>, HTMLAttributes<HTMLSelectElement> {\r\n\tid?: string;\r\n\tclassName?: string;\r\n\tname?: string;\r\n\tchildren?: ReactNode;\r\n\tariaLabel: string;\r\n\tplaceholder?: string;\r\n\tsize?: 'lg' | 'sm';\r\n\tmultiple?: boolean;\r\n\tdisabled?: boolean;\r\n\trequired?: boolean;\r\n\tariaDescribedby?: string;\r\n\tariaLabelledby?: string;\r\n\ttitle?: string;\r\n\tvalue?: string | string[];\r\n\tdefaultValue?: string | string[];\r\n\tisTouched?: boolean;\r\n\tisValid?: boolean;\r\n\tinvalidFeedback?: string;\r\n\tvalidFeedback?: string;\r\n\tisValidMessage?: boolean;\r\n\tisTooltipFeedback?: boolean;\r\n\tonBlur?(...args: unknown[]): unknown;\r\n\tonChange?(...args: unknown[]): unknown;\r\n\tonFocus?(...args: unknown[]): unknown;\r\n\tonInput?(...args: unknown[]): unknown;\r\n\tonInvalid?(...args: unknown[]): unknown;\r\n\tonSelect?(...args: unknown[]): unknown;\r\n}\r\nconst Select = forwardRef<HTMLSelectElement, ISelectProps>(\r\n\t(\r\n\t\t{\r\n\t\t\tid,\r\n\t\t\tname,\r\n\t\t\tclassName,\r\n\t\t\tchildren,\r\n\t\t\trequired,\r\n\t\t\tplaceholder,\r\n\t\t\tariaDescribedby,\r\n\t\t\tariaLabelledby,\r\n\t\t\tariaLabel,\r\n\t\t\tlist,\r\n\t\t\tmultiple,\r\n\t\t\ttitle,\r\n\t\t\tsize,\r\n\t\t\tdisabled,\r\n\t\t\tvalue,\r\n\t\t\tdefaultValue,\r\n\t\t\tisValid,\r\n\t\t\tisTouched,\r\n\t\t\tinvalidFeedback,\r\n\t\t\tvalidFeedback,\r\n\t\t\tisValidMessage = true,\r\n\t\t\tisTooltipFeedback,\r\n\t\t\tonBlur,\r\n\t\t\tonChange,\r\n\t\t\tonFocus,\r\n\t\t\tonInput,\r\n\t\t\tonInvalid,\r\n\t\t\tonSelect,\r\n\t\t\t...props\r\n\t\t},\r\n\r\n\t\tref,\r\n\t) => {\r\n\t\treturn (\r\n\t\t\t<>\r\n\t\t\t\t<select\r\n\t\t\t\t\tref={ref}\r\n\t\t\t\t\tid={id}\r\n\t\t\t\t\tclassName={classNames(\r\n\t\t\t\t\t\t'form-select',\r\n\t\t\t\t\t\t{\r\n\t\t\t\t\t\t\t[`form-select-${size}`]: size,\r\n\t\t\t\t\t\t\t'text-muted': value === '' && placeholder,\r\n\t\t\t\t\t\t\t'is-invalid': !isValid && isTouched && invalidFeedback,\r\n\t\t\t\t\t\t\t'is-valid': !isValid && isTouched && !invalidFeedback,\r\n\t\t\t\t\t\t},\r\n\t\t\t\t\t\tclassName,\r\n\t\t\t\t\t)}\r\n\t\t\t\t\tname={name}\r\n\t\t\t\t\taria-label={ariaLabel}\r\n\t\t\t\t\taria-describedby={ariaDescribedby}\r\n\t\t\t\t\taria-labelledby={ariaLabelledby}\r\n\t\t\t\t\tmultiple={multiple}\r\n\t\t\t\t\tdisabled={disabled}\r\n\t\t\t\t\ttitle={title}\r\n\t\t\t\t\tvalue={value}\r\n\t\t\t\t\tdefaultValue={defaultValue}\r\n\t\t\t\t\trequired={required}\r\n\t\t\t\t\tonBlur={onBlur}\r\n\t\t\t\t\tonChange={onChange}\r\n\t\t\t\t\tonFocus={onFocus}\r\n\t\t\t\t\tonInput={onInput}\r\n\t\t\t\t\tonInvalid={onInvalid}\r\n\t\t\t\t\tonSelect={onSelect}\r\n\t\t\t\t\t{...props}>\r\n\t\t\t\t\t{placeholder && (\r\n\t\t\t\t\t\t<Option value='' hidden>\r\n\t\t\t\t\t\t\t{placeholder}\r\n\t\t\t\t\t\t</Option>\r\n\t\t\t\t\t)}\r\n\t\t\t\t\t{children || (list && <Options list={list} />)}\r\n\t\t\t\t</select>\r\n\t\t\t\t{isValidMessage && (\r\n\t\t\t\t\t<Validation\r\n\t\t\t\t\t\tisTouched={isTouched}\r\n\t\t\t\t\t\tinvalidFeedback={invalidFeedback}\r\n\t\t\t\t\t\tvalidFeedback={validFeedback}\r\n\t\t\t\t\t\tisTooltip={isTooltipFeedback}\r\n\t\t\t\t\t/>\r\n\t\t\t\t)}\r\n\t\t\t</>\r\n\t\t);\r\n\t},\r\n);\r\nSelect.displayName = 'Select';\r\n\r\nexport default Select;\r\n","import React, { useEffect, useRef } from 'react';\r\nimport { FormikHelpers, useFormik } from 'formik';\r\nimport Checks from '../components/bootstrap/forms/Checks';\r\n\r\nconst useSelectTable = (data: any[]) => {\r\n\tconst selectTable = useFormik({\r\n\t\tonSubmit<Values>(\r\n\t\t\t// eslint-disable-next-line @typescript-eslint/no-unused-vars\r\n\t\t\tvalues: Values,\r\n\t\t\t// eslint-disable-next-line @typescript-eslint/no-unused-vars\r\n\t\t\tformikHelpers: FormikHelpers<Values>,\r\n\t\t): void | Promise<any> {\r\n\t\t\treturn undefined;\r\n\t\t},\r\n\t\tinitialValues: {\r\n\t\t\tselectAll: false,\r\n\t\t\tselectedList: [],\r\n\t\t},\r\n\t});\r\n\r\n\t// Update Select List\r\n\tuseEffect(() => {\r\n\t\tif (selectTable.values.selectAll) {\r\n\t\t\tselectTable.setValues({\r\n\t\t\t\t...selectTable.values,\r\n\t\t\t\t// @ts-ignore\r\n\t\t\t\tselectedList: data.map((d) => d.id.toString()),\r\n\t\t\t});\r\n\t\t} else {\r\n\t\t\tselectTable.setValues({\r\n\t\t\t\t...selectTable.values,\r\n\t\t\t\tselectedList: [],\r\n\t\t\t});\r\n\t\t}\r\n\t\treturn () => {};\r\n\t\t// eslint-disable-next-line react-hooks/exhaustive-deps\r\n\t}, [selectTable.values.selectAll]);\r\n\r\n\t// Select All -- indeterminate\r\n\tconst ref = useRef<HTMLInputElement>(null);\r\n\tuseEffect(() => {\r\n\t\tif (ref.current) {\r\n\t\t\tif (\r\n\t\t\t\t!!selectTable.values.selectedList.length &&\r\n\t\t\t\tselectTable.values.selectedList.length !== data.map((d) => d.id.toString()).length\r\n\t\t\t) {\r\n\t\t\t\tref.current.checked = false;\r\n\t\t\t\tref.current.indeterminate = true;\r\n\t\t\t} else if (\r\n\t\t\t\tselectTable.values.selectedList.length === data.map((d) => d.id.toString()).length\r\n\t\t\t) {\r\n\t\t\t\tref.current.checked = true;\r\n\t\t\t\tref.current.indeterminate = false;\r\n\t\t\t} else if (selectTable.values.selectedList.length === 0) {\r\n\t\t\t\tref.current.checked = false;\r\n\t\t\t\tref.current.indeterminate = false;\r\n\t\t\t}\r\n\t\t}\r\n\t}, [selectTable.values.selectAll, selectTable.values.selectedList, data]);\r\n\r\n\tconst SelectAllCheck = (\r\n\t\t<Checks\r\n\t\t\tref={ref}\r\n\t\t\tid='selectAll'\r\n\t\t\tonChange={selectTable.handleChange}\r\n\t\t\tchecked={selectTable.values.selectAll}\r\n\t\t\tariaLabel='Select All'\r\n\t\t/>\r\n\t);\r\n\r\n\tconst selectItemHandleChange = selectTable.handleChange;\r\n\tconst selectedIdList = selectTable.values.selectedList;\r\n\r\n\treturn { selectTable, selectItemHandleChange, selectedIdList, SelectAllCheck };\r\n};\r\nexport default useSelectTable;\r\n","import { useMemo, useState } from 'react';\r\n\r\nconst useSortableData = (items: any[], config = null) => {\r\n\tconst [sortConfig, setSortConfig] = useState(config);\r\n\r\n\tconst sortedItems = useMemo(() => {\r\n\t\tconst sortableItems = [...items];\r\n\t\tif (sortConfig !== null) {\r\n\t\t\tsortableItems.sort((a, b) => {\r\n\t\t\t\t// @ts-ignore\r\n\t\t\t\tif (a[sortConfig.key] < b[sortConfig.key]) {\r\n\t\t\t\t\t// @ts-ignore\r\n\t\t\t\t\treturn sortConfig.direction === 'ascending' ? -1 : 1;\r\n\t\t\t\t}\r\n\t\t\t\t// @ts-ignore\r\n\t\t\t\tif (a[sortConfig.key] > b[sortConfig.key]) {\r\n\t\t\t\t\t// @ts-ignore\r\n\t\t\t\t\treturn sortConfig.direction === 'ascending' ? 1 : -1;\r\n\t\t\t\t}\r\n\t\t\t\treturn 0;\r\n\t\t\t});\r\n\t\t}\r\n\t\treturn sortableItems;\r\n\t}, [items, sortConfig]);\r\n\r\n\tconst requestSort = (key: any) => {\r\n\t\tlet direction = 'ascending';\r\n\t\t// @ts-ignore\r\n\t\tif (sortConfig && sortConfig.key === key && sortConfig.direction === 'ascending') {\r\n\t\t\tdirection = 'descending';\r\n\t\t}\r\n\t\t// @ts-ignore\r\n\t\tsetSortConfig({ key, direction });\r\n\t};\r\n\r\n\tconst getClassNamesFor = (key: any) => {\r\n\t\tif (!sortConfig) {\r\n\t\t\treturn 'd-none';\r\n\t\t}\r\n\r\n\t\t// @ts-ignore\r\n\t\treturn sortConfig.key === key ? sortConfig.direction : 'd-none';\r\n\t};\r\n\r\n\treturn { items: sortedItems, requestSort, getClassNamesFor, sortConfig };\r\n};\r\n\r\nexport default useSortableData;\r\n","import React, { useState } from 'react';\r\nimport { componentPagesMenu } from '../../../menu';\r\nimport SubHeader, { SubHeaderLeft } from '../../../layout/SubHeader/SubHeader';\r\nimport Breadcrumb from '../../../components/bootstrap/Breadcrumb';\r\nimport Page from '../../../layout/Page/Page';\r\nimport PageWrapper from '../../../layout/PageWrapper/PageWrapper';\r\nimport Card, {\r\n\tCardBody,\r\n\tCardCodeView,\r\n\tCardHeader,\r\n\tCardLabel,\r\n\tCardTitle,\r\n} from '../../../components/bootstrap/Card';\r\nimport useSortableData from '../../../hooks/useSortableData';\r\nimport PaginationButtons, { dataPagination } from '../../../components/PaginationButtons';\r\nimport useSelectTable from '../../../hooks/useSelectTable';\r\nimport Checks from '../../../components/bootstrap/forms/Checks';\r\nimport Icon from '../../../components/icon/Icon';\r\n\r\nconst TablePage = () => {\r\n\tconst GENERAL_USAGE = `\r\nconst Foo = () => {\r\n\tconst data = [\r\n\t\t{id: 1, firstName: 'John', lastName: 'Doe' },\r\n\t\t{id: 2, firstName: 'Ella', lastName: 'Oliver' },\r\n\t\t{id: 3, firstName: 'Sam', lastName: 'Roberts' },\r\n\t\t{id: 4, firstName: 'Grace', lastName: 'Buckland' },\r\n\t\t{id: 5, firstName: 'Jane', lastName: 'Lee' },\r\n\t\t{id: 6, firstName: 'Chloe', lastName: 'Walker' },\r\n\t\t{id: 7, firstName: 'Ryan', lastName: 'McGrath' },\r\n\t];\r\n\r\n\tconst [currentPage, setCurrentPage] = useState(1);\r\n\tconst [perPage, setPerPage] = useState(10);\r\n\r\n\tconst { items, requestSort, getClassNamesFor } = useSortableData(filteredData);\r\n\t/**\r\n\t  *\r\n\t  * items: Array\r\n\t  * requestSort: Function\r\n\t  * getClassNamesFor: Function\r\n\t  *\r\n\t  */\r\n\tconst onCurrentPageData = dataPagination(items, currentPage, perPage);\r\n\t/**\r\n\t  *\r\n\t  * onCurrentPageData: Array\r\n\t  *\r\n\t  */\r\n\tconst { selectTable, SelectAllCheck } = useSelectTable(onCurrentPageData);\r\n\t/**\r\n\t  *\r\n\t  * selectTable: Object\r\n\t  * SelectAllCheck: Node\r\n\t  *\r\n\t  */\r\n\r\n\treturn (\r\n\t\t<Card>\r\n\t\t\t<CardBody>\r\n\t\t\t\t<table>\r\n\t\t\t\t\t<thead className='table table-modern'>\r\n\t\t\t\t\t\t<tr>\r\n\t\t\t\t\t\t\t<th>{SelectAllCheck}</th>\r\n\t\t\t\t\t\t\t<th onClick={() => requestSort('firstName')}>\r\n\t\t\t\t\t\t\t\tFirst Name\r\n\t\t\t\t\t\t\t\t<Icon\r\n\t\t\t\t\t\t\t\t\tsize='lg'\r\n\t\t\t\t\t\t\t\t\tclassName={getClassNamesFor('firstName')}\r\n\t\t\t\t\t\t\t\t\ticon='FilterList'\r\n\t\t\t\t\t\t\t\t/>\r\n\t\t\t\t\t\t\t</th>\r\n\t\t\t\t\t\t\t<th onClick={() => requestSort('lastName')}>\r\n\t\t\t\t\t\t\t\tLast Name\r\n\t\t\t\t\t\t\t\t<Icon\r\n\t\t\t\t\t\t\t\t\tsize='lg'\r\n\t\t\t\t\t\t\t\t\tclassName={getClassNamesFor('lastName')}\r\n\t\t\t\t\t\t\t\t\ticon='FilterList'\r\n\t\t\t\t\t\t\t\t/>\r\n\t\t\t\t\t\t\t</th>\r\n\t\t\t\t\t\t</tr>\r\n\t\t\t\t\t</thead>\r\n\t\t\t\t\t<tbody>\r\n\t\t\t\t\t\t{onCurrentPageData.map((item) => (\r\n\t\t\t\t\t\t\t<tr key={item.id.toString()}>\r\n\t\t\t\t\t\t\t\t<td>\r\n\t\t\t\t\t\t\t\t\t<Checks\r\n\t\t\t\t\t\t\t\t\t\tid={item.id.toString()}\r\n\t\t\t\t\t\t\t\t\t\tname='selectedList'\r\n\t\t\t\t\t\t\t\t\t\tvalue={item.id}\r\n\t\t\t\t\t\t\t\t\t\tonChange={selectTable.handleChange}\r\n\t\t\t\t\t\t\t\t\t\tchecked={selectTable.values.selectedList.includes( item.id.toString() )}\r\n\t\t\t\t\t\t\t\t\t/>\r\n\t\t\t\t\t\t\t\t</td>\r\n\t\t\t\t\t\t\t\t<td>{item.firstName}</td>\r\n\t\t\t\t\t\t\t\t<td>{item.lastName}</td>\r\n\t\t\t\t\t\t\t</tr>\r\n\t\t\t\t\t\t))}\r\n\t\t\t\t\t</tbody>\r\n\t\t\t\t</table>\r\n\t\t\t</CardBody>\r\n\t\t\t<PaginationButtons\r\n\t\t\t\tdata={items}\r\n\t\t\t\tlabel='items'\r\n\t\t\t\tsetCurrentPage={setCurrentPage}\r\n\t\t\t\tcurrentPage={currentPage}\r\n\t\t\t\tperPage={perPage}\r\n\t\t\t\tsetPerPage={setPerPage}\r\n\t\t\t/>\r\n\t\t</Card>\r\n\t);\r\n}`;\r\n\r\n\tconst data = [\r\n\t\t{ id: 1, firstName: 'John', lastName: 'Doe' },\r\n\t\t{ id: 2, firstName: 'Ella', lastName: 'Oliver' },\r\n\t\t{ id: 3, firstName: 'Sam', lastName: 'Roberts' },\r\n\t\t{ id: 4, firstName: 'Grace', lastName: 'Buckland' },\r\n\t\t{ id: 5, firstName: 'Jane', lastName: 'Lee' },\r\n\t\t{ id: 6, firstName: 'Chloe', lastName: 'Walker' },\r\n\t\t{ id: 7, firstName: 'Ryan', lastName: 'McGrath' },\r\n\t];\r\n\r\n\tconst [currentPage, setCurrentPage] = useState(1);\r\n\tconst [perPage, setPerPage] = useState(3);\r\n\r\n\tconst { items, requestSort, getClassNamesFor } = useSortableData(data);\r\n\tconst onCurrentPageData = dataPagination(items, currentPage, perPage);\r\n\tconst { selectTable, SelectAllCheck } = useSelectTable(onCurrentPageData);\r\n\r\n\treturn (\r\n\t\t<PageWrapper title={componentPagesMenu.components.subMenu.table.text}>\r\n\t\t\t<SubHeader>\r\n\t\t\t\t<SubHeaderLeft>\r\n\t\t\t\t\t<Breadcrumb\r\n\t\t\t\t\t\tlist={[\r\n\t\t\t\t\t\t\t{\r\n\t\t\t\t\t\t\t\ttitle: componentPagesMenu.components.text,\r\n\t\t\t\t\t\t\t\tto: `/${componentPagesMenu.components.path}`,\r\n\t\t\t\t\t\t\t},\r\n\t\t\t\t\t\t\t{\r\n\t\t\t\t\t\t\t\ttitle: componentPagesMenu.components.subMenu.table.text,\r\n\t\t\t\t\t\t\t\tto: `/${componentPagesMenu.components.subMenu.table.path}`,\r\n\t\t\t\t\t\t\t},\r\n\t\t\t\t\t\t]}\r\n\t\t\t\t\t/>\r\n\t\t\t\t</SubHeaderLeft>\r\n\t\t\t</SubHeader>\r\n\t\t\t<Page>\r\n\t\t\t\t<div className='row'>\r\n\t\t\t\t\t<div className='col-12'>\r\n\t\t\t\t\t\t<Card>\r\n\t\t\t\t\t\t\t<CardHeader>\r\n\t\t\t\t\t\t\t\t<CardLabel icon='Assignment'>\r\n\t\t\t\t\t\t\t\t\t<CardTitle>General Usage</CardTitle>\r\n\t\t\t\t\t\t\t\t</CardLabel>\r\n\t\t\t\t\t\t\t</CardHeader>\r\n\t\t\t\t\t\t\t<CardBody>\r\n\t\t\t\t\t\t\t\t<CardCodeView>{GENERAL_USAGE}</CardCodeView>\r\n\t\t\t\t\t\t\t</CardBody>\r\n\t\t\t\t\t\t</Card>\r\n\t\t\t\t\t</div>\r\n\t\t\t\t\t<div className='col-12'>\r\n\t\t\t\t\t\t<Card>\r\n\t\t\t\t\t\t\t<CardBody>\r\n\t\t\t\t\t\t\t\t<table className='table table-modern'>\r\n\t\t\t\t\t\t\t\t\t<thead>\r\n\t\t\t\t\t\t\t\t\t\t<tr>\r\n\t\t\t\t\t\t\t\t\t\t\t<th style={{ width: 50 }}>{SelectAllCheck}</th>\r\n\t\t\t\t\t\t\t\t\t\t\t<th\r\n\t\t\t\t\t\t\t\t\t\t\t\tonClick={() => requestSort('firstName')}\r\n\t\t\t\t\t\t\t\t\t\t\t\tclassName='cursor-pointer text-decoration-underline'>\r\n\t\t\t\t\t\t\t\t\t\t\t\tFirst Name{' '}\r\n\t\t\t\t\t\t\t\t\t\t\t\t<Icon\r\n\t\t\t\t\t\t\t\t\t\t\t\t\tsize='lg'\r\n\t\t\t\t\t\t\t\t\t\t\t\t\tclassName={getClassNamesFor('firstName')}\r\n\t\t\t\t\t\t\t\t\t\t\t\t\ticon='FilterList'\r\n\t\t\t\t\t\t\t\t\t\t\t\t/>\r\n\t\t\t\t\t\t\t\t\t\t\t</th>\r\n\t\t\t\t\t\t\t\t\t\t\t<th\r\n\t\t\t\t\t\t\t\t\t\t\t\tonClick={() => requestSort('lastName')}\r\n\t\t\t\t\t\t\t\t\t\t\t\tclassName='cursor-pointer text-decoration-underline'>\r\n\t\t\t\t\t\t\t\t\t\t\t\tLast Name{' '}\r\n\t\t\t\t\t\t\t\t\t\t\t\t<Icon\r\n\t\t\t\t\t\t\t\t\t\t\t\t\tsize='lg'\r\n\t\t\t\t\t\t\t\t\t\t\t\t\tclassName={getClassNamesFor('lastName')}\r\n\t\t\t\t\t\t\t\t\t\t\t\t\ticon='FilterList'\r\n\t\t\t\t\t\t\t\t\t\t\t\t/>\r\n\t\t\t\t\t\t\t\t\t\t\t</th>\r\n\t\t\t\t\t\t\t\t\t\t</tr>\r\n\t\t\t\t\t\t\t\t\t</thead>\r\n\t\t\t\t\t\t\t\t\t<tbody>\r\n\t\t\t\t\t\t\t\t\t\t{onCurrentPageData.map((item) => (\r\n\t\t\t\t\t\t\t\t\t\t\t<tr key={item.id}>\r\n\t\t\t\t\t\t\t\t\t\t\t\t<td aria-label='Check'>\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t<Checks\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t\tid={item.id.toString()}\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t\tname='selectedList'\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t\tvalue={item.id}\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t\tonChange={selectTable.handleChange}\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t\tchecked={selectTable.values.selectedList.includes(\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t// @ts-ignore\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\titem.id.toString(),\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t)}\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t/>\r\n\t\t\t\t\t\t\t\t\t\t\t\t</td>\r\n\t\t\t\t\t\t\t\t\t\t\t\t<td>{item.firstName}</td>\r\n\t\t\t\t\t\t\t\t\t\t\t\t<td>{item.lastName}</td>\r\n\t\t\t\t\t\t\t\t\t\t\t</tr>\r\n\t\t\t\t\t\t\t\t\t\t))}\r\n\t\t\t\t\t\t\t\t\t</tbody>\r\n\t\t\t\t\t\t\t\t</table>\r\n\t\t\t\t\t\t\t</CardBody>\r\n\t\t\t\t\t\t\t<PaginationButtons\r\n\t\t\t\t\t\t\t\tdata={items}\r\n\t\t\t\t\t\t\t\tlabel='items'\r\n\t\t\t\t\t\t\t\tsetCurrentPage={setCurrentPage}\r\n\t\t\t\t\t\t\t\tcurrentPage={currentPage}\r\n\t\t\t\t\t\t\t\tperPage={perPage}\r\n\t\t\t\t\t\t\t\tsetPerPage={setPerPage}\r\n\t\t\t\t\t\t\t/>\r\n\t\t\t\t\t\t</Card>\r\n\t\t\t\t\t</div>\r\n\t\t\t\t</div>\r\n\t\t\t</Page>\r\n\t\t</PageWrapper>\r\n\t);\r\n};\r\n\r\nexport default TablePage;\r\n"],"names":["PER_COUNT","dataPagination","data","currentPage","perPage","filter","i","index","_ref","setCurrentPage","setPerPage","label","totalItems","length","totalPage","Math","ceil","_jsxs","CardFooter","children","_jsx","CardFooterLeft","className","getInfo","start","end","CardFooterRight","Pagination","ariaLabel","PaginationItem","isFirst","isDisabled","onClick","isPrev","pagination","items","push","reverse","isActive","isNext","isLast","Select","size","onChange","e","parseInt","target","value","toString","Object","keys","map","Option","BreadcrumbItem","tag","to","divider","TagWrapper","classNames","active","cloneElement","props","NavLink","_ref2","list","listTag","itemTag","autoActive","isToHome","Icon","icon","DIVIDER","style","item","title","Children","child","disabled","ariaLabelledby","Options","text","forwardRef","ref","role","onKeyDown","tabIndex","undefined","displayName","ChecksGroup","id","isInline","isValid","isTouched","invalidFeedback","validFeedback","isTooltipFeedback","_Fragment","isValidMessage","Validation","isTooltip","Checks","name","type","checked","isFormCheckInput","onBlur","onFocus","onInput","onInvalid","onSelect","INNER","htmlFor","required","placeholder","ariaDescribedby","multiple","defaultValue","hidden","selectTable","useFormik","onSubmit","values","formikHelpers","initialValues","selectAll","selectedList","useEffect","setValues","d","useRef","current","indeterminate","SelectAllCheck","handleChange","selectItemHandleChange","selectedIdList","config","arguments","sortConfig","setSortConfig","useState","useMemo","sortableItems","sort","a","b","key","direction","requestSort","getClassNamesFor","TablePage","useSortableData","firstName","lastName","onCurrentPageData","useSelectTable","PageWrapper","componentPagesMenu","components","subMenu","table","SubHeader","SubHeaderLeft","Breadcrumb","path","Page","Card","CardHeader","CardLabel","CardTitle","CardBody","CardCodeView","width","includes","PaginationButtons"],"sourceRoot":""}